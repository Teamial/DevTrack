"use strict";var Wa=Object.create;var Qe=Object.defineProperty;var Ha=Object.getOwnPropertyDescriptor;var za=Object.getOwnPropertyNames;var Va=Object.getPrototypeOf,Ka=Object.prototype.hasOwnProperty;var _s=e=>{throw TypeError(e)};var Ja=(e,t,r)=>t in e?Qe(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var Ya=(e,t)=>()=>(e&&(t=e(e=0)),t);var he=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),ys=(e,t)=>{for(var r in t)Qe(e,r,{get:t[r],enumerable:!0})},ks=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of za(t))!Ka.call(e,o)&&o!==r&&Qe(e,o,{get:()=>t[o],enumerable:!(s=Ha(t,o))||s.enumerable});return e};var H=(e,t,r)=>(r=e!=null?Wa(Va(e)):{},ks(t||!e||!e.__esModule?Qe(r,"default",{value:e,enumerable:!0}):r,e)),Gs=e=>ks(Qe({},"__esModule",{value:!0}),e);var Ss=(e,t,r)=>Ja(e,typeof t!="symbol"?t+"":t,r),ar=(e,t,r)=>t.has(e)||_s("Cannot "+r);var f=(e,t,r)=>(ar(e,t,"read from private field"),r?r.call(e):t.get(e)),te=(e,t,r)=>t.has(e)?_s("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),j=(e,t,r,s)=>(ar(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r),_e=(e,t,r)=>(ar(e,t,"access private method"),r);var Zs=he((gg,Qs)=>{var Ne=1e3,qe=Ne*60,We=qe*60,Fe=We*24,Uc=Fe*7,jc=Fe*365.25;Qs.exports=function(e,t){t=t||{};var r=typeof e;if(r==="string"&&e.length>0)return Ic(e);if(r==="number"&&isFinite(e))return t.long?$c(e):Mc(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function Ic(e){if(e=String(e),!(e.length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]),s=(t[2]||"ms").toLowerCase();switch(s){case"years":case"year":case"yrs":case"yr":case"y":return r*jc;case"weeks":case"week":case"w":return r*Uc;case"days":case"day":case"d":return r*Fe;case"hours":case"hour":case"hrs":case"hr":case"h":return r*We;case"minutes":case"minute":case"mins":case"min":case"m":return r*qe;case"seconds":case"second":case"secs":case"sec":case"s":return r*Ne;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function Mc(e){var t=Math.abs(e);return t>=Fe?Math.round(e/Fe)+"d":t>=We?Math.round(e/We)+"h":t>=qe?Math.round(e/qe)+"m":t>=Ne?Math.round(e/Ne)+"s":e+"ms"}function $c(e){var t=Math.abs(e);return t>=Fe?yt(e,t,Fe,"day"):t>=We?yt(e,t,We,"hour"):t>=qe?yt(e,t,qe,"minute"):t>=Ne?yt(e,t,Ne,"second"):e+" ms"}function yt(e,t,r,s){var o=t>=r*1.5;return Math.round(e/r)+" "+s+(o?"s":"")}});var br=he((hg,eo)=>{function Bc(e){r.debug=r,r.default=r,r.coerce=c,r.disable=i,r.enable=o,r.enabled=a,r.humanize=Zs(),r.destroy=p,Object.keys(e).forEach(u=>{r[u]=e[u]}),r.names=[],r.skips=[],r.formatters={};function t(u){let d=0;for(let l=0;l<u.length;l++)d=(d<<5)-d+u.charCodeAt(l),d|=0;return r.colors[Math.abs(d)%r.colors.length]}r.selectColor=t;function r(u){let d,l=null,m,b;function g(...E){if(!g.enabled)return;let v=g,A=Number(new Date),W=A-(d||A);v.diff=W,v.prev=d,v.curr=A,d=A,E[0]=r.coerce(E[0]),typeof E[0]!="string"&&E.unshift("%O");let K=0;E[0]=E[0].replace(/%([a-zA-Z%])/g,(P,Y)=>{if(P==="%%")return"%";K++;let U=r.formatters[Y];if(typeof U=="function"){let J=E[K];P=U.call(v,J),E.splice(K,1),K--}return P}),r.formatArgs.call(v,E),(v.log||r.log).apply(v,E)}return g.namespace=u,g.useColors=r.useColors(),g.color=r.selectColor(u),g.extend=s,g.destroy=r.destroy,Object.defineProperty(g,"enabled",{enumerable:!0,configurable:!1,get:()=>l!==null?l:(m!==r.namespaces&&(m=r.namespaces,b=r.enabled(u)),b),set:E=>{l=E}}),typeof r.init=="function"&&r.init(g),g}function s(u,d){let l=r(this.namespace+(typeof d>"u"?":":d)+u);return l.log=this.log,l}function o(u){r.save(u),r.namespaces=u,r.names=[],r.skips=[];let d=(typeof u=="string"?u:"").trim().replace(" ",",").split(",").filter(Boolean);for(let l of d)l[0]==="-"?r.skips.push(l.slice(1)):r.names.push(l)}function n(u,d){let l=0,m=0,b=-1,g=0;for(;l<u.length;)if(m<d.length&&(d[m]===u[l]||d[m]==="*"))d[m]==="*"?(b=m,g=l,m++):(l++,m++);else if(b!==-1)m=b+1,g++,l=g;else return!1;for(;m<d.length&&d[m]==="*";)m++;return m===d.length}function i(){let u=[...r.names,...r.skips.map(d=>"-"+d)].join(",");return r.enable(""),u}function a(u){for(let d of r.skips)if(n(u,d))return!1;for(let d of r.names)if(n(u,d))return!0;return!1}function c(u){return u instanceof Error?u.stack||u.message:u}function p(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return r.enable(r.load()),r}eo.exports=Bc});var to=he((ne,kt)=>{ne.formatArgs=qc;ne.save=Wc;ne.load=Hc;ne.useColors=Nc;ne.storage=zc();ne.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})();ne.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function Nc(){if(typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs))return!0;if(typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function qc(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+kt.exports.humanize(this.diff),!this.useColors)return;let t="color: "+this.color;e.splice(1,0,t,"color: inherit");let r=0,s=0;e[0].replace(/%[a-zA-Z%]/g,o=>{o!=="%%"&&(r++,o==="%c"&&(s=r))}),e.splice(s,0,t)}ne.log=console.debug||console.log||(()=>{});function Wc(e){try{e?ne.storage.setItem("debug",e):ne.storage.removeItem("debug")}catch{}}function Hc(){let e;try{e=ne.storage.getItem("debug")}catch{}return!e&&typeof process<"u"&&"env"in process&&(e=process.env.DEBUG),e}function zc(){try{return localStorage}catch{}}kt.exports=br()(ne);var{formatters:Vc}=kt.exports;Vc.j=function(e){try{return JSON.stringify(e)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}});var so={};ys(so,{createSupportsColor:()=>_r,default:()=>Qc});function ce(e,t=globalThis.Deno?globalThis.Deno.args:St.default.argv){let r=e.startsWith("-")?"":e.length===1?"-":"--",s=t.indexOf(r+e),o=t.indexOf("--");return s!==-1&&(o===-1||s<o)}function Kc(){if("FORCE_COLOR"in D)return D.FORCE_COLOR==="true"?1:D.FORCE_COLOR==="false"?0:D.FORCE_COLOR.length===0?1:Math.min(Number.parseInt(D.FORCE_COLOR,10),3)}function Jc(e){return e===0?!1:{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function Yc(e,{streamIsTTY:t,sniffFlags:r=!0}={}){let s=Kc();s!==void 0&&(Gt=s);let o=r?Gt:s;if(o===0)return 0;if(r){if(ce("color=16m")||ce("color=full")||ce("color=truecolor"))return 3;if(ce("color=256"))return 2}if("TF_BUILD"in D&&"AGENT_NAME"in D)return 1;if(e&&!t&&o===void 0)return 0;let n=o||0;if(D.TERM==="dumb")return n;if(St.default.platform==="win32"){let i=ro.default.release().split(".");return Number(i[0])>=10&&Number(i[2])>=10586?Number(i[2])>=14931?3:2:1}if("CI"in D)return"GITHUB_ACTIONS"in D||"GITEA_ACTIONS"in D?3:["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","BUILDKITE","DRONE"].some(i=>i in D)||D.CI_NAME==="codeship"?1:n;if("TEAMCITY_VERSION"in D)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(D.TEAMCITY_VERSION)?1:0;if(D.COLORTERM==="truecolor"||D.TERM==="xterm-kitty")return 3;if("TERM_PROGRAM"in D){let i=Number.parseInt((D.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(D.TERM_PROGRAM){case"iTerm.app":return i>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(D.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(D.TERM)||"COLORTERM"in D?1:n}function _r(e,t={}){let r=Yc(e,{streamIsTTY:e&&e.isTTY,...t});return Jc(r)}var St,ro,vr,D,Gt,Xc,Qc,oo=Ya(()=>{St=H(require("process"),1),ro=H(require("os"),1),vr=H(require("tty"),1);({env:D}=St.default);ce("no-color")||ce("no-colors")||ce("color=false")||ce("color=never")?Gt=0:(ce("color")||ce("colors")||ce("color=true")||ce("color=always"))&&(Gt=1);Xc={stdout:_r({isTTY:vr.default.isatty(1)}),stderr:_r({isTTY:vr.default.isatty(2)})},Qc=Xc});var io=he((z,Pt)=>{var Zc=require("tty"),Ct=require("util");z.init=iu;z.log=su;z.formatArgs=tu;z.save=ou;z.load=nu;z.useColors=eu;z.destroy=Ct.deprecate(()=>{},"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");z.colors=[6,2,3,4,5,1];try{let e=(oo(),Gs(so));e&&(e.stderr||e).level>=2&&(z.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}z.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{let r=t.substring(6).toLowerCase().replace(/_([a-z])/g,(o,n)=>n.toUpperCase()),s=process.env[t];return/^(yes|on|true|enabled)$/i.test(s)?s=!0:/^(no|off|false|disabled)$/i.test(s)?s=!1:s==="null"?s=null:s=Number(s),e[r]=s,e},{});function eu(){return"colors"in z.inspectOpts?!!z.inspectOpts.colors:Zc.isatty(process.stderr.fd)}function tu(e){let{namespace:t,useColors:r}=this;if(r){let s=this.color,o="\x1B[3"+(s<8?s:"8;5;"+s),n=`  ${o};1m${t} \x1B[0m`;e[0]=n+e[0].split(`
`).join(`
`+n),e.push(o+"m+"+Pt.exports.humanize(this.diff)+"\x1B[0m")}else e[0]=ru()+t+" "+e[0]}function ru(){return z.inspectOpts.hideDate?"":new Date().toISOString()+" "}function su(...e){return process.stderr.write(Ct.formatWithOptions(z.inspectOpts,...e)+`
`)}function ou(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function nu(){return process.env.DEBUG}function iu(e){e.inspectOpts={};let t=Object.keys(z.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=z.inspectOpts[t[r]]}Pt.exports=br()(z);var{formatters:no}=Pt.exports;no.o=function(e){return this.inspectOpts.colors=this.useColors,Ct.inspect(e,this.inspectOpts).split(`
`).map(t=>t.trim()).join(" ")};no.O=function(e){return this.inspectOpts.colors=this.useColors,Ct.inspect(e,this.inspectOpts)}});var kr=he((fg,yr)=>{typeof process>"u"||process.type==="renderer"||process.browser===!0||process.__nwjs?yr.exports=to():yr.exports=io()});var ao=he(ie=>{"use strict";var au=ie&&ie.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(ie,"__esModule",{value:!0});var cu=require("fs"),uu=au(kr()),He=uu.default("@kwsites/file-exists");function pu(e,t,r){He("checking %s",e);try{let s=cu.statSync(e);return s.isFile()&&t?(He("[OK] path represents a file"),!0):s.isDirectory()&&r?(He("[OK] path represents a directory"),!0):(He("[FAIL] path represents something other than a file or directory"),!1)}catch(s){if(s.code==="ENOENT")return He("[FAIL] path is not accessible: %o",s),!1;throw He("[FATAL] %o",s),s}}function lu(e,t=ie.READABLE){return pu(e,(t&ie.FILE)>0,(t&ie.FOLDER)>0)}ie.exists=lu;ie.FILE=1;ie.FOLDER=2;ie.READABLE=ie.FILE+ie.FOLDER});var co=he(Ot=>{"use strict";function du(e){for(var t in e)Ot.hasOwnProperty(t)||(Ot[t]=e[t])}Object.defineProperty(Ot,"__esModule",{value:!0});du(ao())});var Sr=he(De=>{"use strict";Object.defineProperty(De,"__esModule",{value:!0});De.createDeferred=De.deferred=void 0;function Gr(){let e,t,r="pending";return{promise:new Promise((o,n)=>{e=o,t=n}),done(o){r==="pending"&&(r="resolved",e(o))},fail(o){r==="pending"&&(r="rejected",t(o))},get fulfilled(){return r!=="pending"},get status(){return r}}}De.deferred=Gr;De.createDeferred=Gr;De.default=Gr});var Xi=he((Yg,Yi)=>{"use strict";Yi.exports=Ki;function Ki(e,t,r){e instanceof RegExp&&(e=Vi(e,r)),t instanceof RegExp&&(t=Vi(t,r));var s=Ji(e,t,r);return s&&{start:s[0],end:s[1],pre:r.slice(0,s[0]),body:r.slice(s[0]+e.length,s[1]),post:r.slice(s[1]+t.length)}}function Vi(e,t){var r=t.match(e);return r?r[0]:null}Ki.range=Ji;function Ji(e,t,r){var s,o,n,i,a,c=r.indexOf(e),p=r.indexOf(t,c+1),u=c;if(c>=0&&p>0){if(e===t)return[c,p];for(s=[],n=r.length;u>=0&&!a;)u==c?(s.push(u),c=r.indexOf(e,u+1)):s.length==1?a=[s.pop(),p]:(o=s.pop(),o<n&&(n=o,i=p),p=r.indexOf(t,u+1)),u=c<p&&c>=0?c:p;s.length&&(a=[n,i])}return a}});var na=he((Xg,oa)=>{var Qi=Xi();oa.exports=Gd;var Zi="\0SLASH"+Math.random()+"\0",ea="\0OPEN"+Math.random()+"\0",Ts="\0CLOSE"+Math.random()+"\0",ta="\0COMMA"+Math.random()+"\0",ra="\0PERIOD"+Math.random()+"\0";function fs(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function yd(e){return e.split("\\\\").join(Zi).split("\\{").join(ea).split("\\}").join(Ts).split("\\,").join(ta).split("\\.").join(ra)}function kd(e){return e.split(Zi).join("\\").split(ea).join("{").split(Ts).join("}").split(ta).join(",").split(ra).join(".")}function sa(e){if(!e)return[""];var t=[],r=Qi("{","}",e);if(!r)return e.split(",");var s=r.pre,o=r.body,n=r.post,i=s.split(",");i[i.length-1]+="{"+o+"}";var a=sa(n);return n.length&&(i[i.length-1]+=a.shift(),i.push.apply(i,a)),t.push.apply(t,i),t}function Gd(e){return e?(e.substr(0,2)==="{}"&&(e="\\{\\}"+e.substr(2)),gt(yd(e),!0).map(kd)):[]}function Sd(e){return"{"+e+"}"}function Cd(e){return/^-?0\d/.test(e)}function Pd(e,t){return e<=t}function Od(e,t){return e>=t}function gt(e,t){var r=[],s=Qi("{","}",e);if(!s)return[e];var o=s.pre,n=s.post.length?gt(s.post,!1):[""];if(/\$$/.test(s.pre))for(var i=0;i<n.length;i++){var a=o+"{"+s.body+"}"+n[i];r.push(a)}else{var c=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(s.body),p=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(s.body),u=c||p,d=s.body.indexOf(",")>=0;if(!u&&!d)return s.post.match(/,.*\}/)?(e=s.pre+"{"+s.body+Ts+s.post,gt(e)):[e];var l;if(u)l=s.body.split(/\.\./);else if(l=sa(s.body),l.length===1&&(l=gt(l[0],!1).map(Sd),l.length===1))return n.map(function(wt){return s.pre+l[0]+wt});var m;if(u){var b=fs(l[0]),g=fs(l[1]),E=Math.max(l[0].length,l[1].length),v=l.length==3?Math.abs(fs(l[2])):1,A=Pd,W=g<b;W&&(v*=-1,A=Od);var K=l.some(Cd);m=[];for(var R=b;A(R,g);R+=v){var P;if(p)P=String.fromCharCode(R),P==="\\"&&(P="");else if(P=String(R),K){var Y=E-P.length;if(Y>0){var U=new Array(Y+1).join("0");R<0?P="-"+U+P.slice(1):P=U+P}}m.push(P)}}else{m=[];for(var J=0;J<l.length;J++)m.push.apply(m,gt(l[J],!1))}for(var J=0;J<m.length;J++)for(var i=0;i<n.length;i++){var a=o+m[J]+n[i];(!t||u||a)&&r.push(a)}}return r}});var gm={};ys(gm,{activate:()=>dm,deactivate:()=>mm});module.exports=Gs(gm);var G=H(require("vscode"));function ye(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function bt(e,t,r,s){if(typeof r!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(t)?t.reverse().reduce((o,n)=>bt.bind(null,e,n,o,s),r)():Promise.resolve().then(()=>e.registry[t]?e.registry[t].reduce((o,n)=>n.hook.bind(null,o,s),r)():r(s))}function Cs(e,t,r,s){let o=s;e.registry[r]||(e.registry[r]=[]),t==="before"&&(s=(n,i)=>Promise.resolve().then(o.bind(null,i)).then(n.bind(null,i))),t==="after"&&(s=(n,i)=>{let a;return Promise.resolve().then(n.bind(null,i)).then(c=>(a=c,o(a,i))).then(()=>a)}),t==="error"&&(s=(n,i)=>Promise.resolve().then(n.bind(null,i)).catch(a=>o(a,i))),e.registry[r].push({hook:s,orig:o})}function Ps(e,t,r){if(!e.registry[t])return;let s=e.registry[t].map(o=>o.orig).indexOf(r);s!==-1&&e.registry[t].splice(s,1)}var Os=Function.bind,Rs=Os.bind(Os);function As(e,t,r){let s=Rs(Ps,null).apply(null,r?[t,r]:[t]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(o=>{let n=r?[t,o,r]:[t,o];e[o]=e.api[o]=Rs(Cs,null).apply(null,n)})}function Xa(){let e=Symbol("Singular"),t={registry:{}},r=bt.bind(null,t,e);return As(r,t,e),r}function Qa(){let e={registry:{}},t=bt.bind(null,e);return As(t,e),t}var Fs={Singular:Xa,Collection:Qa};var Za="0.0.0-development",ec=`octokit-endpoint.js/${Za} ${ye()}`,tc={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":ec},mediaType:{format:""}};function rc(e){return e?Object.keys(e).reduce((t,r)=>(t[r.toLowerCase()]=e[r],t),{}):{}}function sc(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;let t=Object.getPrototypeOf(e);if(t===null)return!0;let r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}function Ls(e,t){let r=Object.assign({},e);return Object.keys(t).forEach(s=>{sc(t[s])?s in e?r[s]=Ls(e[s],t[s]):Object.assign(r,{[s]:t[s]}):Object.assign(r,{[s]:t[s]})}),r}function Ds(e){for(let t in e)e[t]===void 0&&delete e[t];return e}function ur(e,t,r){var o;if(typeof t=="string"){let[n,i]=t.split(" ");r=Object.assign(i?{method:n,url:i}:{url:n},r)}else r=Object.assign({},t);r.headers=rc(r.headers),Ds(r),Ds(r.headers);let s=Ls(e||{},r);return r.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(n=>!s.mediaType.previews.includes(n)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(n=>n.replace(/-preview/,""))),s}function oc(e,t){let r=/\?/.test(e)?"&":"?",s=Object.keys(t);return s.length===0?e:e+r+s.map(o=>o==="q"?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(t[o])}`).join("&")}var nc=/\{[^}]+\}/g;function ic(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function ac(e){let t=e.match(nc);return t?t.map(ic).reduce((r,s)=>r.concat(s),[]):[]}function xs(e,t){let r={__proto__:null};for(let s of Object.keys(e))t.indexOf(s)===-1&&(r[s]=e[s]);return r}function Us(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t){return/%[0-9A-Fa-f]/.test(t)||(t=encodeURI(t).replace(/%5B/g,"[").replace(/%5D/g,"]")),t}).join("")}function Be(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function Ze(e,t,r){return t=e==="+"||e==="#"?Us(t):Be(t),r?Be(r)+"="+t:t}function $e(e){return e!=null}function cr(e){return e===";"||e==="&"||e==="?"}function cc(e,t,r,s){var o=e[r],n=[];if($e(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),n.push(Ze(t,o,cr(t)?r:""));else if(s==="*")Array.isArray(o)?o.filter($e).forEach(function(i){n.push(Ze(t,i,cr(t)?r:""))}):Object.keys(o).forEach(function(i){$e(o[i])&&n.push(Ze(t,o[i],i))});else{let i=[];Array.isArray(o)?o.filter($e).forEach(function(a){i.push(Ze(t,a))}):Object.keys(o).forEach(function(a){$e(o[a])&&(i.push(Be(a)),i.push(Ze(t,o[a].toString())))}),cr(t)?n.push(Be(r)+"="+i.join(",")):i.length!==0&&n.push(i.join(","))}else t===";"?$e(o)&&n.push(Be(r)):o===""&&(t==="&"||t==="?")?n.push(Be(r)+"="):o===""&&n.push("");return n}function uc(e){return{expand:pc.bind(null,e)}}function pc(e,t){var r=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,n){if(o){let a="",c=[];if(r.indexOf(o.charAt(0))!==-1&&(a=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(p){var u=/([^:\*]*)(?::(\d+)|(\*))?/.exec(p);c.push(cc(t,a,u[1],u[2]||u[3]))}),a&&a!=="+"){var i=",";return a==="?"?i="&":a!=="#"&&(i=a),(c.length!==0?a:"")+c.join(i)}else return c.join(",")}else return Us(n)}),e==="/"?e:e.replace(/\/$/,"")}function js(e){var u;let t=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,n=xs(e,["method","baseUrl","url","headers","request","mediaType"]),i=ac(r);r=uc(r).expand(n),/^http/.test(r)||(r=e.baseUrl+r);let a=Object.keys(e).filter(d=>i.includes(d)).concat("baseUrl"),c=xs(n,a);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(d=>d.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),r.endsWith("/graphql")&&(u=e.mediaType.previews)!=null&&u.length)){let d=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=d.concat(e.mediaType.previews).map(l=>{let m=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${l}-preview${m}`}).join(",")}return["GET","HEAD"].includes(t)?r=oc(r,c):"data"in c?o=c.data:Object.keys(c).length&&(o=c),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&typeof o>"u"&&(o=""),Object.assign({method:t,url:r,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function lc(e,t,r){return js(ur(e,t,r))}function Is(e,t){let r=ur(e,t),s=lc.bind(null,r);return Object.assign(s,{DEFAULTS:r,defaults:Is.bind(null,r),merge:ur.bind(null,r),parse:js})}var Ms=Is(null,tc);var Re=class extends Error{name;status;request;response;constructor(t,r,s){super(t),this.name="HttpError",this.status=Number.parseInt(r),Number.isNaN(this.status)&&(this.status=0),"response"in s&&(this.response=s.response);let o=Object.assign({},s.request);s.request.headers.authorization&&(o.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o}};var dc="0.0.0-development",mc={headers:{"user-agent":`octokit-request.js/${dc} ${ye()}`}};function gc(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;let t=Object.getPrototypeOf(e);if(t===null)return!0;let r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}async function $s(e){var d,l,m,b,g;let t=((d=e.request)==null?void 0:d.fetch)||globalThis.fetch;if(!t)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");let r=((l=e.request)==null?void 0:l.log)||console,s=((m=e.request)==null?void 0:m.parseSuccessResponseBody)!==!1,o=gc(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,n=Object.fromEntries(Object.entries(e.headers).map(([E,v])=>[E,String(v)])),i;try{i=await t(e.url,{method:e.method,body:o,redirect:(b=e.request)==null?void 0:b.redirect,headers:n,signal:(g=e.request)==null?void 0:g.signal,...e.body&&{duplex:"half"}})}catch(E){let v="Unknown Error";if(E instanceof Error){if(E.name==="AbortError")throw E.status=500,E;v=E.message,E.name==="TypeError"&&"cause"in E&&(E.cause instanceof Error?v=E.cause.message:typeof E.cause=="string"&&(v=E.cause))}let A=new Re(v,500,{request:e});throw A.cause=E,A}let a=i.status,c=i.url,p={};for(let[E,v]of i.headers)p[E]=v;let u={url:c,status:a,headers:p,data:""};if("deprecation"in p){let E=p.link&&p.link.match(/<([^>]+)>; rel="deprecation"/),v=E&&E.pop();r.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${p.sunset}${v?`. See ${v}`:""}`)}if(a===204||a===205)return u;if(e.method==="HEAD"){if(a<400)return u;throw new Re(i.statusText,a,{response:u,request:e})}if(a===304)throw u.data=await pr(i),new Re("Not modified",a,{response:u,request:e});if(a>=400)throw u.data=await pr(i),new Re(hc(u.data),a,{response:u,request:e});return u.data=s?await pr(i):i.body,u}async function pr(e){let t=e.headers.get("content-type");return/application\/json/.test(t)?e.json().catch(()=>e.text()).catch(()=>""):!t||/^text\/|charset=utf-8$/.test(t)?e.text():e.arrayBuffer()}function hc(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){let t="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(r=>JSON.stringify(r)).join(", ")}${t}`:`${e.message}${t}`}return`Unknown error: ${JSON.stringify(e)}`}function lr(e,t){let r=e.defaults(t);return Object.assign(function(o,n){let i=r.merge(o,n);if(!i.request||!i.request.hook)return $s(r.parse(i));let a=(c,p)=>$s(r.parse(r.merge(c,p)));return Object.assign(a,{endpoint:r,defaults:lr.bind(null,r)}),i.request.hook(a,i)},{endpoint:r,defaults:lr.bind(null,r)})}var et=lr(Ms,mc);var fc="0.0.0-development";function Tc(e){return`Request failed due to following response errors:
`+e.errors.map(t=>` - ${t.message}`).join(`
`)}var Ec=class extends Error{constructor(e,t,r){super(Tc(r)),this.request=e,this.headers=t,this.response=r,this.errors=r.errors,this.data=r.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}name="GraphqlResponseError";errors;data},wc=["method","baseUrl","url","headers","request","query","mediaType"],bc=["query","method","url"],Bs=/\/api\/v3\/?$/;function vc(e,t,r){if(r){if(typeof t=="string"&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(let i in r)if(bc.includes(i))return Promise.reject(new Error(`[@octokit/graphql] "${i}" cannot be used as variable name`))}let s=typeof t=="string"?Object.assign({query:t},r):t,o=Object.keys(s).reduce((i,a)=>wc.includes(a)?(i[a]=s[a],i):(i.variables||(i.variables={}),i.variables[a]=s[a],i),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Bs.test(n)&&(o.url=n.replace(Bs,"/api/graphql")),e(o).then(i=>{if(i.data.errors){let a={};for(let c of Object.keys(i.headers))a[c]=i.headers[c];throw new Ec(o,a,i.data)}return i.data.data})}function dr(e,t){let r=e.defaults(t);return Object.assign((o,n)=>vc(r,o,n),{defaults:dr.bind(null,r),endpoint:r.endpoint})}var Dm=dr(et,{headers:{"user-agent":`octokit-graphql.js/${fc} ${ye()}`},method:"POST",url:"/graphql"});function Ns(e){return dr(e,{method:"POST",url:"/graphql"})}var _c=/^v1\./,yc=/^ghs_/,kc=/^ghu_/;async function Gc(e){let t=e.split(/\./).length===3,r=_c.test(e)||yc.test(e),s=kc.test(e);return{type:"token",token:e,tokenType:t?"app":r?"installation":s?"user-to-server":"oauth"}}function Sc(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function Cc(e,t,r,s){let o=t.endpoint.merge(r,s);return o.headers.authorization=Sc(e),t(o)}var qs=function(t){if(!t)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof t!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return t=t.replace(/^(token|bearer) +/i,""),Object.assign(Gc.bind(null,t),{hook:Cc.bind(null,t)})};var mr="6.1.2";var Ws=()=>{},Pc=console.warn.bind(console),Oc=console.error.bind(console),Hs=`octokit-core.js/${mr} ${ye()}`,vt=class{static VERSION=mr;static defaults(t){return class extends this{constructor(...s){let o=s[0]||{};if(typeof t=="function"){super(t(o));return}super(Object.assign({},t,o,o.userAgent&&t.userAgent?{userAgent:`${o.userAgent} ${t.userAgent}`}:null))}}}static plugins=[];static plugin(...t){let r=this.plugins;return class extends this{static plugins=r.concat(t.filter(o=>!r.includes(o)))}}constructor(t={}){let r=new Fs.Collection,s={baseUrl:et.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},t.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=t.userAgent?`${t.userAgent} ${Hs}`:Hs,t.baseUrl&&(s.baseUrl=t.baseUrl),t.previews&&(s.mediaType.previews=t.previews),t.timeZone&&(s.headers["time-zone"]=t.timeZone),this.request=et.defaults(s),this.graphql=Ns(this.request).defaults(s),this.log=Object.assign({debug:Ws,info:Ws,warn:Pc,error:Oc},t.log),this.hook=r,t.authStrategy){let{authStrategy:n,...i}=t,a=n(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:i},t.auth));r.wrap("request",a.hook),this.auth=a}else if(!t.auth)this.auth=async()=>({type:"unauthenticated"});else{let n=qs(t.auth);r.wrap("request",n.hook),this.auth=n}let o=this.constructor;for(let n=0;n<o.plugins.length;++n)Object.assign(this,o.plugins[n](this,t))}request;graphql;log;hook;auth};var zs="5.3.1";function gr(e){e.hook.wrap("request",(t,r)=>{e.log.debug("request",r);let s=Date.now(),o=e.request.endpoint.parse(r),n=o.url.replace(r.baseUrl,"");return t(r).then(i=>{let a=i.headers["x-github-request-id"];return e.log.info(`${o.method} ${n} - ${i.status} with id ${a} in ${Date.now()-s}ms`),i}).catch(i=>{var c;let a=((c=i.response)==null?void 0:c.headers["x-github-request-id"])||"UNKNOWN";throw e.log.error(`${o.method} ${n} - ${i.status} with id ${a} in ${Date.now()-s}ms`),i})})}gr.VERSION=zs;var Rc="0.0.0-development";function Ac(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;let r=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;let n=Object.keys(e.data)[0],i=e.data[n];return e.data=i,typeof r<"u"&&(e.data.incomplete_results=r),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e}function hr(e,t,r){let s=typeof t=="function"?t.endpoint(r):e.request.endpoint(t,r),o=typeof t=="function"?t:e.request,n=s.method,i=s.headers,a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};try{let c=await o({method:n,url:a,headers:i}),p=Ac(c);return a=((p.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:p}}catch(c){if(c.status!==409)throw c;return a="",{value:{status:200,headers:{},data:[]}}}}})}}function Vs(e,t,r,s){return typeof r=="function"&&(s=r,r=void 0),Ks(e,[],hr(e,t,r)[Symbol.asyncIterator](),s)}function Ks(e,t,r,s){return r.next().then(o=>{if(o.done)return t;let n=!1;function i(){n=!0}return t=t.concat(s?s(o.value,i):o.value.data),n?t:Ks(e,t,r,s)})}var Ym=Object.assign(Vs,{iterator:hr});function fr(e){return{paginate:Object.assign(Vs.bind(null,e),{iterator:hr.bind(null,e)})}}fr.VERSION=Rc;var Tr="13.2.6";var Fc={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},Js=Fc;var Ae=new Map;for(let[e,t]of Object.entries(Js))for(let[r,s]of Object.entries(t)){let[o,n,i]=s,[a,c]=o.split(/ /),p=Object.assign({method:a,url:c},n);Ae.has(e)||Ae.set(e,new Map),Ae.get(e).set(r,{scope:e,methodName:r,endpointDefaults:p,decorations:i})}var Dc={has({scope:e},t){return Ae.get(e).has(t)},getOwnPropertyDescriptor(e,t){return{value:this.get(e,t),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,t,r){return Object.defineProperty(e.cache,t,r),!0},deleteProperty(e,t){return delete e.cache[t],!0},ownKeys({scope:e}){return[...Ae.get(e).keys()]},set(e,t,r){return e.cache[t]=r},get({octokit:e,scope:t,cache:r},s){if(r[s])return r[s];let o=Ae.get(t).get(s);if(!o)return;let{endpointDefaults:n,decorations:i}=o;return i?r[s]=xc(e,t,s,n,i):r[s]=e.request.defaults(n),r[s]}};function Er(e){let t={};for(let r of Ae.keys())t[r]=new Proxy({octokit:e,scope:r,cache:{}},Dc);return t}function xc(e,t,r,s,o){let n=e.request.defaults(s);function i(...a){let c=n.endpoint.merge(...a);if(o.mapToData)return c=Object.assign({},c,{data:c[o.mapToData],[o.mapToData]:void 0}),n(c);if(o.renamed){let[p,u]=o.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${p}.${u}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){let p=n.endpoint.merge(...a);for(let[u,d]of Object.entries(o.renamedParameters))u in p&&(e.log.warn(`"${u}" parameter is deprecated for "octokit.${t}.${r}()". Use "${d}" instead`),d in p||(p[d]=p[u]),delete p[u]);return n(p)}return n(...a)}return Object.assign(i,n)}function Lc(e){return{rest:Er(e)}}Lc.VERSION=Tr;function wr(e){let t=Er(e);return{...t,rest:t}}wr.VERSION=Tr;var Ys="21.0.2";var Xs=vt.plugin(gr,wr,fr).defaults({userAgent:`octokit-rest.js/${Ys}`});var tt=H(require("vscode")),_t=class{constructor(t){this.token="";this.outputChannel=t}setToken(t){this.token=t,this.octokit=new Xs({auth:this.token})}async createRepo(t,r="DevTrack Repository"){try{return(await this.octokit.repos.createForAuthenticatedUser({name:t,description:r,private:!1})).data.clone_url}catch(s){return this.outputChannel.appendLine(`Error creating repository: ${s.message}`),tt.window.showErrorMessage(`DevTrack: Failed to create repository "${t}".`),null}}async repoExists(t){try{let r=await this.getUsername();return r?(await this.octokit.repos.get({owner:r,repo:t}),!0):(tt.window.showErrorMessage("DevTrack: Unable to retrieve GitHub username."),!1)}catch(r){return r.status===404||tt.window.showErrorMessage(`DevTrack: Error checking repository "${t}".`),!1}}async getUsername(){try{let{data:t}=await this.octokit.users.getAuthenticated();return t.login}catch(t){return this.outputChannel.appendLine(`Error fetching username: ${t.message}`),tt.window.showErrorMessage("DevTrack: Unable to fetch GitHub username."),null}}};var Nt=H(co(),1),It=H(kr(),1),Un=require("child_process"),wi=H(Sr(),1),ze=H(Sr(),1),Hi=require("events"),$t=Object.defineProperty,mu=Object.defineProperties,gu=Object.getOwnPropertyDescriptor,hu=Object.getOwnPropertyDescriptors,zr=Object.getOwnPropertyNames,uo=Object.getOwnPropertySymbols,qo=Object.prototype.hasOwnProperty,fu=Object.prototype.propertyIsEnumerable,po=(e,t,r)=>t in e?$t(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,ue=(e,t)=>{for(var r in t||(t={}))qo.call(t,r)&&po(e,r,t[r]);if(uo)for(var r of uo(t))fu.call(t,r)&&po(e,r,t[r]);return e},ot=(e,t)=>mu(e,hu(t)),T=(e,t)=>function(){return e&&(t=(0,e[zr(e)[0]])(e=0)),t},Tu=(e,t)=>function(){return t||(0,e[zr(e)[0]])((t={exports:{}}).exports,t),t.exports},M=(e,t)=>{for(var r in t)$t(e,r,{get:t[r],enumerable:!0})},Eu=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of zr(t))!qo.call(e,o)&&o!==r&&$t(e,o,{get:()=>t[o],enumerable:!(s=gu(t,o))||s.enumerable});return e},x=e=>Eu($t({},"__esModule",{value:!0}),e),st=(e,t,r)=>new Promise((s,o)=>{var n=c=>{try{a(r.next(c))}catch(p){o(p)}},i=c=>{try{a(r.throw(c))}catch(p){o(p)}},a=c=>c.done?s(c.value):Promise.resolve(c.value).then(n,i);a((r=r.apply(e,t)).next())});function wu(...e){let t=new String(e);return Bt.set(t,e),t}function Ut(e){return e instanceof String&&Bt.has(e)}function lo(e){return Bt.get(e)||[]}var Bt,ct=T({"src/lib/args/pathspec.ts"(){"use strict";Bt=new WeakMap}}),be,Ge=T({"src/lib/errors/git-error.ts"(){"use strict";be=class extends Error{constructor(e,t){super(t),this.task=e,Object.setPrototypeOf(this,new.target.prototype)}}}}),ut,Ke=T({"src/lib/errors/git-response-error.ts"(){"use strict";Ge(),ut=class extends be{constructor(e,t){super(void 0,t||String(e)),this.git=e}}}}),Wo,Ho=T({"src/lib/errors/task-configuration-error.ts"(){"use strict";Ge(),Wo=class extends be{constructor(e){super(void 0,e)}}}});function zo(e){return typeof e=="function"?e:Ue}function Vo(e){return typeof e=="function"&&e!==Ue}function Ko(e,t){let r=e.indexOf(t);return r<=0?[e,""]:[e.substr(0,r),e.substr(r+1)]}function Jo(e,t=0){return Yo(e)&&e.length>t?e[t]:void 0}function Le(e,t=0){if(Yo(e)&&e.length>t)return e[e.length-1-t]}function Yo(e){return!!(e&&typeof e.length=="number")}function pt(e="",t=!0,r=`
`){return e.split(r).reduce((s,o)=>{let n=t?o.trim():o;return n&&s.push(n),s},[])}function Vr(e,t){return pt(e,!0).map(r=>t(r))}function Kr(e){return(0,Nt.exists)(e,Nt.FOLDER)}function S(e,t){return Array.isArray(e)?e.includes(t)||e.push(t):e.add(t),t}function Xo(e,t){return Array.isArray(e)&&!e.includes(t)&&e.push(t),e}function qt(e,t){if(Array.isArray(e)){let r=e.indexOf(t);r>=0&&e.splice(r,1)}else e.delete(t);return t}function fe(e){return Array.isArray(e)?e:[e]}function Qo(e){return e.replace(/[\s-]+(.)/g,(t,r)=>r.toUpperCase())}function Zo(e){return fe(e).map(String)}function O(e,t=0){if(e==null)return t;let r=parseInt(e,10);return isNaN(r)?t:r}function nt(e,t){let r=[];for(let s=0,o=e.length;s<o;s++)r.push(t,e[s]);return r}function it(e){return(Array.isArray(e)?Buffer.concat(e):e).toString("utf-8")}function en(e,t){return Object.assign({},...t.map(r=>r in e?{[r]:e[r]}:{}))}function Dr(e=0){return new Promise(t=>setTimeout(t,e))}function xr(e){if(e!==!1)return e}var Ve,Ue,lt,Wt=T({"src/lib/utils/util.ts"(){"use strict";Ve="\0",Ue=()=>{},lt=Object.prototype.toString.call.bind(Object.prototype.toString)}});function Te(e,t,r){return t(e)?e:arguments.length>2?r:void 0}function Jr(e,t){let r=Ut(e)?"string":typeof e;return/number|string|boolean/.test(r)&&(!t||!t.includes(r))}function Yr(e){return!!e&&lt(e)==="[object Object]"}function tn(e){return typeof e=="function"}var dt,X,rn,jt,Xr,sn=T({"src/lib/utils/argument-filters.ts"(){"use strict";Wt(),ct(),dt=e=>Array.isArray(e),X=e=>typeof e=="string",rn=e=>Array.isArray(e)&&e.every(X),jt=e=>X(e)||Array.isArray(e)&&e.every(X),Xr=e=>e==null||"number|boolean|function".includes(typeof e)?!1:Array.isArray(e)||typeof e=="string"||typeof e.length=="number"}}),Lr,bu=T({"src/lib/utils/exit-codes.ts"(){"use strict";Lr=(e=>(e[e.SUCCESS=0]="SUCCESS",e[e.ERROR=1]="ERROR",e[e.NOT_FOUND=-2]="NOT_FOUND",e[e.UNCLEAN=128]="UNCLEAN",e))(Lr||{})}}),at,vu=T({"src/lib/utils/git-output-streams.ts"(){"use strict";at=class{constructor(e,t){this.stdOut=e,this.stdErr=t}asStrings(){return new at(this.stdOut.toString("utf8"),this.stdErr.toString("utf8"))}}}}),k,ke,_u=T({"src/lib/utils/line-parser.ts"(){"use strict";k=class{constructor(e,t){this.matches=[],this.parse=(r,s)=>(this.resetMatches(),this._regExp.every((o,n)=>this.addMatch(o,n,r(n)))?this.useMatches(s,this.prepareMatches())!==!1:!1),this._regExp=Array.isArray(e)?e:[e],t&&(this.useMatches=t)}useMatches(e,t){throw new Error("LineParser:useMatches not implemented")}resetMatches(){this.matches.length=0}prepareMatches(){return this.matches}addMatch(e,t,r){let s=r&&e.exec(r);return s&&this.pushMatch(t,s),!!s}pushMatch(e,t){this.matches.push(...t.slice(1))}},ke=class extends k{addMatch(e,t,r){return/^remote:\s/.test(String(r))&&super.addMatch(e,t,r)}pushMatch(e,t){(e>0||t.length>1)&&super.pushMatch(e,t)}}}});function on(...e){let t=process.cwd(),r=Object.assign(ue({baseDir:t},nn),...e.filter(s=>typeof s=="object"&&s));return r.baseDir=r.baseDir||t,r.trimmed=r.trimmed===!0,r}var nn,yu=T({"src/lib/utils/simple-git-options.ts"(){"use strict";nn={binary:"git",maxConcurrentProcesses:5,config:[],trimmed:!1}}});function Qr(e,t=[]){return Yr(e)?Object.keys(e).reduce((r,s)=>{let o=e[s];return Ut(o)?r.push(o):Jr(o,["boolean"])?r.push(s+"="+o):r.push(s),r},t):t}function re(e,t=0,r=!1){let s=[];for(let o=0,n=t<0?e.length:t;o<n;o++)"string|number".includes(typeof e[o])&&s.push(String(e[o]));return Qr(Zr(e),s),r||s.push(...ku(e)),s}function ku(e){let t=typeof Le(e)=="function";return Te(Le(e,t?1:0),dt,[])}function Zr(e){let t=tn(Le(e));return Te(Le(e,t?1:0),Yr)}function L(e,t=!0){let r=zo(Le(e));return t||Vo(r)?r:void 0}var Gu=T({"src/lib/utils/task-options.ts"(){"use strict";sn(),Wt(),ct()}});function Ur(e,t){return e(t.stdOut,t.stdErr)}function oe(e,t,r,s=!0){return fe(r).forEach(o=>{for(let n=pt(o,s),i=0,a=n.length;i<a;i++){let c=(p=0)=>{if(!(i+p>=a))return n[i+p]};t.some(({parse:p})=>p(c,e))}}),e}var Su=T({"src/lib/utils/task-parser.ts"(){"use strict";Wt()}}),an={};M(an,{ExitCodes:()=>Lr,GitOutputStreams:()=>at,LineParser:()=>k,NOOP:()=>Ue,NULL:()=>Ve,RemoteLineParser:()=>ke,append:()=>S,appendTaskOptions:()=>Qr,asArray:()=>fe,asCamelCase:()=>Qo,asFunction:()=>zo,asNumber:()=>O,asStringArray:()=>Zo,bufferToString:()=>it,callTaskParser:()=>Ur,createInstanceConfig:()=>on,delay:()=>Dr,filterArray:()=>dt,filterFunction:()=>tn,filterHasLength:()=>Xr,filterPlainObject:()=>Yr,filterPrimitives:()=>Jr,filterString:()=>X,filterStringArray:()=>rn,filterStringOrStringArray:()=>jt,filterType:()=>Te,first:()=>Jo,folderExists:()=>Kr,forEachLineWithContent:()=>Vr,getTrailingOptions:()=>re,including:()=>Xo,isUserFunction:()=>Vo,last:()=>Le,objectToString:()=>lt,orVoid:()=>xr,parseStringResponse:()=>oe,pick:()=>en,prefixedArray:()=>nt,remove:()=>qt,splitOn:()=>Ko,toLinesWithContent:()=>pt,trailingFunctionArgument:()=>L,trailingOptionsArgument:()=>Zr});var y=T({"src/lib/utils/index.ts"(){"use strict";sn(),bu(),vu(),_u(),yu(),Gu(),Su(),Wt()}}),cn={};M(cn,{CheckRepoActions:()=>jr,checkIsBareRepoTask:()=>pn,checkIsRepoRootTask:()=>un,checkIsRepoTask:()=>Cu});function Cu(e){switch(e){case"bare":return pn();case"root":return un()}return{commands:["rev-parse","--is-inside-work-tree"],format:"utf-8",onError:Ht,parser:es}}function un(){return{commands:["rev-parse","--git-dir"],format:"utf-8",onError:Ht,parser(t){return/^\.(git)?$/.test(t.trim())}}}function pn(){return{commands:["rev-parse","--is-bare-repository"],format:"utf-8",onError:Ht,parser:es}}function Pu(e){return/(Not a git repository|Kein Git-Repository)/i.test(String(e))}var jr,Ht,es,ln=T({"src/lib/tasks/check-is-repo.ts"(){"use strict";y(),jr=(e=>(e.BARE="bare",e.IN_TREE="tree",e.IS_REPO_ROOT="root",e))(jr||{}),Ht=({exitCode:e},t,r,s)=>{if(e===128&&Pu(t))return r(Buffer.from("false"));s(t)},es=e=>e.trim()==="true"}});function Ou(e,t){let r=new dn(e),s=e?gn:mn;return pt(t).forEach(o=>{let n=o.replace(s,"");r.paths.push(n),(hn.test(n)?r.folders:r.files).push(n)}),r}var dn,mn,gn,hn,Ru=T({"src/lib/responses/CleanSummary.ts"(){"use strict";y(),dn=class{constructor(e){this.dryRun=e,this.paths=[],this.files=[],this.folders=[]}},mn=/^[a-z]+\s*/i,gn=/^[a-z]+\s+[a-z]+\s*/i,hn=/\/$/}}),Ir={};M(Ir,{EMPTY_COMMANDS:()=>zt,adhocExecTask:()=>fn,configurationErrorTask:()=>se,isBufferTask:()=>En,isEmptyTask:()=>wn,straightThroughBufferTask:()=>Tn,straightThroughStringTask:()=>Z});function fn(e){return{commands:zt,format:"empty",parser:e}}function se(e){return{commands:zt,format:"empty",parser(){throw typeof e=="string"?new Wo(e):e}}}function Z(e,t=!1){return{commands:e,format:"utf-8",parser(r){return t?String(r).trim():r}}}function Tn(e){return{commands:e,format:"buffer",parser(t){return t}}}function En(e){return e.format==="buffer"}function wn(e){return e.format==="empty"||!e.commands.length}var zt,I=T({"src/lib/tasks/task.ts"(){"use strict";Ho(),zt=[]}}),bn={};M(bn,{CONFIG_ERROR_INTERACTIVE_MODE:()=>ts,CONFIG_ERROR_MODE_REQUIRED:()=>rs,CONFIG_ERROR_UNKNOWN_OPTION:()=>ss,CleanOptions:()=>Ft,cleanTask:()=>vn,cleanWithOptionsTask:()=>Au,isCleanOptionsArray:()=>Fu});function Au(e,t){let{cleanMode:r,options:s,valid:o}=Du(e);return r?o.options?(s.push(...t),s.some(Uu)?se(ts):vn(r,s)):se(ss+JSON.stringify(e)):se(rs)}function vn(e,t){return{commands:["clean",`-${e}`,...t],format:"utf-8",parser(s){return Ou(e==="n",s)}}}function Fu(e){return Array.isArray(e)&&e.every(t=>os.has(t))}function Du(e){let t,r=[],s={cleanMode:!1,options:!0};return e.replace(/[^a-z]i/g,"").split("").forEach(o=>{xu(o)?(t=o,s.cleanMode=!0):s.options=s.options&&Lu(r[r.length]=`-${o}`)}),{cleanMode:t,options:r,valid:s}}function xu(e){return e==="f"||e==="n"}function Lu(e){return/^-[a-z]$/i.test(e)&&os.has(e.charAt(1))}function Uu(e){return/^-[^\-]/.test(e)?e.indexOf("i")>0:e==="--interactive"}var ts,rs,ss,Ft,os,_n=T({"src/lib/tasks/clean.ts"(){"use strict";Ru(),y(),I(),ts="Git clean interactive mode is not supported",rs='Git clean mode parameter ("n" or "f") is required',ss="Git clean unknown option found in: ",Ft=(e=>(e.DRY_RUN="n",e.FORCE="f",e.IGNORED_INCLUDED="x",e.IGNORED_ONLY="X",e.EXCLUDING="e",e.QUIET="q",e.RECURSIVE="d",e))(Ft||{}),os=new Set(["i",...Zo(Object.values(Ft))])}});function ju(e){let t=new kn;for(let r of yn(e))t.addValue(r.file,String(r.key),r.value);return t}function Iu(e,t){let r=null,s=[],o=new Map;for(let n of yn(e,t))n.key===t&&(s.push(r=n.value),o.has(n.file)||o.set(n.file,[]),o.get(n.file).push(r));return{key:t,paths:Array.from(o.keys()),scopes:o,value:r,values:s}}function Mu(e){return e.replace(/^(file):/,"")}function*yn(e,t=null){let r=e.split("\0");for(let s=0,o=r.length-1;s<o;){let n=Mu(r[s++]),i=r[s++],a=t;if(i.includes(`
`)){let c=Ko(i,`
`);a=c[0],i=c[1]}yield{file:n,key:a,value:i}}}var kn,$u=T({"src/lib/responses/ConfigList.ts"(){"use strict";y(),kn=class{constructor(){this.files=[],this.values=Object.create(null)}get all(){return this._all||(this._all=this.files.reduce((e,t)=>Object.assign(e,this.values[t]),{})),this._all}addFile(e){if(!(e in this.values)){let t=Le(this.files);this.values[e]=t?Object.create(this.values[t]):{},this.files.push(e)}return this.values[e]}addValue(e,t,r){let s=this.addFile(e);s.hasOwnProperty(t)?Array.isArray(s[t])?s[t].push(r):s[t]=[s[t],r]:s[t]=r,this._all=void 0}}}});function Cr(e,t){return typeof e=="string"&&Mr.hasOwnProperty(e)?e:t}function Bu(e,t,r,s){let o=["config",`--${s}`];return r&&o.push("--add"),o.push(e,t),{commands:o,format:"utf-8",parser(n){return n}}}function Nu(e,t){let r=["config","--null","--show-origin","--get-all",e];return t&&r.splice(1,0,`--${t}`),{commands:r,format:"utf-8",parser(s){return Iu(s,e)}}}function qu(e){let t=["config","--list","--show-origin","--null"];return e&&t.push(`--${e}`),{commands:t,format:"utf-8",parser(r){return ju(r)}}}function Wu(){return{addConfig(e,t,...r){return this._runTask(Bu(e,t,r[0]===!0,Cr(r[1],"local")),L(arguments))},getConfig(e,t){return this._runTask(Nu(e,Cr(t,void 0)),L(arguments))},listConfig(...e){return this._runTask(qu(Cr(e[0],void 0)),L(arguments))}}}var Mr,Gn=T({"src/lib/tasks/config.ts"(){"use strict";$u(),y(),Mr=(e=>(e.system="system",e.global="global",e.local="local",e.worktree="worktree",e))(Mr||{})}});function Hu(e){return Sn.has(e)}var Pr,Sn,Cn=T({"src/lib/tasks/diff-name-status.ts"(){"use strict";Pr=(e=>(e.ADDED="A",e.COPIED="C",e.DELETED="D",e.MODIFIED="M",e.RENAMED="R",e.CHANGED="T",e.UNMERGED="U",e.UNKNOWN="X",e.BROKEN="B",e))(Pr||{}),Sn=new Set(Object.values(Pr))}});function zu(...e){return new On().param(...e)}function Vu(e){let t=new Set,r={};return Vr(e,s=>{let[o,n,i]=s.split(Ve);t.add(o),(r[o]=r[o]||[]).push({line:O(n),path:o,preview:i})}),{paths:t,results:r}}function Ku(){return{grep(e){let t=L(arguments),r=re(arguments);for(let o of Pn)if(r.includes(o))return this._runTask(se(`git.grep: use of "${o}" is not supported.`),t);typeof e=="string"&&(e=zu().param(e));let s=["grep","--null","-n","--full-name",...r,...e];return this._runTask({commands:s,format:"utf-8",parser(o){return Vu(o)}},t)}}}var Pn,rt,mo,On,Rn=T({"src/lib/tasks/grep.ts"(){"use strict";y(),I(),Pn=["-h"],rt=Symbol("grepQuery"),On=class{constructor(){this[mo]=[]}*[(mo=rt,Symbol.iterator)](){for(let e of this[rt])yield e}and(...e){return e.length&&this[rt].push("--and","(",...nt(e,"-e"),")"),this}param(...e){return this[rt].push(...nt(e,"-e")),this}}}}),An={};M(An,{ResetMode:()=>Dt,getResetMode:()=>Yu,resetTask:()=>Ju});function Ju(e,t){let r=["reset"];return Fn(e)&&r.push(`--${e}`),r.push(...t),Z(r)}function Yu(e){if(Fn(e))return e;switch(typeof e){case"string":case"undefined":return"soft"}}function Fn(e){return Dn.includes(e)}var Dt,Dn,xn=T({"src/lib/tasks/reset.ts"(){"use strict";I(),Dt=(e=>(e.MIXED="mixed",e.SOFT="soft",e.HARD="hard",e.MERGE="merge",e.KEEP="keep",e))(Dt||{}),Dn=Array.from(Object.values(Dt))}});function Xu(){return(0,It.default)("simple-git")}function go(e,t,r){return!t||!String(t).replace(/\s*/,"")?r?(s,...o)=>{e(s,...o),r(s,...o)}:e:(s,...o)=>{e(`%s ${s}`,t,...o),r&&r(s,...o)}}function Qu(e,t,{namespace:r}){if(typeof e=="string")return e;let s=t&&t.namespace||"";return s.startsWith(r)?s.substr(r.length+1):s||r}function ns(e,t,r,s=Xu()){let o=e&&`[${e}]`||"",n=[],i=typeof t=="string"?s.extend(t):t,a=Qu(Te(t,X),i,s);return p(r);function c(u,d){return S(n,ns(e,a.replace(/^[^:]+/,u),d,s))}function p(u){let d=u&&`[${u}]`||"",l=i&&go(i,d)||Ue,m=go(s,`${o} ${d}`,l);return Object.assign(i?l:m,{label:e,sibling:c,info:m,step:p})}}var Ln=T({"src/lib/git-logger.ts"(){"use strict";y(),It.default.formatters.L=e=>String(Xr(e)?e.length:"-"),It.default.formatters.B=e=>Buffer.isBuffer(e)?e.toString("utf8"):lt(e)}}),Rt,$r,Zu=T({"src/lib/runners/tasks-pending-queue.ts"(){"use strict";Ge(),Ln(),Rt=class{constructor(e="GitExecutor"){this.logLabel=e,this._queue=new Map}withProgress(e){return this._queue.get(e)}createProgress(e){let t=Rt.getName(e.commands[0]),r=ns(this.logLabel,t);return{task:e,logger:r,name:t}}push(e){let t=this.createProgress(e);return t.logger("Adding task to the queue, commands = %o",e.commands),this._queue.set(e,t),t}fatal(e){for(let[t,{logger:r}]of Array.from(this._queue.entries()))t===e.task?(r.info("Failed %o",e),r("Fatal exception, any as-yet un-started tasks run through this executor will not be attempted")):r.info("A fatal exception occurred in a previous task, the queue has been purged: %o",e.message),this.complete(t);if(this._queue.size!==0)throw new Error(`Queue size should be zero after fatal: ${this._queue.size}`)}complete(e){this.withProgress(e)&&this._queue.delete(e)}attempt(e){let t=this.withProgress(e);if(!t)throw new be(void 0,"TasksPendingQueue: attempt called for an unknown task");return t.logger("Starting task"),t}static getName(e="empty"){return`task:${e}:${++Rt.counter}`}},$r=Rt,$r.counter=0}});function xe(e,t){return{method:Jo(e.commands)||"",commands:t}}function ep(e,t){return r=>{t("[ERROR] child process exception %o",r),e.push(Buffer.from(String(r.stack),"ascii"))}}function ho(e,t,r,s){return o=>{r("%s received %L bytes",t,o),s("%B",o),e.push(o)}}var Br,tp=T({"src/lib/runners/git-executor-chain.ts"(){"use strict";Ge(),I(),y(),Zu(),Br=class{constructor(e,t,r){this._executor=e,this._scheduler=t,this._plugins=r,this._chain=Promise.resolve(),this._queue=new $r}get cwd(){return this._cwd||this._executor.cwd}set cwd(e){this._cwd=e}get env(){return this._executor.env}get outputHandler(){return this._executor.outputHandler}chain(){return this}push(e){return this._queue.push(e),this._chain=this._chain.then(()=>this.attemptTask(e))}attemptTask(e){return st(this,null,function*(){let t=yield this._scheduler.next(),r=()=>this._queue.complete(e);try{let{logger:s}=this._queue.attempt(e);return yield wn(e)?this.attemptEmptyTask(e,s):this.attemptRemoteTask(e,s)}catch(s){throw this.onFatalException(e,s)}finally{r(),t()}})}onFatalException(e,t){let r=t instanceof be?Object.assign(t,{task:e}):new be(e,t&&String(t));return this._chain=Promise.resolve(),this._queue.fatal(r),r}attemptRemoteTask(e,t){return st(this,null,function*(){let r=this._plugins.exec("spawn.binary","",xe(e,e.commands)),s=this._plugins.exec("spawn.args",[...e.commands],xe(e,e.commands)),o=yield this.gitResponse(e,r,s,this.outputHandler,t.step("SPAWN")),n=yield this.handleTaskData(e,s,o,t.step("HANDLE"));return t("passing response to task's parser as a %s",e.format),En(e)?Ur(e.parser,n):Ur(e.parser,n.asStrings())})}attemptEmptyTask(e,t){return st(this,null,function*(){return t("empty task bypassing child process to call to task's parser"),e.parser(this)})}handleTaskData(e,t,r,s){let{exitCode:o,rejection:n,stdOut:i,stdErr:a}=r;return new Promise((c,p)=>{s("Preparing to handle process response exitCode=%d stdOut=",o);let{error:u}=this._plugins.exec("task.error",{error:n},ue(ue({},xe(e,t)),r));if(u&&e.onError)return s.info("exitCode=%s handling with custom error handler"),e.onError(r,u,d=>{s.info("custom error handler treated as success"),s("custom error returned a %s",lt(d)),c(new at(Array.isArray(d)?Buffer.concat(d):d,Buffer.concat(a)))},p);if(u)return s.info("handling as error: exitCode=%s stdErr=%s rejection=%o",o,a.length,n),p(u);s.info("retrieving task output complete"),c(new at(Buffer.concat(i),Buffer.concat(a)))})}gitResponse(e,t,r,s,o){return st(this,null,function*(){let n=o.sibling("output"),i=this._plugins.exec("spawn.options",{cwd:this.cwd,env:this.env,windowsHide:!0},xe(e,e.commands));return new Promise(a=>{let c=[],p=[];o.info("%s %o",t,r),o("%O",i);let u=this._beforeSpawn(e,r);if(u)return a({stdOut:c,stdErr:p,exitCode:9901,rejection:u});this._plugins.exec("spawn.before",void 0,ot(ue({},xe(e,r)),{kill(l){u=l||u}}));let d=(0,Un.spawn)(t,r,i);d.stdout.on("data",ho(c,"stdOut",o,n.step("stdOut"))),d.stderr.on("data",ho(p,"stdErr",o,n.step("stdErr"))),d.on("error",ep(p,o)),s&&(o("Passing child process stdOut/stdErr to custom outputHandler"),s(t,d.stdout,d.stderr,[...r])),this._plugins.exec("spawn.after",void 0,ot(ue({},xe(e,r)),{spawned:d,close(l,m){a({stdOut:c,stdErr:p,exitCode:l,rejection:u||m})},kill(l){d.killed||(u=l,d.kill("SIGINT"))}}))})})}_beforeSpawn(e,t){let r;return this._plugins.exec("spawn.before",void 0,ot(ue({},xe(e,t)),{kill(s){r=s||r}})),r}}}}),jn={};M(jn,{GitExecutor:()=>In});var In,rp=T({"src/lib/runners/git-executor.ts"(){"use strict";tp(),In=class{constructor(e,t,r){this.cwd=e,this._scheduler=t,this._plugins=r,this._chain=new Br(this,this._scheduler,this._plugins)}chain(){return new Br(this,this._scheduler,this._plugins)}push(e){return this._chain.push(e)}}}});function sp(e,t,r=Ue){let s=n=>{r(null,n)},o=n=>{(n==null?void 0:n.task)===e&&r(n instanceof ut?op(n):n,void 0)};t.then(s,o)}function op(e){let t=s=>{console.warn(`simple-git deprecation notice: accessing GitResponseError.${s} should be GitResponseError.git.${s}, this will no longer be available in version 3`),t=Ue};return Object.create(e,Object.getOwnPropertyNames(e.git).reduce(r,{}));function r(s,o){return o in e||(s[o]={enumerable:!1,configurable:!1,get(){return t(o),e.git[o]}}),s}}var np=T({"src/lib/task-callback.ts"(){"use strict";Ke(),y()}});function fo(e,t){return fn(r=>{if(!Kr(e))throw new Error(`Git.cwd: cannot change to non-directory "${e}"`);return(t||r).cwd=e})}var ip=T({"src/lib/tasks/change-working-directory.ts"(){"use strict";y(),I()}});function Or(e){let t=["checkout",...e];return t[1]==="-b"&&t.includes("-B")&&(t[1]=qt(t,"-B")),Z(t)}function ap(){return{checkout(){return this._runTask(Or(re(arguments,1)),L(arguments))},checkoutBranch(e,t){return this._runTask(Or(["-b",e,t,...re(arguments)]),L(arguments))},checkoutLocalBranch(e){return this._runTask(Or(["-b",e,...re(arguments)]),L(arguments))}}}var cp=T({"src/lib/tasks/checkout.ts"(){"use strict";y(),I()}});function up(){return{count:0,garbage:0,inPack:0,packs:0,prunePackable:0,size:0,sizeGarbage:0,sizePack:0}}function pp(){return{countObjects(){return this._runTask({commands:["count-objects","--verbose"],format:"utf-8",parser(e){return oe(up(),[Mn],e)}})}}}var Mn,lp=T({"src/lib/tasks/count-objects.ts"(){"use strict";y(),Mn=new k(/([a-z-]+): (\d+)$/,(e,[t,r])=>{let s=Qo(t);e.hasOwnProperty(s)&&(e[s]=O(r))})}});function dp(e){return oe({author:null,branch:"",commit:"",root:!1,summary:{changes:0,insertions:0,deletions:0}},$n,e)}var $n,mp=T({"src/lib/parsers/parse-commit.ts"(){"use strict";y(),$n=[new k(/^\[([^\s]+)( \([^)]+\))? ([^\]]+)/,(e,[t,r,s])=>{e.branch=t,e.commit=s,e.root=!!r}),new k(/\s*Author:\s(.+)/i,(e,[t])=>{let r=t.split("<"),s=r.pop();!s||!s.includes("@")||(e.author={email:s.substr(0,s.length-1),name:r.join("<").trim()})}),new k(/(\d+)[^,]*(?:,\s*(\d+)[^,]*)(?:,\s*(\d+))/g,(e,[t,r,s])=>{e.summary.changes=parseInt(t,10)||0,e.summary.insertions=parseInt(r,10)||0,e.summary.deletions=parseInt(s,10)||0}),new k(/^(\d+)[^,]*(?:,\s*(\d+)[^(]+\(([+-]))?/,(e,[t,r,s])=>{e.summary.changes=parseInt(t,10)||0;let o=parseInt(r,10)||0;s==="-"?e.summary.deletions=o:s==="+"&&(e.summary.insertions=o)})]}});function gp(e,t,r){return{commands:["-c","core.abbrev=40","commit",...nt(e,"-m"),...t,...r],format:"utf-8",parser:dp}}function hp(){return{commit(t,...r){let s=L(arguments),o=e(t)||gp(fe(t),fe(Te(r[0],jt,[])),[...Te(r[1],dt,[]),...re(arguments,0,!0)]);return this._runTask(o,s)}};function e(t){return!jt(t)&&se("git.commit: requires the commit message to be supplied as a string/string[]")}}var fp=T({"src/lib/tasks/commit.ts"(){"use strict";mp(),y(),I()}});function Tp(){return{firstCommit(){return this._runTask(Z(["rev-list","--max-parents=0","HEAD"],!0),L(arguments))}}}var Ep=T({"src/lib/tasks/first-commit.ts"(){"use strict";y(),I()}});function wp(e,t){let r=["hash-object",e];return t&&r.push("-w"),Z(r,!0)}var bp=T({"src/lib/tasks/hash-object.ts"(){"use strict";I()}});function vp(e,t,r){let s=String(r).trim(),o;if(o=Bn.exec(s))return new xt(e,t,!1,o[1]);if(o=Nn.exec(s))return new xt(e,t,!0,o[1]);let n="",i=s.split(" ");for(;i.length;)if(i.shift()==="in"){n=i.join(" ");break}return new xt(e,t,/^re/i.test(s),n)}var xt,Bn,Nn,_p=T({"src/lib/responses/InitSummary.ts"(){"use strict";xt=class{constructor(e,t,r,s){this.bare=e,this.path=t,this.existing=r,this.gitDir=s}},Bn=/^Init.+ repository in (.+)$/,Nn=/^Rein.+ in (.+)$/}});function yp(e){return e.includes(is)}function kp(e=!1,t,r){let s=["init",...r];return e&&!yp(s)&&s.splice(1,0,is),{commands:s,format:"utf-8",parser(o){return vp(s.includes("--bare"),t,o)}}}var is,Gp=T({"src/lib/tasks/init.ts"(){"use strict";_p(),is="--bare"}});function as(e){for(let t=0;t<e.length;t++){let r=cs.exec(e[t]);if(r)return`--${r[1]}`}return""}function Sp(e){return cs.test(e)}var cs,mt=T({"src/lib/args/log-format.ts"(){"use strict";cs=/^--(stat|numstat|name-only|name-status)(=|$)/}}),qn,Cp=T({"src/lib/responses/DiffSummary.ts"(){"use strict";qn=class{constructor(){this.changed=0,this.deletions=0,this.insertions=0,this.files=[]}}}});function Wn(e=""){let t=Hn[e];return r=>oe(new qn,t,r,!1)}var Rr,To,Eo,wo,Hn,zn=T({"src/lib/parsers/parse-diff-summary.ts"(){"use strict";mt(),Cp(),Cn(),y(),Rr=[new k(/^(.+)\s+\|\s+(\d+)(\s+[+\-]+)?$/,(e,[t,r,s=""])=>{e.files.push({file:t.trim(),changes:O(r),insertions:s.replace(/[^+]/g,"").length,deletions:s.replace(/[^-]/g,"").length,binary:!1})}),new k(/^(.+) \|\s+Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)/,(e,[t,r,s])=>{e.files.push({file:t.trim(),before:O(r),after:O(s),binary:!0})}),new k(/(\d+) files? changed\s*((?:, \d+ [^,]+){0,2})/,(e,[t,r])=>{let s=/(\d+) i/.exec(r),o=/(\d+) d/.exec(r);e.changed=O(t),e.insertions=O(s==null?void 0:s[1]),e.deletions=O(o==null?void 0:o[1])})],To=[new k(/(\d+)\t(\d+)\t(.+)$/,(e,[t,r,s])=>{let o=O(t),n=O(r);e.changed++,e.insertions+=o,e.deletions+=n,e.files.push({file:s,changes:o+n,insertions:o,deletions:n,binary:!1})}),new k(/-\t-\t(.+)$/,(e,[t])=>{e.changed++,e.files.push({file:t,after:0,before:0,binary:!0})})],Eo=[new k(/(.+)$/,(e,[t])=>{e.changed++,e.files.push({file:t,changes:0,insertions:0,deletions:0,binary:!1})})],wo=[new k(/([ACDMRTUXB])([0-9]{0,3})\t(.[^\t]*)(\t(.[^\t]*))?$/,(e,[t,r,s,o,n])=>{e.changed++,e.files.push({file:n??s,changes:0,insertions:0,deletions:0,binary:!1,status:xr(Hu(t)&&t),from:xr(!!n&&s!==n&&s),similarity:O(r)})})],Hn={"":Rr,"--stat":Rr,"--numstat":To,"--name-status":wo,"--name-only":Eo}}});function Pp(e,t){return t.reduce((r,s,o)=>(r[s]=e[o]||"",r),Object.create({diff:null}))}function Vn(e=ls,t=Kn,r=""){let s=Wn(r);return function(o){let n=pt(o.trim(),!1,us).map(function(i){let a=i.split(ps),c=Pp(a[0].split(e),t);return a.length>1&&a[1].trim()&&(c.diff=s(a[1])),c});return{all:n,latest:n.length&&n[0]||null,total:n.length}}}var us,ps,ls,Kn,Jn=T({"src/lib/parsers/parse-list-log-summary.ts"(){"use strict";y(),zn(),mt(),us="\xF2\xF2\xF2\xF2\xF2\xF2 ",ps=" \xF2\xF2",ls=" \xF2 ",Kn=["hash","date","message","refs","author_name","author_email"]}}),Yn={};M(Yn,{diffSummaryTask:()=>Op,validateLogFormatConfig:()=>Vt});function Op(e){let t=as(e),r=["diff"];return t===""&&(t="--stat",r.push("--stat=4096")),r.push(...e),Vt(r)||{commands:r,format:"utf-8",parser:Wn(t)}}function Vt(e){let t=e.filter(Sp);if(t.length>1)return se(`Summary flags are mutually exclusive - pick one of ${t.join(",")}`);if(t.length&&e.includes("-z"))return se(`Summary flag ${t} parsing is not compatible with null termination option '-z'`)}var ds=T({"src/lib/tasks/diff.ts"(){"use strict";mt(),zn(),I()}});function Rp(e,t){let r=[],s=[];return Object.keys(e).forEach(o=>{r.push(o),s.push(String(e[o]))}),[r,s.join(t)]}function Ap(e){return Object.keys(e).reduce((t,r)=>(r in Nr||(t[r]=e[r]),t),{})}function Xn(e={},t=[]){let r=Te(e.splitter,X,ls),s=!Jr(e.format)&&e.format?e.format:{hash:"%H",date:e.strictDate===!1?"%ai":"%aI",message:"%s",refs:"%D",body:e.multiLine?"%B":"%b",author_name:e.mailMap!==!1?"%aN":"%an",author_email:e.mailMap!==!1?"%aE":"%ae"},[o,n]=Rp(s,r),i=[],a=[`--pretty=format:${us}${n}${ps}`,...t],c=e.n||e["max-count"]||e.maxCount;if(c&&a.push(`--max-count=${c}`),e.from||e.to){let p=e.symmetric!==!1?"...":"..";i.push(`${e.from||""}${p}${e.to||""}`)}return X(e.file)&&a.push("--follow",wu(e.file)),Qr(Ap(e),a),{fields:o,splitter:r,commands:[...a,...i]}}function Fp(e,t,r){let s=Vn(e,t,as(r));return{commands:["log",...r],format:"utf-8",parser:s}}function Dp(){return{log(...r){let s=L(arguments),o=Xn(Zr(arguments),Te(arguments[0],dt)),n=t(...r)||Vt(o.commands)||e(o);return this._runTask(n,s)}};function e(r){return Fp(r.splitter,r.fields,r.commands)}function t(r,s){return X(r)&&X(s)&&se("git.log(string, string) should be replaced with git.log({ from: string, to: string })")}}var Nr,Qn=T({"src/lib/tasks/log.ts"(){"use strict";mt(),ct(),Jn(),y(),I(),ds(),Nr=(e=>(e[e["--pretty"]=0]="--pretty",e[e["max-count"]=1]="max-count",e[e.maxCount=2]="maxCount",e[e.n=3]="n",e[e.file=4]="file",e[e.format=5]="format",e[e.from=6]="from",e[e.to=7]="to",e[e.splitter=8]="splitter",e[e.symmetric=9]="symmetric",e[e.mailMap=10]="mailMap",e[e.multiLine=11]="multiLine",e[e.strictDate=12]="strictDate",e))(Nr||{})}}),Lt,Zn,xp=T({"src/lib/responses/MergeSummary.ts"(){"use strict";Lt=class{constructor(e,t=null,r){this.reason=e,this.file=t,this.meta=r}toString(){return`${this.file}:${this.reason}`}},Zn=class{constructor(){this.conflicts=[],this.merges=[],this.result="success"}get failed(){return this.conflicts.length>0}get reason(){return this.result}toString(){return this.conflicts.length?`CONFLICTS: ${this.conflicts.join(", ")}`:"OK"}}}}),qr,ei,Lp=T({"src/lib/responses/PullSummary.ts"(){"use strict";qr=class{constructor(){this.remoteMessages={all:[]},this.created=[],this.deleted=[],this.files=[],this.deletions={},this.insertions={},this.summary={changes:0,deletions:0,insertions:0}}},ei=class{constructor(){this.remote="",this.hash={local:"",remote:""},this.branch={local:"",remote:""},this.message=""}toString(){return this.message}}}});function Ar(e){return e.objects=e.objects||{compressing:0,counting:0,enumerating:0,packReused:0,reused:{count:0,delta:0},total:{count:0,delta:0}}}function bo(e){let t=/^\s*(\d+)/.exec(e),r=/delta (\d+)/i.exec(e);return{count:O(t&&t[1]||"0"),delta:O(r&&r[1]||"0")}}var ti,Up=T({"src/lib/parsers/parse-remote-objects.ts"(){"use strict";y(),ti=[new ke(/^remote:\s*(enumerating|counting|compressing) objects: (\d+),/i,(e,[t,r])=>{let s=t.toLowerCase(),o=Ar(e.remoteMessages);Object.assign(o,{[s]:O(r)})}),new ke(/^remote:\s*(enumerating|counting|compressing) objects: \d+% \(\d+\/(\d+)\),/i,(e,[t,r])=>{let s=t.toLowerCase(),o=Ar(e.remoteMessages);Object.assign(o,{[s]:O(r)})}),new ke(/total ([^,]+), reused ([^,]+), pack-reused (\d+)/i,(e,[t,r,s])=>{let o=Ar(e.remoteMessages);o.total=bo(t),o.reused=bo(r),o.packReused=O(s)})]}});function ri(e,t){return oe({remoteMessages:new oi},si,t)}var si,oi,ni=T({"src/lib/parsers/parse-remote-messages.ts"(){"use strict";y(),Up(),si=[new ke(/^remote:\s*(.+)$/,(e,[t])=>(e.remoteMessages.all.push(t.trim()),!1)),...ti,new ke([/create a (?:pull|merge) request/i,/\s(https?:\/\/\S+)$/],(e,[t])=>{e.remoteMessages.pullRequestUrl=t}),new ke([/found (\d+) vulnerabilities.+\(([^)]+)\)/i,/\s(https?:\/\/\S+)$/],(e,[t,r,s])=>{e.remoteMessages.vulnerabilities={count:O(t),summary:r,url:s}})],oi=class{constructor(){this.all=[]}}}});function jp(e,t){let r=oe(new ei,ii,[e,t]);return r.message&&r}var vo,_o,yo,ko,ii,Go,ms,ai=T({"src/lib/parsers/parse-pull.ts"(){"use strict";Lp(),y(),ni(),vo=/^\s*(.+?)\s+\|\s+\d+\s*(\+*)(-*)/,_o=/(\d+)\D+((\d+)\D+\(\+\))?(\D+(\d+)\D+\(-\))?/,yo=/^(create|delete) mode \d+ (.+)/,ko=[new k(vo,(e,[t,r,s])=>{e.files.push(t),r&&(e.insertions[t]=r.length),s&&(e.deletions[t]=s.length)}),new k(_o,(e,[t,,r,,s])=>r!==void 0||s!==void 0?(e.summary.changes=+t||0,e.summary.insertions=+r||0,e.summary.deletions=+s||0,!0):!1),new k(yo,(e,[t,r])=>{S(e.files,r),S(t==="create"?e.created:e.deleted,r)})],ii=[new k(/^from\s(.+)$/i,(e,[t])=>void(e.remote=t)),new k(/^fatal:\s(.+)$/,(e,[t])=>void(e.message=t)),new k(/([a-z0-9]+)\.\.([a-z0-9]+)\s+(\S+)\s+->\s+(\S+)$/,(e,[t,r,s,o])=>{e.branch.local=s,e.hash.local=t,e.branch.remote=o,e.hash.remote=r})],Go=(e,t)=>oe(new qr,ko,[e,t]),ms=(e,t)=>Object.assign(new qr,Go(e,t),ri(e,t))}}),So,ci,Co,Ip=T({"src/lib/parsers/parse-merge.ts"(){"use strict";xp(),y(),ai(),So=[new k(/^Auto-merging\s+(.+)$/,(e,[t])=>{e.merges.push(t)}),new k(/^CONFLICT\s+\((.+)\): Merge conflict in (.+)$/,(e,[t,r])=>{e.conflicts.push(new Lt(t,r))}),new k(/^CONFLICT\s+\((.+\/delete)\): (.+) deleted in (.+) and/,(e,[t,r,s])=>{e.conflicts.push(new Lt(t,r,{deleteRef:s}))}),new k(/^CONFLICT\s+\((.+)\):/,(e,[t])=>{e.conflicts.push(new Lt(t,null))}),new k(/^Automatic merge failed;\s+(.+)$/,(e,[t])=>{e.result=t})],ci=(e,t)=>Object.assign(Co(e,t),ms(e,t)),Co=e=>oe(new Zn,So,e)}});function Po(e){return e.length?{commands:["merge",...e],format:"utf-8",parser(t,r){let s=ci(t,r);if(s.failed)throw new ut(s);return s}}:se("Git.merge requires at least one option")}var Mp=T({"src/lib/tasks/merge.ts"(){"use strict";Ke(),Ip(),I()}});function $p(e,t,r){let s=r.includes("deleted"),o=r.includes("tag")||/^refs\/tags/.test(e),n=!r.includes("new");return{deleted:s,tag:o,branch:!o,new:!n,alreadyUpdated:n,local:e,remote:t}}var Oo,ui,Ro,Bp=T({"src/lib/parsers/parse-push.ts"(){"use strict";y(),ni(),Oo=[new k(/^Pushing to (.+)$/,(e,[t])=>{e.repo=t}),new k(/^updating local tracking ref '(.+)'/,(e,[t])=>{e.ref=ot(ue({},e.ref||{}),{local:t})}),new k(/^[=*-]\s+([^:]+):(\S+)\s+\[(.+)]$/,(e,[t,r,s])=>{e.pushed.push($p(t,r,s))}),new k(/^Branch '([^']+)' set up to track remote branch '([^']+)' from '([^']+)'/,(e,[t,r,s])=>{e.branch=ot(ue({},e.branch||{}),{local:t,remote:r,remoteName:s})}),new k(/^([^:]+):(\S+)\s+([a-z0-9]+)\.\.([a-z0-9]+)$/,(e,[t,r,s,o])=>{e.update={head:{local:t,remote:r},hash:{from:s,to:o}}})],ui=(e,t)=>{let r=Ro(e,t),s=ri(e,t);return ue(ue({},r),s)},Ro=(e,t)=>oe({pushed:[]},Oo,[e,t])}}),pi={};M(pi,{pushTagsTask:()=>Np,pushTask:()=>gs});function Np(e={},t){return S(t,"--tags"),gs(e,t)}function gs(e={},t){let r=["push",...t];return e.branch&&r.splice(1,0,e.branch),e.remote&&r.splice(1,0,e.remote),qt(r,"-v"),S(r,"--verbose"),S(r,"--porcelain"),{commands:r,format:"utf-8",parser:ui}}var li=T({"src/lib/tasks/push.ts"(){"use strict";Bp(),y()}});function qp(){return{showBuffer(){let e=["show",...re(arguments,1)];return e.includes("--binary")||e.splice(1,0,"--binary"),this._runTask(Tn(e),L(arguments))},show(){let e=["show",...re(arguments,1)];return this._runTask(Z(e),L(arguments))}}}var Wp=T({"src/lib/tasks/show.ts"(){"use strict";y(),I()}}),Ao,di,Hp=T({"src/lib/responses/FileStatusSummary.ts"(){"use strict";Ao=/^(.+)\0(.+)$/,di=class{constructor(e,t,r){if(this.path=e,this.index=t,this.working_dir=r,t==="R"||r==="R"){let s=Ao.exec(e)||[null,e,e];this.from=s[2]||"",this.path=s[1]||""}}}}});function Fo(e){let[t,r]=e.split(Ve);return{from:r||t,to:t}}function ae(e,t,r){return[`${e}${t}`,r]}function Fr(e,...t){return t.map(r=>ae(e,r,(s,o)=>S(s.conflicted,o)))}function zp(e,t){let r=t.trim();switch(" "){case r.charAt(2):return s(r.charAt(0),r.charAt(1),r.substr(3));case r.charAt(1):return s(" ",r.charAt(0),r.substr(2));default:return}function s(o,n,i){let a=`${o}${n}`,c=mi.get(a);c&&c(e,i),a!=="##"&&a!=="!!"&&e.files.push(new di(i,o,n))}}var Do,mi,gi,Vp=T({"src/lib/responses/StatusSummary.ts"(){"use strict";y(),Hp(),Do=class{constructor(){this.not_added=[],this.conflicted=[],this.created=[],this.deleted=[],this.ignored=void 0,this.modified=[],this.renamed=[],this.files=[],this.staged=[],this.ahead=0,this.behind=0,this.current=null,this.tracking=null,this.detached=!1,this.isClean=()=>!this.files.length}},mi=new Map([ae(" ","A",(e,t)=>S(e.created,t)),ae(" ","D",(e,t)=>S(e.deleted,t)),ae(" ","M",(e,t)=>S(e.modified,t)),ae("A"," ",(e,t)=>S(e.created,t)&&S(e.staged,t)),ae("A","M",(e,t)=>S(e.created,t)&&S(e.staged,t)&&S(e.modified,t)),ae("D"," ",(e,t)=>S(e.deleted,t)&&S(e.staged,t)),ae("M"," ",(e,t)=>S(e.modified,t)&&S(e.staged,t)),ae("M","M",(e,t)=>S(e.modified,t)&&S(e.staged,t)),ae("R"," ",(e,t)=>{S(e.renamed,Fo(t))}),ae("R","M",(e,t)=>{let r=Fo(t);S(e.renamed,r),S(e.modified,r.to)}),ae("!","!",(e,t)=>{S(e.ignored=e.ignored||[],t)}),ae("?","?",(e,t)=>S(e.not_added,t)),...Fr("A","A","U"),...Fr("D","D","U"),...Fr("U","A","D","U"),["##",(e,t)=>{let r=/ahead (\d+)/,s=/behind (\d+)/,o=/^(.+?(?=(?:\.{3}|\s|$)))/,n=/\.{3}(\S*)/,i=/\son\s([\S]+)$/,a;a=r.exec(t),e.ahead=a&&+a[1]||0,a=s.exec(t),e.behind=a&&+a[1]||0,a=o.exec(t),e.current=a&&a[1],a=n.exec(t),e.tracking=a&&a[1],a=i.exec(t),e.current=a&&a[1]||e.current,e.detached=/\(no branch\)/.test(t)}]]),gi=function(e){let t=e.split(Ve),r=new Do;for(let s=0,o=t.length;s<o;){let n=t[s++].trim();n&&(n.charAt(0)==="R"&&(n+=Ve+(t[s++]||"")),zp(r,n))}return r}}});function Kp(e){return{format:"utf-8",commands:["status","--porcelain","-b","-u","--null",...e.filter(r=>!hi.includes(r))],parser(r){return gi(r)}}}var hi,Jp=T({"src/lib/tasks/status.ts"(){"use strict";Vp(),hi=["--null","-z"]}});function Mt(e=0,t=0,r=0,s="",o=!0){return Object.defineProperty({major:e,minor:t,patch:r,agent:s,installed:o},"toString",{value(){return`${this.major}.${this.minor}.${this.patch}`},configurable:!1,enumerable:!1})}function Yp(){return Mt(0,0,0,"",!1)}function Xp(){return{version(){return this._runTask({commands:["--version"],format:"utf-8",parser:Qp,onError(e,t,r,s){if(e.exitCode===-2)return r(Buffer.from(hs));s(t)}})}}}function Qp(e){return e===hs?Yp():oe(Mt(0,0,0,e),fi,e)}var hs,fi,Zp=T({"src/lib/tasks/version.ts"(){"use strict";y(),hs="installed=false",fi=[new k(/version (\d+)\.(\d+)\.(\d+)(?:\s*\((.+)\))?/,(e,[t,r,s,o=""])=>{Object.assign(e,Mt(O(t),O(r),O(s),o))}),new k(/version (\d+)\.(\d+)\.(\D+)(.+)?$/,(e,[t,r,s,o=""])=>{Object.assign(e,Mt(O(t),O(r),s,o))})]}}),Ti={};M(Ti,{SimpleGitApi:()=>Wr});var Wr,el=T({"src/lib/simple-git-api.ts"(){"use strict";np(),ip(),cp(),lp(),fp(),Gn(),Ep(),Rn(),bp(),Gp(),Qn(),Mp(),li(),Wp(),Jp(),I(),Zp(),y(),Wr=class{constructor(e){this._executor=e}_runTask(e,t){let r=this._executor.chain(),s=r.push(e);return t&&sp(e,s,t),Object.create(this,{then:{value:s.then.bind(s)},catch:{value:s.catch.bind(s)},_executor:{value:r}})}add(e){return this._runTask(Z(["add",...fe(e)]),L(arguments))}cwd(e){let t=L(arguments);return typeof e=="string"?this._runTask(fo(e,this._executor),t):typeof(e==null?void 0:e.path)=="string"?this._runTask(fo(e.path,e.root&&this._executor||void 0),t):this._runTask(se("Git.cwd: workingDirectory must be supplied as a string"),t)}hashObject(e,t){return this._runTask(wp(e,t===!0),L(arguments))}init(e){return this._runTask(kp(e===!0,this._executor.cwd,re(arguments)),L(arguments))}merge(){return this._runTask(Po(re(arguments)),L(arguments))}mergeFromTo(e,t){return X(e)&&X(t)?this._runTask(Po([e,t,...re(arguments)]),L(arguments,!1)):this._runTask(se("Git.mergeFromTo requires that the 'remote' and 'branch' arguments are supplied as strings"))}outputHandler(e){return this._executor.outputHandler=e,this}push(){let e=gs({remote:Te(arguments[0],X),branch:Te(arguments[1],X)},re(arguments));return this._runTask(e,L(arguments))}stash(){return this._runTask(Z(["stash",...re(arguments)]),L(arguments))}status(){return this._runTask(Kp(re(arguments)),L(arguments))}},Object.assign(Wr.prototype,ap(),hp(),Wu(),pp(),Tp(),Ku(),Dp(),qp(),Xp())}}),Ei={};M(Ei,{Scheduler:()=>bi});var xo,bi,tl=T({"src/lib/runners/scheduler.ts"(){"use strict";y(),Ln(),xo=(()=>{let e=0;return()=>{e++;let{promise:t,done:r}=(0,wi.createDeferred)();return{promise:t,done:r,id:e}}})(),bi=class{constructor(e=2){this.concurrency=e,this.logger=ns("","scheduler"),this.pending=[],this.running=[],this.logger("Constructed, concurrency=%s",e)}schedule(){if(!this.pending.length||this.running.length>=this.concurrency){this.logger("Schedule attempt ignored, pending=%s running=%s concurrency=%s",this.pending.length,this.running.length,this.concurrency);return}let e=S(this.running,this.pending.shift());this.logger("Attempting id=%s",e.id),e.done(()=>{this.logger("Completing id=",e.id),qt(this.running,e),this.schedule()})}next(){let{promise:e,id:t}=S(this.pending,xo());return this.logger("Scheduling id=%s",t),this.schedule(),e}}}}),vi={};M(vi,{applyPatchTask:()=>rl});function rl(e,t){return Z(["apply",...t,...e])}var sl=T({"src/lib/tasks/apply-patch.ts"(){"use strict";I()}});function ol(e,t){return{branch:e,hash:t,success:!0}}function nl(e){return{branch:e,hash:null,success:!1}}var _i,il=T({"src/lib/responses/BranchDeleteSummary.ts"(){"use strict";_i=class{constructor(){this.all=[],this.branches={},this.errors=[]}get success(){return!this.errors.length}}}});function yi(e,t){return t===1&&Hr.test(e)}var Lo,Hr,Uo,Kt,al=T({"src/lib/parsers/parse-branch-delete.ts"(){"use strict";il(),y(),Lo=/(\S+)\s+\(\S+\s([^)]+)\)/,Hr=/^error[^']+'([^']+)'/m,Uo=[new k(Lo,(e,[t,r])=>{let s=ol(t,r);e.all.push(s),e.branches[t]=s}),new k(Hr,(e,[t])=>{let r=nl(t);e.errors.push(r),e.all.push(r),e.branches[t]=r})],Kt=(e,t)=>oe(new _i,Uo,[e,t])}}),ki,cl=T({"src/lib/responses/BranchSummary.ts"(){"use strict";ki=class{constructor(){this.all=[],this.branches={},this.current="",this.detached=!1}push(e,t,r,s,o){e==="*"&&(this.detached=t,this.current=r),this.all.push(r),this.branches[r]={current:e==="*",linkedWorkTree:e==="+",name:r,commit:s,label:o}}}}});function jo(e){return e?e.charAt(0):""}function Gi(e){return oe(new ki,Si,e)}var Si,ul=T({"src/lib/parsers/parse-branch.ts"(){"use strict";cl(),y(),Si=[new k(/^([*+]\s)?\((?:HEAD )?detached (?:from|at) (\S+)\)\s+([a-z0-9]+)\s(.*)$/,(e,[t,r,s,o])=>{e.push(jo(t),!0,r,s,o)}),new k(new RegExp("^([*+]\\s)?(\\S+)\\s+([a-z0-9]+)\\s?(.*)$","s"),(e,[t,r,s,o])=>{e.push(jo(t),!1,r,s,o)})]}}),Ci={};M(Ci,{branchLocalTask:()=>ll,branchTask:()=>pl,containsDeleteBranchCommand:()=>Pi,deleteBranchTask:()=>ml,deleteBranchesTask:()=>dl});function Pi(e){let t=["-d","-D","--delete"];return e.some(r=>t.includes(r))}function pl(e){let t=Pi(e),r=["branch",...e];return r.length===1&&r.push("-a"),r.includes("-v")||r.splice(1,0,"-v"),{format:"utf-8",commands:r,parser(s,o){return t?Kt(s,o).all[0]:Gi(s)}}}function ll(){return{format:"utf-8",commands:["branch","-v"],parser:Gi}}function dl(e,t=!1){return{format:"utf-8",commands:["branch","-v",t?"-D":"-d",...e],parser(r,s){return Kt(r,s)},onError({exitCode:r,stdOut:s},o,n,i){if(!yi(String(o),r))return i(o);n(s)}}}function ml(e,t=!1){let r={format:"utf-8",commands:["branch","-v",t?"-D":"-d",e],parser(s,o){return Kt(s,o).branches[e]},onError({exitCode:s,stdErr:o,stdOut:n},i,a,c){if(!yi(String(i),s))return c(i);throw new ut(r.parser(it(n),it(o)),String(i))}};return r}var gl=T({"src/lib/tasks/branch.ts"(){"use strict";Ke(),al(),ul(),y()}}),Oi,hl=T({"src/lib/responses/CheckIgnore.ts"(){"use strict";Oi=e=>e.split(/\n/g).map(t=>t.trim()).filter(t=>!!t)}}),Ri={};M(Ri,{checkIgnoreTask:()=>fl});function fl(e){return{commands:["check-ignore",...e],format:"utf-8",parser:Oi}}var Tl=T({"src/lib/tasks/check-ignore.ts"(){"use strict";hl()}}),Ai={};M(Ai,{cloneMirrorTask:()=>wl,cloneTask:()=>Fi});function El(e){return/^--upload-pack(=|$)/.test(e)}function Fi(e,t,r){let s=["clone",...r];return X(e)&&s.push(e),X(t)&&s.push(t),s.find(El)?se("git.fetch: potential exploit argument blocked."):Z(s)}function wl(e,t,r){return S(r,"--mirror"),Fi(e,t,r)}var bl=T({"src/lib/tasks/clone.ts"(){"use strict";I(),y()}});function vl(e,t){return oe({raw:e,remote:null,branches:[],tags:[],updated:[],deleted:[]},Di,[e,t])}var Di,_l=T({"src/lib/parsers/parse-fetch.ts"(){"use strict";y(),Di=[new k(/From (.+)$/,(e,[t])=>{e.remote=t}),new k(/\* \[new branch]\s+(\S+)\s*-> (.+)$/,(e,[t,r])=>{e.branches.push({name:t,tracking:r})}),new k(/\* \[new tag]\s+(\S+)\s*-> (.+)$/,(e,[t,r])=>{e.tags.push({name:t,tracking:r})}),new k(/- \[deleted]\s+\S+\s*-> (.+)$/,(e,[t])=>{e.deleted.push({tracking:t})}),new k(/\s*([^.]+)\.\.(\S+)\s+(\S+)\s*-> (.+)$/,(e,[t,r,s,o])=>{e.updated.push({name:s,tracking:o,to:r,from:t})})]}}),xi={};M(xi,{fetchTask:()=>kl});function yl(e){return/^--upload-pack(=|$)/.test(e)}function kl(e,t,r){let s=["fetch",...r];return e&&t&&s.push(e,t),s.find(yl)?se("git.fetch: potential exploit argument blocked."):{commands:s,format:"utf-8",parser:vl}}var Gl=T({"src/lib/tasks/fetch.ts"(){"use strict";_l(),I()}});function Sl(e){return oe({moves:[]},Li,e)}var Li,Cl=T({"src/lib/parsers/parse-move.ts"(){"use strict";y(),Li=[new k(/^Renaming (.+) to (.+)$/,(e,[t,r])=>{e.moves.push({from:t,to:r})})]}}),Ui={};M(Ui,{moveTask:()=>Pl});function Pl(e,t){return{commands:["mv","-v",...fe(e),t],format:"utf-8",parser:Sl}}var Ol=T({"src/lib/tasks/move.ts"(){"use strict";Cl(),y()}}),ji={};M(ji,{pullTask:()=>Rl});function Rl(e,t,r){let s=["pull",...r];return e&&t&&s.splice(1,0,e,t),{commands:s,format:"utf-8",parser(o,n){return ms(o,n)},onError(o,n,i,a){let c=jp(it(o.stdOut),it(o.stdErr));if(c)return a(new ut(c));a(n)}}}var Al=T({"src/lib/tasks/pull.ts"(){"use strict";Ke(),ai(),y()}});function Fl(e){let t={};return Ii(e,([r])=>t[r]={name:r}),Object.values(t)}function Dl(e){let t={};return Ii(e,([r,s,o])=>{t.hasOwnProperty(r)||(t[r]={name:r,refs:{fetch:"",push:""}}),o&&s&&(t[r].refs[o.replace(/[^a-z]/g,"")]=s)}),Object.values(t)}function Ii(e,t){Vr(e,r=>t(r.split(/\s+/)))}var xl=T({"src/lib/responses/GetRemoteSummary.ts"(){"use strict";y()}}),Mi={};M(Mi,{addRemoteTask:()=>Ll,getRemotesTask:()=>Ul,listRemotesTask:()=>jl,remoteTask:()=>Il,removeRemoteTask:()=>Ml});function Ll(e,t,r){return Z(["remote","add",...r,e,t])}function Ul(e){let t=["remote"];return e&&t.push("-v"),{commands:t,format:"utf-8",parser:e?Dl:Fl}}function jl(e){let t=[...e];return t[0]!=="ls-remote"&&t.unshift("ls-remote"),Z(t)}function Il(e){let t=[...e];return t[0]!=="remote"&&t.unshift("remote"),Z(t)}function Ml(e){return Z(["remote","remove",e])}var $l=T({"src/lib/tasks/remote.ts"(){"use strict";xl(),I()}}),$i={};M($i,{stashListTask:()=>Bl});function Bl(e={},t){let r=Xn(e),s=["stash","list",...r.commands,...t],o=Vn(r.splitter,r.fields,as(s));return Vt(s)||{commands:s,format:"utf-8",parser:o}}var Nl=T({"src/lib/tasks/stash-list.ts"(){"use strict";mt(),Jn(),ds(),Qn()}}),Bi={};M(Bi,{addSubModuleTask:()=>ql,initSubModuleTask:()=>Wl,subModuleTask:()=>Jt,updateSubModuleTask:()=>Hl});function ql(e,t){return Jt(["add",e,t])}function Wl(e){return Jt(["init",...e])}function Jt(e){let t=[...e];return t[0]!=="submodule"&&t.unshift("submodule"),Z(t)}function Hl(e){return Jt(["update",...e])}var zl=T({"src/lib/tasks/sub-module.ts"(){"use strict";I()}});function Vl(e,t){let r=isNaN(e),s=isNaN(t);return r!==s?r?1:-1:r?Ni(e,t):0}function Ni(e,t){return e===t?0:e>t?1:-1}function Kl(e){return e.trim()}function At(e){return typeof e=="string"&&parseInt(e.replace(/^\D+/g,""),10)||0}var Io,qi,Jl=T({"src/lib/responses/TagList.ts"(){"use strict";Io=class{constructor(e,t){this.all=e,this.latest=t}},qi=function(e,t=!1){let r=e.split(`
`).map(Kl).filter(Boolean);t||r.sort(function(o,n){let i=o.split("."),a=n.split(".");if(i.length===1||a.length===1)return Vl(At(i[0]),At(a[0]));for(let c=0,p=Math.max(i.length,a.length);c<p;c++){let u=Ni(At(i[c]),At(a[c]));if(u)return u}return 0});let s=t?r[0]:[...r].reverse().find(o=>o.indexOf(".")>=0);return new Io(r,s)}}}),Wi={};M(Wi,{addAnnotatedTagTask:()=>Ql,addTagTask:()=>Xl,tagListTask:()=>Yl});function Yl(e=[]){let t=e.some(r=>/^--sort=/.test(r));return{format:"utf-8",commands:["tag","-l",...e],parser(r){return qi(r,t)}}}function Xl(e){return{format:"utf-8",commands:["tag",e],parser(){return{name:e}}}}function Ql(e,t){return{format:"utf-8",commands:["tag","-a","-m",t,e],parser(){return{name:e}}}}var Zl=T({"src/lib/tasks/tag.ts"(){"use strict";Jl()}}),ed=Tu({"src/git.js"(e,t){"use strict";var{GitExecutor:r}=(rp(),x(jn)),{SimpleGitApi:s}=(el(),x(Ti)),{Scheduler:o}=(tl(),x(Ei)),{configurationErrorTask:n}=(I(),x(Ir)),{asArray:i,filterArray:a,filterPrimitives:c,filterString:p,filterStringOrStringArray:u,filterType:d,getTrailingOptions:l,trailingFunctionArgument:m,trailingOptionsArgument:b}=(y(),x(an)),{applyPatchTask:g}=(sl(),x(vi)),{branchTask:E,branchLocalTask:v,deleteBranchesTask:A,deleteBranchTask:W}=(gl(),x(Ci)),{checkIgnoreTask:K}=(Tl(),x(Ri)),{checkIsRepoTask:R}=(ln(),x(cn)),{cloneTask:P,cloneMirrorTask:Y}=(bl(),x(Ai)),{cleanWithOptionsTask:U,isCleanOptionsArray:J}=(_n(),x(bn)),{diffSummaryTask:wt}=(ds(),x(Yn)),{fetchTask:ka}=(Gl(),x(xi)),{moveTask:Ga}=(Ol(),x(Ui)),{pullTask:Sa}=(Al(),x(ji)),{pushTagsTask:Ca}=(li(),x(pi)),{addRemoteTask:Pa,getRemotesTask:Oa,listRemotesTask:Ra,remoteTask:Aa,removeRemoteTask:Fa}=($l(),x(Mi)),{getResetMode:Da,resetTask:xa}=(xn(),x(An)),{stashListTask:La}=(Nl(),x($i)),{addSubModuleTask:Ua,initSubModuleTask:ja,subModuleTask:Ia,updateSubModuleTask:Ma}=(zl(),x(Bi)),{addAnnotatedTagTask:$a,addTagTask:Ba,tagListTask:Na}=(Zl(),x(Wi)),{straightThroughBufferTask:qa,straightThroughStringTask:ge}=(I(),x(Ir));function _(h,w){this._plugins=w,this._executor=new r(h.baseDir,new o(h.maxConcurrentProcesses),w),this._trimmed=h.trimmed}(_.prototype=Object.create(s.prototype)).constructor=_,_.prototype.customBinary=function(h){return this._plugins.reconfigure("binary",h),this},_.prototype.env=function(h,w){return arguments.length===1&&typeof h=="object"?this._executor.env=h:(this._executor.env=this._executor.env||{})[h]=w,this},_.prototype.stashList=function(h){return this._runTask(La(b(arguments)||{},a(h)&&h||[]),m(arguments))};function vs(h,w,C,Q){return typeof C!="string"?n(`git.${h}() requires a string 'repoPath'`):w(C,d(Q,p),l(arguments))}_.prototype.clone=function(){return this._runTask(vs("clone",P,...arguments),m(arguments))},_.prototype.mirror=function(){return this._runTask(vs("mirror",Y,...arguments),m(arguments))},_.prototype.mv=function(h,w){return this._runTask(Ga(h,w),m(arguments))},_.prototype.checkoutLatestTag=function(h){var w=this;return this.pull(function(){w.tags(function(C,Q){w.checkout(Q.latest,h)})})},_.prototype.pull=function(h,w,C,Q){return this._runTask(Sa(d(h,p),d(w,p),l(arguments)),m(arguments))},_.prototype.fetch=function(h,w){return this._runTask(ka(d(h,p),d(w,p),l(arguments)),m(arguments))},_.prototype.silent=function(h){return console.warn("simple-git deprecation notice: git.silent: logging should be configured using the `debug` library / `DEBUG` environment variable, this will be an error in version 3"),this},_.prototype.tags=function(h,w){return this._runTask(Na(l(arguments)),m(arguments))},_.prototype.rebase=function(){return this._runTask(ge(["rebase",...l(arguments)]),m(arguments))},_.prototype.reset=function(h){return this._runTask(xa(Da(h),l(arguments)),m(arguments))},_.prototype.revert=function(h){let w=m(arguments);return typeof h!="string"?this._runTask(n("Commit must be a string"),w):this._runTask(ge(["revert",...l(arguments,0,!0),h]),w)},_.prototype.addTag=function(h){let w=typeof h=="string"?Ba(h):n("Git.addTag requires a tag name");return this._runTask(w,m(arguments))},_.prototype.addAnnotatedTag=function(h,w){return this._runTask($a(h,w),m(arguments))},_.prototype.deleteLocalBranch=function(h,w,C){return this._runTask(W(h,typeof w=="boolean"?w:!1),m(arguments))},_.prototype.deleteLocalBranches=function(h,w,C){return this._runTask(A(h,typeof w=="boolean"?w:!1),m(arguments))},_.prototype.branch=function(h,w){return this._runTask(E(l(arguments)),m(arguments))},_.prototype.branchLocal=function(h){return this._runTask(v(),m(arguments))},_.prototype.raw=function(h){let w=!Array.isArray(h),C=[].slice.call(w?arguments:h,0);for(let de=0;de<C.length&&w;de++)if(!c(C[de])){C.splice(de,C.length-de);break}C.push(...l(arguments,0,!0));var Q=m(arguments);return C.length?this._runTask(ge(C,this._trimmed),Q):this._runTask(n("Raw: must supply one or more command to execute"),Q)},_.prototype.submoduleAdd=function(h,w,C){return this._runTask(Ua(h,w),m(arguments))},_.prototype.submoduleUpdate=function(h,w){return this._runTask(Ma(l(arguments,!0)),m(arguments))},_.prototype.submoduleInit=function(h,w){return this._runTask(ja(l(arguments,!0)),m(arguments))},_.prototype.subModule=function(h,w){return this._runTask(Ia(l(arguments)),m(arguments))},_.prototype.listRemote=function(){return this._runTask(Ra(l(arguments)),m(arguments))},_.prototype.addRemote=function(h,w,C){return this._runTask(Pa(h,w,l(arguments)),m(arguments))},_.prototype.removeRemote=function(h,w){return this._runTask(Fa(h),m(arguments))},_.prototype.getRemotes=function(h,w){return this._runTask(Oa(h===!0),m(arguments))},_.prototype.remote=function(h,w){return this._runTask(Aa(l(arguments)),m(arguments))},_.prototype.tag=function(h,w){let C=l(arguments);return C[0]!=="tag"&&C.unshift("tag"),this._runTask(ge(C),m(arguments))},_.prototype.updateServerInfo=function(h){return this._runTask(ge(["update-server-info"]),m(arguments))},_.prototype.pushTags=function(h,w){let C=Ca({remote:d(h,p)},l(arguments));return this._runTask(C,m(arguments))},_.prototype.rm=function(h){return this._runTask(ge(["rm","-f",...i(h)]),m(arguments))},_.prototype.rmKeepLocal=function(h){return this._runTask(ge(["rm","--cached",...i(h)]),m(arguments))},_.prototype.catFile=function(h,w){return this._catFile("utf-8",arguments)},_.prototype.binaryCatFile=function(){return this._catFile("buffer",arguments)},_.prototype._catFile=function(h,w){var C=m(w),Q=["cat-file"],de=w[0];if(typeof de=="string")return this._runTask(n("Git.catFile: options must be supplied as an array of strings"),C);Array.isArray(de)&&Q.push.apply(Q,de);let ir=h==="buffer"?qa(Q):ge(Q);return this._runTask(ir,C)},_.prototype.diff=function(h,w){let C=p(h)?n("git.diff: supplying options as a single string is no longer supported, switch to an array of strings"):ge(["diff",...l(arguments)]);return this._runTask(C,m(arguments))},_.prototype.diffSummary=function(){return this._runTask(wt(l(arguments,1)),m(arguments))},_.prototype.applyPatch=function(h){let w=u(h)?g(i(h),l([].slice.call(arguments,1))):n("git.applyPatch requires one or more string patches as the first argument");return this._runTask(w,m(arguments))},_.prototype.revparse=function(){let h=["rev-parse",...l(arguments,!0)];return this._runTask(ge(h,!0),m(arguments))},_.prototype.clean=function(h,w,C){let Q=J(h),de=Q&&h.join("")||d(h,p)||"",ir=l([].slice.call(arguments,Q?1:0));return this._runTask(U(de,ir),m(arguments))},_.prototype.exec=function(h){let w={commands:[],format:"utf-8",parser(){typeof h=="function"&&h()}};return this._runTask(w)},_.prototype.clearQueue=function(){return this},_.prototype.checkIgnore=function(h,w){return this._runTask(K(i(d(h,u,[]))),m(arguments))},_.prototype.checkIsRepo=function(h,w){return this._runTask(R(d(h,p)),m(arguments))},t.exports=_}});ct();Ge();var td=class extends be{constructor(e,t){super(void 0,t),this.config=e}};Ge();Ge();var we=class extends be{constructor(e,t,r){super(e,r),this.task=e,this.plugin=t,Object.setPrototypeOf(this,new.target.prototype)}};Ke();Ho();ln();_n();Gn();Cn();Rn();xn();function rd(e){return e?[{type:"spawn.before",action(s,o){e.aborted&&o.kill(new we(void 0,"abort","Abort already signaled"))}},{type:"spawn.after",action(s,o){function n(){o.kill(new we(void 0,"abort","Abort signal received"))}e.addEventListener("abort",n),o.spawned.on("close",()=>e.removeEventListener("abort",n))}}]:void 0}function sd(e){return typeof e=="string"&&e.trim().toLowerCase()==="-c"}function od(e,t){if(sd(e)&&/^\s*protocol(.[a-z]+)?.allow/.test(t))throw new we(void 0,"unsafe","Configuring protocol.allow is not permitted without enabling allowUnsafeExtProtocol")}function nd(e,t){if(/^\s*--(upload|receive)-pack/.test(e))throw new we(void 0,"unsafe","Use of --upload-pack or --receive-pack is not permitted without enabling allowUnsafePack");if(t==="clone"&&/^\s*-u\b/.test(e))throw new we(void 0,"unsafe","Use of clone with option -u is not permitted without enabling allowUnsafePack");if(t==="push"&&/^\s*--exec\b/.test(e))throw new we(void 0,"unsafe","Use of push with option --exec is not permitted without enabling allowUnsafePack")}function id({allowUnsafeProtocolOverride:e=!1,allowUnsafePack:t=!1}={}){return{type:"spawn.args",action(r,s){return r.forEach((o,n)=>{let i=n<r.length?r[n+1]:"";e||od(o,i),t||nd(o,s.method)}),r}}}y();function ad(e){let t=nt(e,"-c");return{type:"spawn.args",action(r){return[...t,...r]}}}y();var Mo=(0,ze.deferred)().promise;function cd({onClose:e=!0,onExit:t=50}={}){function r(){let o=-1,n={close:(0,ze.deferred)(),closeTimeout:(0,ze.deferred)(),exit:(0,ze.deferred)(),exitTimeout:(0,ze.deferred)()},i=Promise.race([e===!1?Mo:n.closeTimeout.promise,t===!1?Mo:n.exitTimeout.promise]);return s(e,n.close,n.closeTimeout),s(t,n.exit,n.exitTimeout),{close(a){o=a,n.close.done()},exit(a){o=a,n.exit.done()},get exitCode(){return o},result:i}}function s(o,n,i){o!==!1&&(o===!0?n.promise:n.promise.then(()=>Dr(o))).then(i.done)}return{type:"spawn.after",action(o,n){return st(this,arguments,function*(i,{spawned:a,close:c}){var p,u;let d=r(),l=!0,m=()=>void(l=!1);(p=a.stdout)==null||p.on("data",m),(u=a.stderr)==null||u.on("data",m),a.on("error",m),a.on("close",b=>d.close(b)),a.on("exit",b=>d.exit(b));try{yield d.result,l&&(yield Dr(50)),c(d.exitCode)}catch(b){c(d.exitCode,b)}})}}}y();var ud="Invalid value supplied for custom binary, requires a single string or an array containing either one or two strings",$o="Invalid value supplied for custom binary, restricted characters must be removed or supply the unsafe.allowUnsafeCustomBinary option";function pd(e){return!e||!/^([a-z]:)?([a-z0-9/.\\_-]+)$/i.test(e)}function Bo(e,t){if(e.length<1||e.length>2)throw new we(void 0,"binary",ud);if(e.some(pd))if(t)console.warn($o);else throw new we(void 0,"binary",$o);let[s,o]=e;return{binary:s,prefix:o}}function ld(e,t=["git"],r=!1){let s=Bo(fe(t),r);e.on("binary",o=>{s=Bo(fe(o),r)}),e.append("spawn.binary",()=>s.binary),e.append("spawn.args",o=>s.prefix?[s.prefix,...o]:o)}Ge();function dd(e){return!!(e.exitCode&&e.stdErr.length)}function md(e){return Buffer.concat([...e.stdOut,...e.stdErr])}function gd(e=!1,t=dd,r=md){return(s,o)=>!e&&s||!t(o)?s:r(o)}function No(e){return{type:"task.error",action(t,r){let s=e(t.error,{stdErr:r.stdErr,stdOut:r.stdOut,exitCode:r.exitCode});return Buffer.isBuffer(s)?{error:new be(void 0,s.toString("utf-8"))}:{error:s}}}}y();var hd=class{constructor(){this.plugins=new Set,this.events=new Hi.EventEmitter}on(e,t){this.events.on(e,t)}reconfigure(e,t){this.events.emit(e,t)}append(e,t){let r=S(this.plugins,{type:e,action:t});return()=>this.plugins.delete(r)}add(e){let t=[];return fe(e).forEach(r=>r&&this.plugins.add(S(t,r))),()=>{t.forEach(r=>this.plugins.delete(r))}}exec(e,t,r){let s=t,o=Object.freeze(Object.create(r));for(let n of this.plugins)n.type===e&&(s=n.action(s,o));return s}};y();function fd(e){let t="--progress",r=["checkout","clone","fetch","pull","push"];return[{type:"spawn.args",action(n,i){return r.includes(i.method)?Xo(n,t):n}},{type:"spawn.after",action(n,i){var a;i.commands.includes(t)&&((a=i.spawned.stderr)==null||a.on("data",c=>{let p=/^([\s\S]+?):\s*(\d+)% \((\d+)\/(\d+)\)/.exec(c.toString("utf8"));p&&e({method:i.method,stage:Td(p[1]),progress:O(p[2]),processed:O(p[3]),total:O(p[4])})}))}}]}function Td(e){return String(e.toLowerCase().split(" ",1))||"unknown"}y();function Ed(e){let t=en(e,["uid","gid"]);return{type:"spawn.options",action(r){return ue(ue({},t),r)}}}function wd({block:e,stdErr:t=!0,stdOut:r=!0}){if(e>0)return{type:"spawn.after",action(s,o){var n,i;let a;function c(){a&&clearTimeout(a),a=setTimeout(u,e)}function p(){var d,l;(d=o.spawned.stdout)==null||d.off("data",c),(l=o.spawned.stderr)==null||l.off("data",c),o.spawned.off("exit",p),o.spawned.off("close",p),a&&clearTimeout(a)}function u(){p(),o.kill(new we(void 0,"timeout","block timeout reached"))}r&&((n=o.spawned.stdout)==null||n.on("data",c)),t&&((i=o.spawned.stderr)==null||i.on("data",c)),o.spawned.on("exit",p),o.spawned.on("close",p),c()}}}ct();function bd(){return{type:"spawn.args",action(e){let t=[],r;function s(o){(r=r||[]).push(...o)}for(let o=0;o<e.length;o++){let n=e[o];if(Ut(n)){s(lo(n));continue}if(n==="--"){s(e.slice(o+1).flatMap(i=>Ut(i)&&lo(i)||i));break}t.push(n)}return r?[...t,"--",...r.map(String)]:t}}}y();var vd=ed();function _d(e,t){var r;let s=new hd,o=on(e&&(typeof e=="string"?{baseDir:e}:e)||{},t);if(!Kr(o.baseDir))throw new td(o,"Cannot use simple-git on a directory that does not exist");return Array.isArray(o.config)&&s.add(ad(o.config)),s.add(id(o.unsafe)),s.add(bd()),s.add(cd(o.completion)),o.abort&&s.add(rd(o.abort)),o.progress&&s.add(fd(o.progress)),o.timeout&&s.add(wd(o.timeout)),o.spawnOptions&&s.add(Ed(o.spawnOptions)),s.add(No(gd(!0))),o.errors&&s.add(No(o.errors)),ld(s,o.binary,(r=o.unsafe)==null?void 0:r.allowUnsafeCustomBinary),new vd(o,s)}Ke();var zi=_d;var B=H(require("vscode")),me=H(require("path"));var ha=H(na(),1);var ht=e=>{if(typeof e!="string")throw new TypeError("invalid pattern");if(e.length>65536)throw new TypeError("pattern is too long")};var Rd={"[:alnum:]":["\\p{L}\\p{Nl}\\p{Nd}",!0],"[:alpha:]":["\\p{L}\\p{Nl}",!0],"[:ascii:]":["\\x00-\\x7f",!1],"[:blank:]":["\\p{Zs}\\t",!0],"[:cntrl:]":["\\p{Cc}",!0],"[:digit:]":["\\p{Nd}",!0],"[:graph:]":["\\p{Z}\\p{C}",!0,!0],"[:lower:]":["\\p{Ll}",!0],"[:print:]":["\\p{C}",!0],"[:punct:]":["\\p{P}",!0],"[:space:]":["\\p{Z}\\t\\r\\n\\v\\f",!0],"[:upper:]":["\\p{Lu}",!0],"[:word:]":["\\p{L}\\p{Nl}\\p{Nd}\\p{Pc}",!0],"[:xdigit:]":["A-Fa-f0-9",!1]},ft=e=>e.replace(/[[\]\\-]/g,"\\$&"),Ad=e=>e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),ia=e=>e.join(""),aa=(e,t)=>{let r=t;if(e.charAt(r)!=="[")throw new Error("not in a brace expression");let s=[],o=[],n=r+1,i=!1,a=!1,c=!1,p=!1,u=r,d="";e:for(;n<e.length;){let g=e.charAt(n);if((g==="!"||g==="^")&&n===r+1){p=!0,n++;continue}if(g==="]"&&i&&!c){u=n+1;break}if(i=!0,g==="\\"&&!c){c=!0,n++;continue}if(g==="["&&!c){for(let[E,[v,A,W]]of Object.entries(Rd))if(e.startsWith(E,n)){if(d)return["$.",!1,e.length-r,!0];n+=E.length,W?o.push(v):s.push(v),a=a||A;continue e}}if(c=!1,d){g>d?s.push(ft(d)+"-"+ft(g)):g===d&&s.push(ft(g)),d="",n++;continue}if(e.startsWith("-]",n+1)){s.push(ft(g+"-")),n+=2;continue}if(e.startsWith("-",n+1)){d=g,n+=2;continue}s.push(ft(g)),n++}if(u<n)return["",!1,0,!1];if(!s.length&&!o.length)return["$.",!1,e.length-r,!0];if(o.length===0&&s.length===1&&/^\\?.$/.test(s[0])&&!p){let g=s[0].length===2?s[0].slice(-1):s[0];return[Ad(g),!1,u-r,!1]}let l="["+(p?"^":"")+ia(s)+"]",m="["+(p?"":"^")+ia(o)+"]";return[s.length&&o.length?"("+l+"|"+m+")":s.length?l:m,a,u-r,!0]};var Se=(e,{windowsPathsNoEscape:t=!1}={})=>t?e.replace(/\[([^\/\\])\]/g,"$1"):e.replace(/((?!\\).|^)\[([^\/\\])\]/g,"$1$2").replace(/\\([^\/])/g,"$1");var Fd=new Set(["!","?","+","*","@"]),ca=e=>Fd.has(e),Dd="(?!(?:^|/)\\.\\.?(?:$|/))",Yt="(?!\\.)",xd=new Set(["[","."]),Ld=new Set(["..","."]),Ud=new Set("().*{}+?[]^$\\!"),jd=e=>e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),ws="[^/]",ua=ws+"*?",pa=ws+"+?",N,V,ve,F,$,Ce,je,Pe,Ee,Ie,Tt,Me,la,Oe,Xt,Es,da,ee=class ee{constructor(t,r,s={}){te(this,Me);Ss(this,"type");te(this,N);te(this,V);te(this,ve,!1);te(this,F,[]);te(this,$);te(this,Ce);te(this,je);te(this,Pe,!1);te(this,Ee);te(this,Ie);te(this,Tt,!1);this.type=t,t&&j(this,V,!0),j(this,$,r),j(this,N,f(this,$)?f(f(this,$),N):this),j(this,Ee,f(this,N)===this?s:f(f(this,N),Ee)),j(this,je,f(this,N)===this?[]:f(f(this,N),je)),t==="!"&&!f(f(this,N),Pe)&&f(this,je).push(this),j(this,Ce,f(this,$)?f(f(this,$),F).length:0)}get hasMagic(){if(f(this,V)!==void 0)return f(this,V);for(let t of f(this,F))if(typeof t!="string"&&(t.type||t.hasMagic))return j(this,V,!0);return f(this,V)}toString(){return f(this,Ie)!==void 0?f(this,Ie):this.type?j(this,Ie,this.type+"("+f(this,F).map(t=>String(t)).join("|")+")"):j(this,Ie,f(this,F).map(t=>String(t)).join(""))}push(...t){for(let r of t)if(r!==""){if(typeof r!="string"&&!(r instanceof ee&&f(r,$)===this))throw new Error("invalid part: "+r);f(this,F).push(r)}}toJSON(){var r;let t=this.type===null?f(this,F).slice().map(s=>typeof s=="string"?s:s.toJSON()):[this.type,...f(this,F).map(s=>s.toJSON())];return this.isStart()&&!this.type&&t.unshift([]),this.isEnd()&&(this===f(this,N)||f(f(this,N),Pe)&&((r=f(this,$))==null?void 0:r.type)==="!")&&t.push({}),t}isStart(){var r;if(f(this,N)===this)return!0;if(!((r=f(this,$))!=null&&r.isStart()))return!1;if(f(this,Ce)===0)return!0;let t=f(this,$);for(let s=0;s<f(this,Ce);s++){let o=f(t,F)[s];if(!(o instanceof ee&&o.type==="!"))return!1}return!0}isEnd(){var r,s,o;if(f(this,N)===this||((r=f(this,$))==null?void 0:r.type)==="!")return!0;if(!((s=f(this,$))!=null&&s.isEnd()))return!1;if(!this.type)return(o=f(this,$))==null?void 0:o.isEnd();let t=f(this,$)?f(f(this,$),F).length:0;return f(this,Ce)===t-1}copyIn(t){typeof t=="string"?this.push(t):this.push(t.clone(this))}clone(t){let r=new ee(this.type,t);for(let s of f(this,F))r.copyIn(s);return r}static fromGlob(t,r={}){var o;let s=new ee(null,void 0,r);return _e(o=ee,Oe,Xt).call(o,t,s,0,r),s}toMMPattern(){if(this!==f(this,N))return f(this,N).toMMPattern();let t=this.toString(),[r,s,o,n]=this.toRegExpSource();if(!(o||f(this,V)||f(this,Ee).nocase&&!f(this,Ee).nocaseMagicOnly&&t.toUpperCase()!==t.toLowerCase()))return s;let a=(f(this,Ee).nocase?"i":"")+(n?"u":"");return Object.assign(new RegExp(`^${r}$`,a),{_src:r,_glob:t})}get options(){return f(this,Ee)}toRegExpSource(t){var c;let r=t??!!f(this,Ee).dot;if(f(this,N)===this&&_e(this,Me,la).call(this),!this.type){let p=this.isStart()&&this.isEnd(),u=f(this,F).map(b=>{var W;let[g,E,v,A]=typeof b=="string"?_e(W=ee,Oe,da).call(W,b,f(this,V),p):b.toRegExpSource(t);return j(this,V,f(this,V)||v),j(this,ve,f(this,ve)||A),g}).join(""),d="";if(this.isStart()&&typeof f(this,F)[0]=="string"&&!(f(this,F).length===1&&Ld.has(f(this,F)[0]))){let g=xd,E=r&&g.has(u.charAt(0))||u.startsWith("\\.")&&g.has(u.charAt(2))||u.startsWith("\\.\\.")&&g.has(u.charAt(4)),v=!r&&!t&&g.has(u.charAt(0));d=E?Dd:v?Yt:""}let l="";return this.isEnd()&&f(f(this,N),Pe)&&((c=f(this,$))==null?void 0:c.type)==="!"&&(l="(?:$|\\/)"),[d+u+l,Se(u),j(this,V,!!f(this,V)),f(this,ve)]}let s=this.type==="*"||this.type==="+",o=this.type==="!"?"(?:(?!(?:":"(?:",n=_e(this,Me,Es).call(this,r);if(this.isStart()&&this.isEnd()&&!n&&this.type!=="!"){let p=this.toString();return j(this,F,[p]),this.type=null,j(this,V,void 0),[p,Se(this.toString()),!1,!1]}let i=!s||t||r||!Yt?"":_e(this,Me,Es).call(this,!0);i===n&&(i=""),i&&(n=`(?:${n})(?:${i})*?`);let a="";if(this.type==="!"&&f(this,Tt))a=(this.isStart()&&!r?Yt:"")+pa;else{let p=this.type==="!"?"))"+(this.isStart()&&!r&&!t?Yt:"")+ua+")":this.type==="@"?")":this.type==="?"?")?":this.type==="+"&&i?")":this.type==="*"&&i?")?":`)${this.type}`;a=o+n+p}return[a,Se(n),j(this,V,!!f(this,V)),f(this,ve)]}};N=new WeakMap,V=new WeakMap,ve=new WeakMap,F=new WeakMap,$=new WeakMap,Ce=new WeakMap,je=new WeakMap,Pe=new WeakMap,Ee=new WeakMap,Ie=new WeakMap,Tt=new WeakMap,Me=new WeakSet,la=function(){if(this!==f(this,N))throw new Error("should only call on root");if(f(this,Pe))return this;this.toString(),j(this,Pe,!0);let t;for(;t=f(this,je).pop();){if(t.type!=="!")continue;let r=t,s=f(r,$);for(;s;){for(let o=f(r,Ce)+1;!s.type&&o<f(s,F).length;o++)for(let n of f(t,F)){if(typeof n=="string")throw new Error("string part in extglob AST??");n.copyIn(f(s,F)[o])}r=s,s=f(r,$)}}return this},Oe=new WeakSet,Xt=function(t,r,s,o){var m,b;let n=!1,i=!1,a=-1,c=!1;if(r.type===null){let g=s,E="";for(;g<t.length;){let v=t.charAt(g++);if(n||v==="\\"){n=!n,E+=v;continue}if(i){g===a+1?(v==="^"||v==="!")&&(c=!0):v==="]"&&!(g===a+2&&c)&&(i=!1),E+=v;continue}else if(v==="["){i=!0,a=g,c=!1,E+=v;continue}if(!o.noext&&ca(v)&&t.charAt(g)==="("){r.push(E),E="";let A=new ee(v,r);g=_e(m=ee,Oe,Xt).call(m,t,A,g,o),r.push(A);continue}E+=v}return r.push(E),g}let p=s+1,u=new ee(null,r),d=[],l="";for(;p<t.length;){let g=t.charAt(p++);if(n||g==="\\"){n=!n,l+=g;continue}if(i){p===a+1?(g==="^"||g==="!")&&(c=!0):g==="]"&&!(p===a+2&&c)&&(i=!1),l+=g;continue}else if(g==="["){i=!0,a=p,c=!1,l+=g;continue}if(ca(g)&&t.charAt(p)==="("){u.push(l),l="";let E=new ee(g,u);u.push(E),p=_e(b=ee,Oe,Xt).call(b,t,E,p,o);continue}if(g==="|"){u.push(l),l="",d.push(u),u=new ee(null,r);continue}if(g===")")return l===""&&f(r,F).length===0&&j(r,Tt,!0),u.push(l),l="",r.push(...d,u),p;l+=g}return r.type=null,j(r,V,void 0),j(r,F,[t.substring(s-1)]),p},Es=function(t){return f(this,F).map(r=>{if(typeof r=="string")throw new Error("string type in extglob ast??");let[s,o,n,i]=r.toRegExpSource(t);return j(this,ve,f(this,ve)||i),s}).filter(r=>!(this.isStart()&&this.isEnd())||!!r).join("|")},da=function(t,r,s=!1){let o=!1,n="",i=!1;for(let a=0;a<t.length;a++){let c=t.charAt(a);if(o){o=!1,n+=(Ud.has(c)?"\\":"")+c;continue}if(c==="\\"){a===t.length-1?n+="\\\\":o=!0;continue}if(c==="["){let[p,u,d,l]=aa(t,a);if(d){n+=p,i=i||u,a+=d-1,r=r||l;continue}}if(c==="*"){s&&t==="*"?n+=pa:n+=ua,r=!0;continue}if(c==="?"){n+=ws,r=!0;continue}n+=jd(c)}return[n,Se(t),!!r,i]},te(ee,Oe);var Je=ee;var bs=(e,{windowsPathsNoEscape:t=!1}={})=>t?e.replace(/[?*()[\]]/g,"[$&]"):e.replace(/[?*()[\]\\]/g,"\\$&");var q=(e,t,r={})=>(ht(t),!r.nocomment&&t.charAt(0)==="#"?!1:new Ye(t,r).match(e)),Id=/^\*+([^+@!?\*\[\(]*)$/,Md=e=>t=>!t.startsWith(".")&&t.endsWith(e),$d=e=>t=>t.endsWith(e),Bd=e=>(e=e.toLowerCase(),t=>!t.startsWith(".")&&t.toLowerCase().endsWith(e)),Nd=e=>(e=e.toLowerCase(),t=>t.toLowerCase().endsWith(e)),qd=/^\*+\.\*+$/,Wd=e=>!e.startsWith(".")&&e.includes("."),Hd=e=>e!=="."&&e!==".."&&e.includes("."),zd=/^\.\*+$/,Vd=e=>e!=="."&&e!==".."&&e.startsWith("."),Kd=/^\*+$/,Jd=e=>e.length!==0&&!e.startsWith("."),Yd=e=>e.length!==0&&e!=="."&&e!=="..",Xd=/^\?+([^+@!?\*\[\(]*)?$/,Qd=([e,t=""])=>{let r=fa([e]);return t?(t=t.toLowerCase(),s=>r(s)&&s.toLowerCase().endsWith(t)):r},Zd=([e,t=""])=>{let r=Ta([e]);return t?(t=t.toLowerCase(),s=>r(s)&&s.toLowerCase().endsWith(t)):r},em=([e,t=""])=>{let r=Ta([e]);return t?s=>r(s)&&s.endsWith(t):r},tm=([e,t=""])=>{let r=fa([e]);return t?s=>r(s)&&s.endsWith(t):r},fa=([e])=>{let t=e.length;return r=>r.length===t&&!r.startsWith(".")},Ta=([e])=>{let t=e.length;return r=>r.length===t&&r!=="."&&r!==".."},Ea=typeof process=="object"&&process?typeof process.env=="object"&&process.env&&process.env.__MINIMATCH_TESTING_PLATFORM__||process.platform:"posix",ma={win32:{sep:"\\"},posix:{sep:"/"}},rm=Ea==="win32"?ma.win32.sep:ma.posix.sep;q.sep=rm;var le=Symbol("globstar **");q.GLOBSTAR=le;var sm="[^/]",om=sm+"*?",nm="(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?",im="(?:(?!(?:\\/|^)\\.).)*?",am=(e,t={})=>r=>q(r,e,t);q.filter=am;var pe=(e,t={})=>Object.assign({},e,t),cm=e=>{if(!e||typeof e!="object"||!Object.keys(e).length)return q;let t=q;return Object.assign((s,o,n={})=>t(s,o,pe(e,n)),{Minimatch:class extends t.Minimatch{constructor(o,n={}){super(o,pe(e,n))}static defaults(o){return t.defaults(pe(e,o)).Minimatch}},AST:class extends t.AST{constructor(o,n,i={}){super(o,n,pe(e,i))}static fromGlob(o,n={}){return t.AST.fromGlob(o,pe(e,n))}},unescape:(s,o={})=>t.unescape(s,pe(e,o)),escape:(s,o={})=>t.escape(s,pe(e,o)),filter:(s,o={})=>t.filter(s,pe(e,o)),defaults:s=>t.defaults(pe(e,s)),makeRe:(s,o={})=>t.makeRe(s,pe(e,o)),braceExpand:(s,o={})=>t.braceExpand(s,pe(e,o)),match:(s,o,n={})=>t.match(s,o,pe(e,n)),sep:t.sep,GLOBSTAR:le})};q.defaults=cm;var wa=(e,t={})=>(ht(e),t.nobrace||!/\{(?:(?!\{).)*\}/.test(e)?[e]:(0,ha.default)(e));q.braceExpand=wa;var um=(e,t={})=>new Ye(e,t).makeRe();q.makeRe=um;var pm=(e,t,r={})=>{let s=new Ye(t,r);return e=e.filter(o=>s.match(o)),s.options.nonull&&!e.length&&e.push(t),e};q.match=pm;var ga=/[?*]|[+@!]\(.*?\)|\[|\]/,lm=e=>e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),Ye=class{options;set;pattern;windowsPathsNoEscape;nonegate;negate;comment;empty;preserveMultipleSlashes;partial;globSet;globParts;nocase;isWindows;platform;windowsNoMagicRoot;regexp;constructor(t,r={}){ht(t),r=r||{},this.options=r,this.pattern=t,this.platform=r.platform||Ea,this.isWindows=this.platform==="win32",this.windowsPathsNoEscape=!!r.windowsPathsNoEscape||r.allowWindowsEscape===!1,this.windowsPathsNoEscape&&(this.pattern=this.pattern.replace(/\\/g,"/")),this.preserveMultipleSlashes=!!r.preserveMultipleSlashes,this.regexp=null,this.negate=!1,this.nonegate=!!r.nonegate,this.comment=!1,this.empty=!1,this.partial=!!r.partial,this.nocase=!!this.options.nocase,this.windowsNoMagicRoot=r.windowsNoMagicRoot!==void 0?r.windowsNoMagicRoot:!!(this.isWindows&&this.nocase),this.globSet=[],this.globParts=[],this.set=[],this.make()}hasMagic(){if(this.options.magicalBraces&&this.set.length>1)return!0;for(let t of this.set)for(let r of t)if(typeof r!="string")return!0;return!1}debug(...t){}make(){let t=this.pattern,r=this.options;if(!r.nocomment&&t.charAt(0)==="#"){this.comment=!0;return}if(!t){this.empty=!0;return}this.parseNegate(),this.globSet=[...new Set(this.braceExpand())],r.debug&&(this.debug=(...n)=>console.error(...n)),this.debug(this.pattern,this.globSet);let s=this.globSet.map(n=>this.slashSplit(n));this.globParts=this.preprocess(s),this.debug(this.pattern,this.globParts);let o=this.globParts.map((n,i,a)=>{if(this.isWindows&&this.windowsNoMagicRoot){let c=n[0]===""&&n[1]===""&&(n[2]==="?"||!ga.test(n[2]))&&!ga.test(n[3]),p=/^[a-z]:/i.test(n[0]);if(c)return[...n.slice(0,4),...n.slice(4).map(u=>this.parse(u))];if(p)return[n[0],...n.slice(1).map(u=>this.parse(u))]}return n.map(c=>this.parse(c))});if(this.debug(this.pattern,o),this.set=o.filter(n=>n.indexOf(!1)===-1),this.isWindows)for(let n=0;n<this.set.length;n++){let i=this.set[n];i[0]===""&&i[1]===""&&this.globParts[n][2]==="?"&&typeof i[3]=="string"&&/^[a-z]:$/i.test(i[3])&&(i[2]="?")}this.debug(this.pattern,this.set)}preprocess(t){if(this.options.noglobstar)for(let s=0;s<t.length;s++)for(let o=0;o<t[s].length;o++)t[s][o]==="**"&&(t[s][o]="*");let{optimizationLevel:r=1}=this.options;return r>=2?(t=this.firstPhasePreProcess(t),t=this.secondPhasePreProcess(t)):r>=1?t=this.levelOneOptimize(t):t=this.adjascentGlobstarOptimize(t),t}adjascentGlobstarOptimize(t){return t.map(r=>{let s=-1;for(;(s=r.indexOf("**",s+1))!==-1;){let o=s;for(;r[o+1]==="**";)o++;o!==s&&r.splice(s,o-s)}return r})}levelOneOptimize(t){return t.map(r=>(r=r.reduce((s,o)=>{let n=s[s.length-1];return o==="**"&&n==="**"?s:o===".."&&n&&n!==".."&&n!=="."&&n!=="**"?(s.pop(),s):(s.push(o),s)},[]),r.length===0?[""]:r))}levelTwoFileOptimize(t){Array.isArray(t)||(t=this.slashSplit(t));let r=!1;do{if(r=!1,!this.preserveMultipleSlashes){for(let o=1;o<t.length-1;o++){let n=t[o];o===1&&n===""&&t[0]===""||(n==="."||n==="")&&(r=!0,t.splice(o,1),o--)}t[0]==="."&&t.length===2&&(t[1]==="."||t[1]==="")&&(r=!0,t.pop())}let s=0;for(;(s=t.indexOf("..",s+1))!==-1;){let o=t[s-1];o&&o!=="."&&o!==".."&&o!=="**"&&(r=!0,t.splice(s-1,2),s-=2)}}while(r);return t.length===0?[""]:t}firstPhasePreProcess(t){let r=!1;do{r=!1;for(let s of t){let o=-1;for(;(o=s.indexOf("**",o+1))!==-1;){let i=o;for(;s[i+1]==="**";)i++;i>o&&s.splice(o+1,i-o);let a=s[o+1],c=s[o+2],p=s[o+3];if(a!==".."||!c||c==="."||c===".."||!p||p==="."||p==="..")continue;r=!0,s.splice(o,1);let u=s.slice(0);u[o]="**",t.push(u),o--}if(!this.preserveMultipleSlashes){for(let i=1;i<s.length-1;i++){let a=s[i];i===1&&a===""&&s[0]===""||(a==="."||a==="")&&(r=!0,s.splice(i,1),i--)}s[0]==="."&&s.length===2&&(s[1]==="."||s[1]==="")&&(r=!0,s.pop())}let n=0;for(;(n=s.indexOf("..",n+1))!==-1;){let i=s[n-1];if(i&&i!=="."&&i!==".."&&i!=="**"){r=!0;let c=n===1&&s[n+1]==="**"?["."]:[];s.splice(n-1,2,...c),s.length===0&&s.push(""),n-=2}}}}while(r);return t}secondPhasePreProcess(t){for(let r=0;r<t.length-1;r++)for(let s=r+1;s<t.length;s++){let o=this.partsMatch(t[r],t[s],!this.preserveMultipleSlashes);if(o){t[r]=[],t[s]=o;break}}return t.filter(r=>r.length)}partsMatch(t,r,s=!1){let o=0,n=0,i=[],a="";for(;o<t.length&&n<r.length;)if(t[o]===r[n])i.push(a==="b"?r[n]:t[o]),o++,n++;else if(s&&t[o]==="**"&&r[n]===t[o+1])i.push(t[o]),o++;else if(s&&r[n]==="**"&&t[o]===r[n+1])i.push(r[n]),n++;else if(t[o]==="*"&&r[n]&&(this.options.dot||!r[n].startsWith("."))&&r[n]!=="**"){if(a==="b")return!1;a="a",i.push(t[o]),o++,n++}else if(r[n]==="*"&&t[o]&&(this.options.dot||!t[o].startsWith("."))&&t[o]!=="**"){if(a==="a")return!1;a="b",i.push(r[n]),o++,n++}else return!1;return t.length===r.length&&i}parseNegate(){if(this.nonegate)return;let t=this.pattern,r=!1,s=0;for(let o=0;o<t.length&&t.charAt(o)==="!";o++)r=!r,s++;s&&(this.pattern=t.slice(s)),this.negate=r}matchOne(t,r,s=!1){let o=this.options;if(this.isWindows){let g=typeof t[0]=="string"&&/^[a-z]:$/i.test(t[0]),E=!g&&t[0]===""&&t[1]===""&&t[2]==="?"&&/^[a-z]:$/i.test(t[3]),v=typeof r[0]=="string"&&/^[a-z]:$/i.test(r[0]),A=!v&&r[0]===""&&r[1]===""&&r[2]==="?"&&typeof r[3]=="string"&&/^[a-z]:$/i.test(r[3]),W=E?3:g?0:void 0,K=A?3:v?0:void 0;if(typeof W=="number"&&typeof K=="number"){let[R,P]=[t[W],r[K]];R.toLowerCase()===P.toLowerCase()&&(r[K]=R,K>W?r=r.slice(K):W>K&&(t=t.slice(W)))}}let{optimizationLevel:n=1}=this.options;n>=2&&(t=this.levelTwoFileOptimize(t)),this.debug("matchOne",this,{file:t,pattern:r}),this.debug("matchOne",t.length,r.length);for(var i=0,a=0,c=t.length,p=r.length;i<c&&a<p;i++,a++){this.debug("matchOne loop");var u=r[a],d=t[i];if(this.debug(r,u,d),u===!1)return!1;if(u===le){this.debug("GLOBSTAR",[r,u,d]);var l=i,m=a+1;if(m===p){for(this.debug("** at the end");i<c;i++)if(t[i]==="."||t[i]===".."||!o.dot&&t[i].charAt(0)===".")return!1;return!0}for(;l<c;){var b=t[l];if(this.debug(`
globstar while`,t,l,r,m,b),this.matchOne(t.slice(l),r.slice(m),s))return this.debug("globstar found match!",l,c,b),!0;if(b==="."||b===".."||!o.dot&&b.charAt(0)==="."){this.debug("dot detected!",t,l,r,m);break}this.debug("globstar swallow a segment, and continue"),l++}return!!(s&&(this.debug(`
>>> no match, partial?`,t,l,r,m),l===c))}let g;if(typeof u=="string"?(g=d===u,this.debug("string match",u,d,g)):(g=u.test(d),this.debug("pattern match",u,d,g)),!g)return!1}if(i===c&&a===p)return!0;if(i===c)return s;if(a===p)return i===c-1&&t[i]==="";throw new Error("wtf?")}braceExpand(){return wa(this.pattern,this.options)}parse(t){ht(t);let r=this.options;if(t==="**")return le;if(t==="")return"";let s,o=null;(s=t.match(Kd))?o=r.dot?Yd:Jd:(s=t.match(Id))?o=(r.nocase?r.dot?Nd:Bd:r.dot?$d:Md)(s[1]):(s=t.match(Xd))?o=(r.nocase?r.dot?Zd:Qd:r.dot?em:tm)(s):(s=t.match(qd))?o=r.dot?Hd:Wd:(s=t.match(zd))&&(o=Vd);let n=Je.fromGlob(t,this.options).toMMPattern();return o&&typeof n=="object"&&Reflect.defineProperty(n,"test",{value:o}),n}makeRe(){if(this.regexp||this.regexp===!1)return this.regexp;let t=this.set;if(!t.length)return this.regexp=!1,this.regexp;let r=this.options,s=r.noglobstar?om:r.dot?nm:im,o=new Set(r.nocase?["i"]:[]),n=t.map(c=>{let p=c.map(u=>{if(u instanceof RegExp)for(let d of u.flags.split(""))o.add(d);return typeof u=="string"?lm(u):u===le?le:u._src});return p.forEach((u,d)=>{let l=p[d+1],m=p[d-1];u!==le||m===le||(m===void 0?l!==void 0&&l!==le?p[d+1]="(?:\\/|"+s+"\\/)?"+l:p[d]=s:l===void 0?p[d-1]=m+"(?:\\/|"+s+")?":l!==le&&(p[d-1]=m+"(?:\\/|\\/"+s+"\\/)"+l,p[d+1]=le))}),p.filter(u=>u!==le).join("/")}).join("|"),[i,a]=t.length>1?["(?:",")"]:["",""];n="^"+i+n+a+"$",this.negate&&(n="^(?!"+n+").+$");try{this.regexp=new RegExp(n,[...o].join(""))}catch{this.regexp=!1}return this.regexp}slashSplit(t){return this.preserveMultipleSlashes?t.split("/"):this.isWindows&&/^\/\/[^\/]+/.test(t)?["",...t.split(/\/+/)]:t.split(/\/+/)}match(t,r=this.partial){if(this.debug("match",t,this.pattern),this.comment)return!1;if(this.empty)return t==="";if(t==="/"&&r)return!0;let s=this.options;this.isWindows&&(t=t.split("\\").join("/"));let o=this.slashSplit(t);this.debug(this.pattern,"split",o);let n=this.set;this.debug(this.pattern,"set",n);let i=o[o.length-1];if(!i)for(let a=o.length-2;!i&&a>=0;a--)i=o[a];for(let a=0;a<n.length;a++){let c=n[a],p=o;if(s.matchBase&&c.length===1&&(p=[i]),this.matchOne(p,c,r))return s.flipNegate?!0:!this.negate}return s.flipNegate?!1:this.negate}static defaults(t){return q.defaults(t).Minimatch}};q.AST=Je;q.Minimatch=Ye;q.escape=bs;q.unescape=Se;var ba=require("events"),Zt=H(require("fs")),Qt=class extends ba.EventEmitter{constructor(r){super();this.isCommitting=!1;this.outputChannel=r;let s=B.workspace.workspaceFolders;if(!s||s.length===0)throw B.window.showErrorMessage("DevTrack: No workspace folder is open. Please open a folder to start tracking."),new Error("No workspace folder open.");let o=s[0].uri.fsPath;if(this.repoPath=o,this.trackingDirectory=me.join(this.repoPath,".devtrack"),this.initialTimestampFile=me.join(this.trackingDirectory,"initial_timestamp"),!me.isAbsolute(this.repoPath))throw new Error("Invalid repository path.");this.git=zi({baseDir:this.repoPath,binary:"git",maxConcurrentProcesses:1,trimmed:!1})}async initializeRepo(r){try{try{await this.git.raw(["--version"])}catch{throw new Error("Git is not installed or not accessible")}if(!await this.git.checkIsRepo())await this.git.init(),await this.git.addConfig("core.autocrlf","false"),await this.git.addConfig("user.name","DevTrack"),await this.git.addConfig("user.email","devtrack@users.noreply.github.com"),this.outputChannel.appendLine("DevTrack: Initialized new Git repository.");else if(await this.isDevTrackRepo()){this.outputChannel.appendLine("DevTrack: Repository already initialized.");return}await this.setupInitialConfig(r)}catch(s){throw this.outputChannel.appendLine(`DevTrack: Failed to initialize Git repository. ${s.message}`),s}}async isDevTrackRepo(){try{let r=me.join(this.repoPath,".devtrack");return await B.workspace.fs.stat(B.Uri.file(r)),!0}catch{return!1}}async setupInitialConfig(r){try{await B.workspace.fs.createDirectory(B.Uri.file(this.trackingDirectory));let s=Date.now();await B.workspace.fs.writeFile(B.Uri.file(this.initialTimestampFile),Buffer.from(s.toString(),"utf8"));let o=me.join(this.trackingDirectory,"README.md"),n=`# DevTrack Activity Log

This directory is managed by DevTrack to track your coding activity.
Only files modified after ${new Date(s).toLocaleString()} will be tracked.

## Configuration
- Commit Frequency: ${B.workspace.getConfiguration("devtrack").get("commitFrequency")} minutes
- Excluded Patterns: ${JSON.stringify(B.workspace.getConfiguration("devtrack").get("exclude"))}
`;await B.workspace.fs.writeFile(B.Uri.file(o),Buffer.from(n,"utf8"));let i=me.join(this.repoPath,".gitignore");if(!Zt.existsSync(i)){let a=["node_modules/","dist/",".DS_Store","build/","coverage/",".env","*.log",".vscode/","temp/","*.tmp"].join(`
`);await B.workspace.fs.writeFile(B.Uri.file(i),Buffer.from(a,"utf8"))}await this.configureRemote(r),await this.setupMainBranch(),await this.git.add([".devtrack/**/*",".gitignore"]),await this.git.commit("DevTrack: Initialize repository tracking"),await this.git.push(["-u","origin","main"]),this.outputChannel.appendLine("DevTrack: Initial setup completed successfully.")}catch(s){throw new Error(`Failed to set up initial configuration: ${s.message}`)}}async configureRemote(r){let o=(await this.git.getRemotes(!0)).find(n=>n.name==="origin");o?o.refs.fetch!==r&&(await this.git.removeRemote("origin"),await this.git.addRemote("origin",r)):await this.git.addRemote("origin",r)}async setupMainBranch(){let r=await this.git.branchLocal();(!r.current||r.current!=="main")&&await this.git.checkoutLocalBranch("main")}async commitAndPush(r){if(this.isCommitting){this.outputChannel.appendLine("DevTrack: Another commit is in progress");return}this.isCommitting=!0;let s;try{let o=await this.getModifiedFiles();if(!o.length){this.outputChannel.appendLine("DevTrack: No files to commit");return}s=(await this.git.branch()).current,s!=="main"&&await this.git.checkout("main");try{await this.git.pull("origin","main",{"--rebase":"true"})}catch{this.outputChannel.appendLine("DevTrack: Pull failed (continuing anyway)")}for(let a of o)try{await this.git.add(a)}catch{this.outputChannel.appendLine(`DevTrack: Failed to stage ${a}`)}if((await this.git.status()).staged.length===0){this.outputChannel.appendLine("DevTrack: No files were staged successfully");return}await this.git.commit(r),await this.git.push("origin","main"),this.emit("commit",r),this.outputChannel.appendLine(`DevTrack: Successfully committed and pushed: "${r}"`)}catch(o){throw this.outputChannel.appendLine(`DevTrack: Git operation failed: ${o.message}`),o}finally{if(s&&s!=="main")try{await this.git.checkout(s)}catch(o){this.outputChannel.appendLine(`DevTrack: Failed to restore original branch: ${o}`)}this.isCommitting=!1}}async getInitialTimestamp(){try{let r=await B.workspace.fs.readFile(B.Uri.file(this.initialTimestampFile));return parseInt(r.toString(),10)}catch{return Date.now()}}async getModifiedFiles(){try{let r=await this.git.status(),s=await this.getInitialTimestamp();this.outputChannel.appendLine(`DevTrack: Initial timestamp: ${new Date(s).toLocaleString()}`);let n=B.workspace.getConfiguration("devtrack").get("exclude")||[];return(await Promise.all(r.files.filter(a=>!(a.path.startsWith(".devtrack/")||a.path===".gitignore"||n.some(c=>q(a.path,c))||!this.isTrackedFileType(a.path))).map(async a=>{let c=me.join(this.repoPath,a.path);if(a.index==="D"||a.working_dir==="D")return a.path;try{if((await Zt.promises.stat(c)).mtimeMs>s)return a.path}catch{return null}return null}))).filter(a=>a!==null)}catch(r){return this.outputChannel.appendLine(`DevTrack: Error getting modified files: ${r}`),[]}}isTrackedFileType(r){let s=me.extname(r).toLowerCase().slice(1);return new Set(["ts","js","py","java","c","cpp","h","hpp","css","scss","html","jsx","tsx","vue","php","rb","go","rs","swift","md","json","yml","yaml"]).has(s)}};var er=H(require("vscode")),va=require("events");var tr=class extends va.EventEmitter{constructor(r){super();this.changes=new Map;this.excludePatterns=[];this.outputChannel=r,this.initializeWatcher()}initializeWatcher(){let r=er.workspace.getConfiguration("devtrack");this.excludePatterns=r.get("exclude")||[],this.watcher=er.workspace.createFileSystemWatcher("**/*",!1,!1,!1),this.watcher.onDidChange(s=>this.handleChange(s,"changed")),this.watcher.onDidCreate(s=>this.handleChange(s,"added")),this.watcher.onDidDelete(s=>this.handleChange(s,"deleted")),this.outputChannel.appendLine("DevTrack: File system watcher initialized.")}handleChange(r,s){var o;try{let n=er.workspace.asRelativePath(r);if(!this.excludePatterns.some(a=>q(n,a))){let a=(o=r.fsPath.split(".").pop())==null?void 0:o.toLowerCase();if(a&&["ts","js","py","java","c","cpp","h","hpp","css","scss","html","jsx","tsx","vue","php","rb","go","rs","swift","md","json","yml","yaml"].includes(a)){let p=r.fsPath,u=this.changes.get(p);u&&(u.type==="deleted"&&s==="added"||u.type==="added"&&s==="changed")&&(s="added");let d={uri:r,timestamp:new Date,type:s};this.changes.set(p,d),this.emit("change",d),this.outputChannel.appendLine(`DevTrack: Detected ${s} in ${n}`)}}}catch(n){this.outputChannel.appendLine(`DevTrack: Error handling file change: ${n}`)}}getChangedFiles(){return Array.from(this.changes.values())}clearChanges(){this.changes.clear(),this.outputChannel.appendLine("DevTrack: Cleared tracked changes.")}updateExcludePatterns(r){this.excludePatterns=r,this.outputChannel.appendLine("DevTrack: Updated exclude patterns.")}dispose(){this.watcher.dispose(),this.outputChannel.appendLine("DevTrack: Disposed file system watcher.")}};var _a=H(require("vscode")),ya=H(require("path"));var Xe=H(require("vscode")),sr=H(require("path")),rr=class{constructor(t,r){this.commitHistory=[];this.projectStats={mostChangedFiles:new Map,recentMilestones:[],activeBranch:"",lastCommitTime:new Date};this.outputChannel=t,this.extensionContext=r,this.loadContext()}async loadContext(){try{await this.loadGitHistory(),await this.updateProjectStats(),this.outputChannel.appendLine("DevTrack: Loaded project context")}catch(t){this.outputChannel.appendLine(`DevTrack: Error loading context: ${t}`)}}async loadGitHistory(){try{let t=Xe.extensions.getExtension("vscode.git");if(t){let r=t.exports.getAPI(1);if(r.repositories.length>0){let o=await r.repositories[0].log({maxEntries:50});this.commitHistory=o.map(n=>{var i;return{timestamp:n.commitDate.getTime(),summary:n.message,files:((i=n.files)==null?void 0:i.map(a=>Xe.workspace.asRelativePath(a.uri)))||[],hash:n.hash}})}}}catch(t){this.outputChannel.appendLine(`DevTrack: Error loading git history: ${t}`)}}shouldTrackFile(t){let r=["node_modules",".git",".DS_Store","dist","out","build",".vscode"],s=sr.extname(t).toLowerCase().slice(1),o=["ts","js","py","java","c","cpp","h","hpp","css","scss","html","jsx","tsx","vue","php","rb","go","rs","swift","md","json","yml","yaml"];return!r.some(n=>t.includes(n))&&!!s&&o.includes(s)}async addCommit(t,r){try{let s=r.map(n=>Xe.workspace.asRelativePath(n.uri)).filter(n=>this.shouldTrackFile(n)),o={timestamp:Date.now(),summary:t,files:s};await this.loadGitHistory(),await this.updateProjectStats()}catch(s){this.outputChannel.appendLine(`DevTrack: Error adding commit: ${s}`)}}async updateProjectStats(){var t,r;try{let s=new Map;this.commitHistory.forEach(i=>{i.files.forEach(a=>{if(this.shouldTrackFile(a)){let c=s.get(a)||0;s.set(a,c+1)}})});let o=new Map([...s.entries()].sort((i,a)=>a[1]-i[1]).slice(0,10)),n="";try{let i=Xe.extensions.getExtension("vscode.git");if(i){let a=i.exports.getAPI(1);a.repositories.length>0&&(n=((t=a.repositories[0].state.HEAD)==null?void 0:t.name)||"")}}catch(i){this.outputChannel.appendLine(`DevTrack: Error getting git branch: ${i}`)}this.projectStats={mostChangedFiles:o,recentMilestones:[],activeBranch:n,lastCommitTime:new Date(((r=this.commitHistory[0])==null?void 0:r.timestamp)||Date.now())}}catch(s){this.outputChannel.appendLine(`DevTrack: Error updating project stats: ${s}`)}}getContextForSummary(t){let r="";try{let s=t.map(o=>sr.basename(o.uri.fsPath)).filter((o,n,i)=>i.indexOf(o)===n);s.length>0&&(r+=`Files: ${s.join(", ")}. `),this.projectStats.activeBranch&&(r+=`[${this.projectStats.activeBranch}] `)}catch(s){this.outputChannel.appendLine(`DevTrack: Error generating context summary: ${s}`)}return r}};var or=class{constructor(t,r){this.outputChannel=t,this.projectContext=new rr(t,r)}async getFileChanges(t){try{let r=t.type==="added"?void 0:t.uri,s=t.type==="deleted"?void 0:t.uri;if(!r&&!s)return"";let o=_a.extensions.getExtension("vscode.git");if(!o)return"";let n=o.exports.getAPI(1);if(!n.repositories.length)return"";let a=await n.repositories[0].diff(r,s);return this.parseDiff(a,ya.basename(t.uri.fsPath))}catch(r){return this.outputChannel.appendLine(`Error getting file changes: ${r}`),""}}parseDiff(t,r){if(!t)return r;let s=t.split(`
`),o={modified:new Set,added:new Set,removed:new Set},n="";for(let a of s){if(!a.trim()||a.match(/^[\+\-]\s*\/\//))continue;let c=a.match(/^([\+\-])\s*(async\s+)?((function|class|const|let|var)\s+)?([a-zA-Z_$][a-zA-Z0-9_$]*)/);if(c){let[p,u,d,l,m,b]=c;u==="+"?o.added.add(b):u==="-"&&o.removed.add(b),o.added.has(b)&&o.removed.has(b)&&(o.modified.add(b),o.added.delete(b),o.removed.delete(b));continue}}let i=[];return o.modified.size>0&&i.push(`modified ${Array.from(o.modified).join(", ")}`),o.added.size>0&&i.push(`added ${Array.from(o.added).join(", ")}`),o.removed.size>0&&i.push(`removed ${Array.from(o.removed).join(", ")}`),i.length>0?`${r} (${i.join("; ")})`:r}async generateSummary(t){try{let s=(await Promise.all(t.map(i=>this.getFileChanges(i)))).filter(Boolean),o=this.projectContext.getContextForSummary(t),n="DevTrack:";if(o&&(n+=` ${o}`),s.length>0)n+=` | Changes in: ${s.join("; ")}`;else{let i=this.calculateChangeStats(t),a=[];i.added>0&&a.push(`${i.added} files added`),i.modified>0&&a.push(`${i.modified} files modified`),i.deleted>0&&a.push(`${i.deleted} files deleted`),n+=` | ${a.join(", ")}`}return await this.projectContext.addCommit(n,t),this.outputChannel.appendLine(`DevTrack: Generated commit summary: "${n}"`),n}catch(r){return this.outputChannel.appendLine(`DevTrack: Error generating summary: ${r}`),"DevTrack: Updated files"}}calculateChangeStats(t){return{added:t.filter(r=>r.type==="added").length,modified:t.filter(r=>r.type==="changed").length,deleted:t.filter(r=>r.type==="deleted").length}}};var nr=require("vscode"),Et=class{constructor(t,r,s,o,n){this.timer=null;this.commitFrequency=t,this.tracker=r,this.summaryGenerator=s,this.gitService=o,this.outputChannel=n}start(){this.timer&&clearInterval(this.timer),this.timer=setInterval(()=>this.commitChanges(),this.commitFrequency*60*1e3),this.outputChannel.appendLine(`Scheduler: Started with a frequency of ${this.commitFrequency} minutes.`)}stop(){this.timer&&(clearInterval(this.timer),this.timer=null,this.outputChannel.appendLine("Scheduler: Stopped."))}async commitChanges(){let t=this.tracker.getChangedFiles();if(t.length===0){this.outputChannel.appendLine("Scheduler: No changes detected.");return}let r=await this.summaryGenerator.generateSummary(t);if(nr.workspace.getConfiguration("devtrack").get("confirmBeforeCommit",!0)&&await nr.window.showInformationMessage(`DevTrack: A commit will be made with the following message:
"${r}"`,{modal:!0},"Proceed","Cancel")!=="Proceed"){this.outputChannel.appendLine("Scheduler: Commit canceled by the user.");return}try{await this.gitService.commitAndPush(r),this.tracker.clearChanges(),this.outputChannel.appendLine(`Scheduler: Committed changes with message "${r}".`)}catch{this.outputChannel.appendLine("Scheduler: Failed to commit changes.")}}updateFrequency(t){this.commitFrequency=t,this.start(),this.outputChannel.appendLine(`Scheduler: Updated commit frequency to ${t} minutes.`)}};async function dm(e){let t=G.window.createOutputChannel("DevTrack");e.subscriptions.push(t),t.appendLine("DevTrack: Extension activated.");let r=new _t(t),s=new Qt(t),o=new tr(t),n=new or(t,e),i=G.workspace.getConfiguration("devtrack"),a=i.get("repoName")||"code-tracking",c=i.get("commitFrequency")||30,p=i.get("exclude")||[],u=i.get("confirmBeforeCommit")||!0;if(t.appendLine(`DevTrack Configuration:
    Repository Name: ${a}
    Commit Frequency: ${c} minutes
    Exclude Patterns: ${p.join(", ")||"None"}
    Confirm Before Commit: ${u}
  `),!a||a.trim()===""){G.window.showErrorMessage("DevTrack: Repository name is not set correctly in the configuration."),t.appendLine("DevTrack: Repository name is missing or invalid.");return}t.appendLine(`DevTrack: Using repository name "${a}".`);let d=G.authentication,l,m=G.window.createStatusBarItem(G.StatusBarAlignment.Right,100);m.text="$(circle-slash) DevTrack: Stopped",m.tooltip="DevTrack: Tracking is stopped",m.show(),e.subscriptions.push(m);let b=G.window.createStatusBarItem(G.StatusBarAlignment.Right,101);b.text="$(mark-github) DevTrack: Not Connected",b.tooltip="DevTrack Status",b.show(),e.subscriptions.push(b);let g=null;async function E(){if(await G.window.showWarningMessage("Are you sure you want to logout from DevTrack?",{modal:!0},"Yes","No")!=="Yes"){t.appendLine("DevTrack: Logout canceled by user.");return}r.setToken(""),b.text="$(mark-github) DevTrack: Not Connected",b.tooltip="DevTrack Status",m.text="$(circle-slash) DevTrack: Stopped",m.tooltip="DevTrack: Tracking is stopped",g&&(g.stop(),g=null,t.appendLine("DevTrack: Scheduler stopped due to logout.")),await G.window.showInformationMessage("DevTrack: Successfully logged out. Would you like to log in with a different account?","Yes","No")==="Yes"&&G.commands.executeCommand("devtrack.login"),t.appendLine("DevTrack: User logged out.")}try{if(l=await d.getSession("github",["repo","read:user"],{createIfNone:!1}),l){t.appendLine("DevTrack: Using existing GitHub session."),b.text="$(check) DevTrack: Connected",b.tooltip="DevTrack is connected to GitHub",r.setToken(l.accessToken);let R=await r.getUsername();if(!R){G.window.showErrorMessage("DevTrack: Unable to retrieve GitHub username. Please ensure your token is valid."),t.appendLine("DevTrack: Unable to retrieve GitHub username.");return}t.appendLine(`Authenticated GitHub Username: ${R}`);let P=await r.repoExists(a),Y=`https://github.com/${R}/${a}.git`;if(P)t.appendLine(`DevTrack: Repository "${a}" already exists.`);else{let U=await r.createRepo(a);if(U)Y=U,t.appendLine(`DevTrack: Created new repository at ${Y}`);else{G.window.showErrorMessage("DevTrack: Failed to create GitHub repository."),t.appendLine("DevTrack: Failed to create GitHub repository.");return}}try{await s.initializeRepo(Y)}catch{t.appendLine("DevTrack: Failed to initialize Git repository.");return}g=new Et(c,o,n,s,t),g.start(),t.appendLine("DevTrack: Scheduler started."),m.text="$(clock) DevTrack: Tracking",m.tooltip="DevTrack: Tracking your coding activity is active",s.on("commit",U=>{let J=new Date;m.text=`$(check) Last Commit: ${J.toLocaleTimeString()}`,t.appendLine(`DevTrack: Last commit at ${J.toLocaleTimeString()} with message: "${U}"`)})}else b.text="$(mark-github) DevTrack: Not Connected",b.tooltip="DevTrack Status",await G.window.showInformationMessage("DevTrack needs to be connected to GitHub to start tracking. Would you like to connect now?","Yes","No")==="Yes"&&G.commands.executeCommand("devtrack.login");let v=G.commands.registerCommand("devtrack.startTracking",()=>{g?(g.start(),m.text="$(clock) DevTrack: Tracking",m.tooltip="DevTrack: Tracking your coding activity is active",G.window.showInformationMessage("DevTrack: Tracking started."),t.appendLine("DevTrack: Tracking started manually.")):(G.window.showErrorMessage("DevTrack: Please connect to GitHub first."),t.appendLine("DevTrack: Scheduler is not initialized."))}),A=G.commands.registerCommand("devtrack.stopTracking",()=>{g?(g.stop(),m.text="$(circle-slash) DevTrack: Stopped",m.tooltip="DevTrack: Tracking is stopped",G.window.showInformationMessage("DevTrack: Tracking stopped."),t.appendLine("DevTrack: Tracking stopped manually.")):(G.window.showErrorMessage("DevTrack: Please connect to GitHub first."),t.appendLine("DevTrack: Scheduler is not initialized."))}),W=G.commands.registerCommand("devtrack.login",async()=>{try{if(r.setToken(""),l=await d.getSession("github",["repo","read:user"],{forceNewSession:!0}),l){r.setToken(l.accessToken);let R=await r.getUsername();if(R){G.window.showInformationMessage(`DevTrack: Connected as ${R}`),t.appendLine(`DevTrack: Connected as ${R}`),b.text="$(check) DevTrack: Connected",b.tooltip="DevTrack is connected to GitHub";let P=await r.repoExists(a),Y=`https://github.com/${R}/${a}.git`;if(P)t.appendLine(`DevTrack: Repository "${a}" already exists.`);else{let U=await r.createRepo(a);if(U)Y=U,t.appendLine(`DevTrack: Created new repository at ${Y}`);else{G.window.showErrorMessage("DevTrack: Failed to create GitHub repository."),t.appendLine("DevTrack: Failed to create GitHub repository.");return}}try{await s.initializeRepo(Y)}catch{t.appendLine("DevTrack: Failed to initialize Git repository.");return}g=new Et(c,o,n,s,t),g.start(),t.appendLine("DevTrack: Scheduler started."),m.text="$(clock) DevTrack: Tracking",m.tooltip="DevTrack: Tracking your coding activity is active"}else G.window.showErrorMessage("DevTrack: Unable to retrieve GitHub username."),t.appendLine("DevTrack: Unable to retrieve GitHub username.")}else t.appendLine("DevTrack: GitHub connection canceled.")}catch(R){t.appendLine(`DevTrack: GitHub connection failed. ${R}`),G.window.showErrorMessage("DevTrack: GitHub connection failed.")}}),K=G.commands.registerCommand("devtrack.logout",async()=>{await E()});e.subscriptions.push(A,v,W,K),G.workspace.onDidChangeConfiguration(async R=>{if(R.affectsConfiguration("devtrack")){let P=G.workspace.getConfiguration("devtrack"),Y=P.get("repoName")||"code-tracking",U=P.get("commitFrequency")||30,J=P.get("exclude")||[],wt=P.get("confirmBeforeCommit")||!0;t.appendLine("DevTrack: Configuration updated."),g&&U!==c&&(g.updateFrequency(U),t.appendLine(`DevTrack: Commit frequency updated to ${U} minutes.`)),o&&JSON.stringify(J)!==JSON.stringify(p)&&(o.updateExcludePatterns(J),t.appendLine("DevTrack: Exclude patterns updated.")),Y!==a&&(G.window.showWarningMessage("DevTrack: Repository name changed. Please restart the extension to apply changes."),t.appendLine("DevTrack: Repository name changed."))}})}catch(v){t.appendLine(`DevTrack: GitHub authentication failed. ${v}`),G.window.showErrorMessage("DevTrack: GitHub authentication failed.")}}function mm(){}0&&(module.exports={activate,deactivate});
