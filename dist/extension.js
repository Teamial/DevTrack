"use strict";var tc=Object.create;var tt=Object.defineProperty;var rc=Object.getOwnPropertyDescriptor;var sc=Object.getOwnPropertyNames;var oc=Object.getPrototypeOf,nc=Object.prototype.hasOwnProperty;var Ss=e=>{throw TypeError(e)};var ic=(e,t,r)=>t in e?tt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var ac=(e,t)=>()=>(e&&(t=e(e=0)),t);var pe=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Cs=(e,t)=>{for(var r in t)tt(e,r,{get:t[r],enumerable:!0})},Ps=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of sc(t))!nc.call(e,o)&&o!==r&&tt(e,o,{get:()=>t[o],enumerable:!(s=rc(t,o))||s.enumerable});return e};var $=(e,t,r)=>(r=e!=null?tc(oc(e)):{},Ps(t||!e||!e.__esModule?tt(r,"default",{value:e,enumerable:!0}):r,e)),Os=e=>Ps(tt({},"__esModule",{value:!0}),e);var As=(e,t,r)=>ic(e,typeof t!="symbol"?t+"":t,r),lr=(e,t,r)=>t.has(e)||Ss("Cannot "+r);var h=(e,t,r)=>(lr(e,t,"read from private field"),r?r.call(e):t.get(e)),J=(e,t,r)=>t.has(e)?Ss("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),x=(e,t,r,s)=>(lr(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r),Ee=(e,t,r)=>(lr(e,t,"access private method"),r);var so=pe((Im,ro)=>{var qe=1e3,We=qe*60,He=We*60,Re=He*24,Vc=Re*7,Kc=Re*365.25;ro.exports=function(e,t){t=t||{};var r=typeof e;if(r==="string"&&e.length>0)return Yc(e);if(r==="number"&&isFinite(e))return t.long?Xc(e):Jc(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function Yc(e){if(e=String(e),!(e.length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]),s=(t[2]||"ms").toLowerCase();switch(s){case"years":case"year":case"yrs":case"yr":case"y":return r*Kc;case"weeks":case"week":case"w":return r*Vc;case"days":case"day":case"d":return r*Re;case"hours":case"hour":case"hrs":case"hr":case"h":return r*He;case"minutes":case"minute":case"mins":case"min":case"m":return r*We;case"seconds":case"second":case"secs":case"sec":case"s":return r*qe;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function Jc(e){var t=Math.abs(e);return t>=Re?Math.round(e/Re)+"d":t>=He?Math.round(e/He)+"h":t>=We?Math.round(e/We)+"m":t>=qe?Math.round(e/qe)+"s":e+"ms"}function Xc(e){var t=Math.abs(e);return t>=Re?St(e,t,Re,"day"):t>=He?St(e,t,He,"hour"):t>=We?St(e,t,We,"minute"):t>=qe?St(e,t,qe,"second"):e+" ms"}function St(e,t,r,s){var o=t>=r*1.5;return Math.round(e/r)+" "+s+(o?"s":"")}});var yr=pe((jm,oo)=>{function Qc(e){r.debug=r,r.default=r,r.coerce=c,r.disable=i,r.enable=o,r.enabled=a,r.humanize=so(),r.destroy=l,Object.keys(e).forEach(u=>{r[u]=e[u]}),r.names=[],r.skips=[],r.formatters={};function t(u){let p=0;for(let d=0;d<u.length;d++)p=(p<<5)-p+u.charCodeAt(d),p|=0;return r.colors[Math.abs(p)%r.colors.length]}r.selectColor=t;function r(u){let p,d=null,g,k;function T(...w){if(!T.enabled)return;let _=T,D=Number(new Date),W=D-(p||D);_.diff=W,_.prev=p,_.curr=D,p=D,w[0]=r.coerce(w[0]),typeof w[0]!="string"&&w.unshift("%O");let z=0;w[0]=w[0].replace(/%([a-zA-Z%])/g,(M,$e)=>{if(M==="%%")return"%";z++;let Pe=r.formatters[$e];if(typeof Pe=="function"){let ce=w[z];M=Pe.call(_,ce),w.splice(z,1),z--}return M}),r.formatArgs.call(_,w),(_.log||r.log).apply(_,w)}return T.namespace=u,T.useColors=r.useColors(),T.color=r.selectColor(u),T.extend=s,T.destroy=r.destroy,Object.defineProperty(T,"enabled",{enumerable:!0,configurable:!1,get:()=>d!==null?d:(g!==r.namespaces&&(g=r.namespaces,k=r.enabled(u)),k),set:w=>{d=w}}),typeof r.init=="function"&&r.init(T),T}function s(u,p){let d=r(this.namespace+(typeof p>"u"?":":p)+u);return d.log=this.log,d}function o(u){r.save(u),r.namespaces=u,r.names=[],r.skips=[];let p=(typeof u=="string"?u:"").trim().replace(" ",",").split(",").filter(Boolean);for(let d of p)d[0]==="-"?r.skips.push(d.slice(1)):r.names.push(d)}function n(u,p){let d=0,g=0,k=-1,T=0;for(;d<u.length;)if(g<p.length&&(p[g]===u[d]||p[g]==="*"))p[g]==="*"?(k=g,T=d,g++):(d++,g++);else if(k!==-1)g=k+1,T++,d=T;else return!1;for(;g<p.length&&p[g]==="*";)g++;return g===p.length}function i(){let u=[...r.names,...r.skips.map(p=>"-"+p)].join(",");return r.enable(""),u}function a(u){for(let p of r.skips)if(n(u,p))return!1;for(let p of r.names)if(n(u,p))return!0;return!1}function c(u){return u instanceof Error?u.stack||u.message:u}function l(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return r.enable(r.load()),r}oo.exports=Qc});var no=pe((ee,Ct)=>{ee.formatArgs=eu;ee.save=tu;ee.load=ru;ee.useColors=Zc;ee.storage=su();ee.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})();ee.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function Zc(){if(typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs))return!0;if(typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function eu(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+Ct.exports.humanize(this.diff),!this.useColors)return;let t="color: "+this.color;e.splice(1,0,t,"color: inherit");let r=0,s=0;e[0].replace(/%[a-zA-Z%]/g,o=>{o!=="%%"&&(r++,o==="%c"&&(s=r))}),e.splice(s,0,t)}ee.log=console.debug||console.log||(()=>{});function tu(e){try{e?ee.storage.setItem("debug",e):ee.storage.removeItem("debug")}catch{}}function ru(){let e;try{e=ee.storage.getItem("debug")}catch{}return!e&&typeof process<"u"&&"env"in process&&(e=process.env.DEBUG),e}function su(){try{return localStorage}catch{}}Ct.exports=yr()(ee);var{formatters:ou}=Ct.exports;ou.j=function(e){try{return JSON.stringify(e)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}});var ao={};Cs(ao,{createSupportsColor:()=>Gr,default:()=>uu});function se(e,t=globalThis.Deno?globalThis.Deno.args:Ot.default.argv){let r=e.startsWith("-")?"":e.length===1?"-":"--",s=t.indexOf(r+e),o=t.indexOf("--");return s!==-1&&(o===-1||s<o)}function nu(){if("FORCE_COLOR"in A)return A.FORCE_COLOR==="true"?1:A.FORCE_COLOR==="false"?0:A.FORCE_COLOR.length===0?1:Math.min(Number.parseInt(A.FORCE_COLOR,10),3)}function iu(e){return e===0?!1:{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function au(e,{streamIsTTY:t,sniffFlags:r=!0}={}){let s=nu();s!==void 0&&(Pt=s);let o=r?Pt:s;if(o===0)return 0;if(r){if(se("color=16m")||se("color=full")||se("color=truecolor"))return 3;if(se("color=256"))return 2}if("TF_BUILD"in A&&"AGENT_NAME"in A)return 1;if(e&&!t&&o===void 0)return 0;let n=o||0;if(A.TERM==="dumb")return n;if(Ot.default.platform==="win32"){let i=io.default.release().split(".");return Number(i[0])>=10&&Number(i[2])>=10586?Number(i[2])>=14931?3:2:1}if("CI"in A)return"GITHUB_ACTIONS"in A||"GITEA_ACTIONS"in A?3:["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","BUILDKITE","DRONE"].some(i=>i in A)||A.CI_NAME==="codeship"?1:n;if("TEAMCITY_VERSION"in A)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(A.TEAMCITY_VERSION)?1:0;if(A.COLORTERM==="truecolor"||A.TERM==="xterm-kitty")return 3;if("TERM_PROGRAM"in A){let i=Number.parseInt((A.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(A.TERM_PROGRAM){case"iTerm.app":return i>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(A.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(A.TERM)||"COLORTERM"in A?1:n}function Gr(e,t={}){let r=au(e,{streamIsTTY:e&&e.isTTY,...t});return iu(r)}var Ot,io,kr,A,Pt,cu,uu,co=ac(()=>{Ot=$(require("process"),1),io=$(require("os"),1),kr=$(require("tty"),1);({env:A}=Ot.default);se("no-color")||se("no-colors")||se("color=false")||se("color=never")?Pt=0:(se("color")||se("colors")||se("color=true")||se("color=always"))&&(Pt=1);cu={stdout:Gr({isTTY:kr.default.isatty(1)}),stderr:Gr({isTTY:kr.default.isatty(2)})},uu=cu});var lo=pe((N,Rt)=>{var lu=require("tty"),At=require("util");N.init=Tu;N.log=mu;N.formatArgs=du;N.save=hu;N.load=fu;N.useColors=pu;N.destroy=At.deprecate(()=>{},"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");N.colors=[6,2,3,4,5,1];try{let e=(co(),Os(ao));e&&(e.stderr||e).level>=2&&(N.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}N.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{let r=t.substring(6).toLowerCase().replace(/_([a-z])/g,(o,n)=>n.toUpperCase()),s=process.env[t];return/^(yes|on|true|enabled)$/i.test(s)?s=!0:/^(no|off|false|disabled)$/i.test(s)?s=!1:s==="null"?s=null:s=Number(s),e[r]=s,e},{});function pu(){return"colors"in N.inspectOpts?!!N.inspectOpts.colors:lu.isatty(process.stderr.fd)}function du(e){let{namespace:t,useColors:r}=this;if(r){let s=this.color,o="\x1B[3"+(s<8?s:"8;5;"+s),n=`  ${o};1m${t} \x1B[0m`;e[0]=n+e[0].split(`
`).join(`
`+n),e.push(o+"m+"+Rt.exports.humanize(this.diff)+"\x1B[0m")}else e[0]=gu()+t+" "+e[0]}function gu(){return N.inspectOpts.hideDate?"":new Date().toISOString()+" "}function mu(...e){return process.stderr.write(At.formatWithOptions(N.inspectOpts,...e)+`
`)}function hu(e){e?process.env.DEBUG=e:delete process.env.DEBUG}function fu(){return process.env.DEBUG}function Tu(e){e.inspectOpts={};let t=Object.keys(N.inspectOpts);for(let r=0;r<t.length;r++)e.inspectOpts[t[r]]=N.inspectOpts[t[r]]}Rt.exports=yr()(N);var{formatters:uo}=Rt.exports;uo.o=function(e){return this.inspectOpts.colors=this.useColors,At.inspect(e,this.inspectOpts).split(`
`).map(t=>t.trim()).join(" ")};uo.O=function(e){return this.inspectOpts.colors=this.useColors,At.inspect(e,this.inspectOpts)}});var Cr=pe((Mm,Sr)=>{typeof process>"u"||process.type==="renderer"||process.browser===!0||process.__nwjs?Sr.exports=no():Sr.exports=lo()});var po=pe(te=>{"use strict";var Eu=te&&te.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(te,"__esModule",{value:!0});var wu=require("fs"),bu=Eu(Cr()),ze=bu.default("@kwsites/file-exists");function vu(e,t,r){ze("checking %s",e);try{let s=wu.statSync(e);return s.isFile()&&t?(ze("[OK] path represents a file"),!0):s.isDirectory()&&r?(ze("[OK] path represents a directory"),!0):(ze("[FAIL] path represents something other than a file or directory"),!1)}catch(s){if(s.code==="ENOENT")return ze("[FAIL] path is not accessible: %o",s),!1;throw ze("[FATAL] %o",s),s}}function _u(e,t=te.READABLE){return vu(e,(t&te.FILE)>0,(t&te.FOLDER)>0)}te.exists=_u;te.FILE=1;te.FOLDER=2;te.READABLE=te.FILE+te.FOLDER});var go=pe(Ft=>{"use strict";function yu(e){for(var t in e)Ft.hasOwnProperty(t)||(Ft[t]=e[t])}Object.defineProperty(Ft,"__esModule",{value:!0});yu(po())});var Or=pe(Fe=>{"use strict";Object.defineProperty(Fe,"__esModule",{value:!0});Fe.createDeferred=Fe.deferred=void 0;function Pr(){let e,t,r="pending";return{promise:new Promise((o,n)=>{e=o,t=n}),done(o){r==="pending"&&(r="resolved",e(o))},fail(o){r==="pending"&&(r="rejected",t(o))},get fulfilled(){return r!=="pending"},get status(){return r}}}Fe.deferred=Pr;Fe.createDeferred=Pr;Fe.default=Pr});var oa=pe((_h,sa)=>{"use strict";sa.exports=ta;function ta(e,t,r){e instanceof RegExp&&(e=ea(e,r)),t instanceof RegExp&&(t=ea(t,r));var s=ra(e,t,r);return s&&{start:s[0],end:s[1],pre:r.slice(0,s[0]),body:r.slice(s[0]+e.length,s[1]),post:r.slice(s[1]+t.length)}}function ea(e,t){var r=t.match(e);return r?r[0]:null}ta.range=ra;function ra(e,t,r){var s,o,n,i,a,c=r.indexOf(e),l=r.indexOf(t,c+1),u=c;if(c>=0&&l>0){if(e===t)return[c,l];for(s=[],n=r.length;u>=0&&!a;)u==c?(s.push(u),c=r.indexOf(e,u+1)):s.length==1?a=[s.pop(),l]:(o=s.pop(),o<n&&(n=o,i=l),l=r.indexOf(t,u+1)),u=c<l&&c>=0?c:l;s.length&&(a=[n,i])}return a}});var da=pe((yh,pa)=>{var na=oa();pa.exports=Id;var ia="\0SLASH"+Math.random()+"\0",aa="\0OPEN"+Math.random()+"\0",bs="\0CLOSE"+Math.random()+"\0",ca="\0COMMA"+Math.random()+"\0",ua="\0PERIOD"+Math.random()+"\0";function ws(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function Ld(e){return e.split("\\\\").join(ia).split("\\{").join(aa).split("\\}").join(bs).split("\\,").join(ca).split("\\.").join(ua)}function Ud(e){return e.split(ia).join("\\").split(aa).join("{").split(bs).join("}").split(ca).join(",").split(ua).join(".")}function la(e){if(!e)return[""];var t=[],r=na("{","}",e);if(!r)return e.split(",");var s=r.pre,o=r.body,n=r.post,i=s.split(",");i[i.length-1]+="{"+o+"}";var a=la(n);return n.length&&(i[i.length-1]+=a.shift(),i.push.apply(i,a)),t.push.apply(t,i),t}function Id(e){return e?(e.substr(0,2)==="{}"&&(e="\\{\\}"+e.substr(2)),Et(Ld(e),!0).map(Ud)):[]}function jd(e){return"{"+e+"}"}function Md(e){return/^-?0\d/.test(e)}function $d(e,t){return e<=t}function Nd(e,t){return e>=t}function Et(e,t){var r=[],s=na("{","}",e);if(!s)return[e];var o=s.pre,n=s.post.length?Et(s.post,!1):[""];if(/\$$/.test(s.pre))for(var i=0;i<n.length;i++){var a=o+"{"+s.body+"}"+n[i];r.push(a)}else{var c=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(s.body),l=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(s.body),u=c||l,p=s.body.indexOf(",")>=0;if(!u&&!p)return s.post.match(/,.*\}/)?(e=s.pre+"{"+s.body+bs+s.post,Et(e)):[e];var d;if(u)d=s.body.split(/\.\./);else if(d=la(s.body),d.length===1&&(d=Et(d[0],!1).map(jd),d.length===1))return n.map(function(cr){return s.pre+d[0]+cr});var g;if(u){var k=ws(d[0]),T=ws(d[1]),w=Math.max(d[0].length,d[1].length),_=d.length==3?Math.abs(ws(d[2])):1,D=$d,W=T<k;W&&(_*=-1,D=Nd);var z=d.some(Md);g=[];for(var ae=k;D(ae,T);ae+=_){var M;if(l)M=String.fromCharCode(ae),M==="\\"&&(M="");else if(M=String(ae),z){var $e=w-M.length;if($e>0){var Pe=new Array($e+1).join("0");ae<0?M="-"+Pe+M.slice(1):M=Pe+M}}g.push(M)}}else{g=[];for(var ce=0;ce<d.length;ce++)g.push.apply(g,Et(d[ce],!1))}for(var ce=0;ce<g.length;ce++)for(var i=0;i<n.length;i++){var a=o+g[ce]+n[i];(!t||u||a)&&r.push(a)}}return r}});var Ig={};Cs(Ig,{activate:()=>Gg,deactivate:()=>Ug});module.exports=Os(Ig);var v=$(require("vscode"));function we(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function yt(e,t,r,s){if(typeof r!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(t)?t.reverse().reduce((o,n)=>yt.bind(null,e,n,o,s),r)():Promise.resolve().then(()=>e.registry[t]?e.registry[t].reduce((o,n)=>n.hook.bind(null,o,s),r)():r(s))}function Rs(e,t,r,s){let o=s;e.registry[r]||(e.registry[r]=[]),t==="before"&&(s=(n,i)=>Promise.resolve().then(o.bind(null,i)).then(n.bind(null,i))),t==="after"&&(s=(n,i)=>{let a;return Promise.resolve().then(n.bind(null,i)).then(c=>(a=c,o(a,i))).then(()=>a)}),t==="error"&&(s=(n,i)=>Promise.resolve().then(n.bind(null,i)).catch(a=>o(a,i))),e.registry[r].push({hook:s,orig:o})}function Fs(e,t,r){if(!e.registry[t])return;let s=e.registry[t].map(o=>o.orig).indexOf(r);s!==-1&&e.registry[t].splice(s,1)}var Ds=Function.bind,xs=Ds.bind(Ds);function Ls(e,t,r){let s=xs(Fs,null).apply(null,r?[t,r]:[t]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(o=>{let n=r?[t,o,r]:[t,o];e[o]=e.api[o]=xs(Rs,null).apply(null,n)})}function cc(){let e=Symbol("Singular"),t={registry:{}},r=yt.bind(null,t,e);return Ls(r,t,e),r}function uc(){let e={registry:{}},t=yt.bind(null,e);return Ls(t,e),t}var Us={Singular:cc,Collection:uc};var lc="0.0.0-development",pc=`octokit-endpoint.js/${lc} ${we()}`,dc={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":pc},mediaType:{format:""}};function gc(e){return e?Object.keys(e).reduce((t,r)=>(t[r.toLowerCase()]=e[r],t),{}):{}}function mc(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;let t=Object.getPrototypeOf(e);if(t===null)return!0;let r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}function Ms(e,t){let r=Object.assign({},e);return Object.keys(t).forEach(s=>{mc(t[s])?s in e?r[s]=Ms(e[s],t[s]):Object.assign(r,{[s]:t[s]}):Object.assign(r,{[s]:t[s]})}),r}function Is(e){for(let t in e)e[t]===void 0&&delete e[t];return e}function dr(e,t,r){var o;if(typeof t=="string"){let[n,i]=t.split(" ");r=Object.assign(i?{method:n,url:i}:{url:n},r)}else r=Object.assign({},t);r.headers=gc(r.headers),Is(r),Is(r.headers);let s=Ms(e||{},r);return r.url==="/graphql"&&(e&&((o=e.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=e.mediaType.previews.filter(n=>!s.mediaType.previews.includes(n)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(n=>n.replace(/-preview/,""))),s}function hc(e,t){let r=/\?/.test(e)?"&":"?",s=Object.keys(t);return s.length===0?e:e+r+s.map(o=>o==="q"?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(t[o])}`).join("&")}var fc=/\{[^}]+\}/g;function Tc(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Ec(e){let t=e.match(fc);return t?t.map(Tc).reduce((r,s)=>r.concat(s),[]):[]}function js(e,t){let r={__proto__:null};for(let s of Object.keys(e))t.indexOf(s)===-1&&(r[s]=e[s]);return r}function $s(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t){return/%[0-9A-Fa-f]/.test(t)||(t=encodeURI(t).replace(/%5B/g,"[").replace(/%5D/g,"]")),t}).join("")}function Be(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function rt(e,t,r){return t=e==="+"||e==="#"?$s(t):Be(t),r?Be(r)+"="+t:t}function Ne(e){return e!=null}function pr(e){return e===";"||e==="&"||e==="?"}function wc(e,t,r,s){var o=e[r],n=[];if(Ne(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),n.push(rt(t,o,pr(t)?r:""));else if(s==="*")Array.isArray(o)?o.filter(Ne).forEach(function(i){n.push(rt(t,i,pr(t)?r:""))}):Object.keys(o).forEach(function(i){Ne(o[i])&&n.push(rt(t,o[i],i))});else{let i=[];Array.isArray(o)?o.filter(Ne).forEach(function(a){i.push(rt(t,a))}):Object.keys(o).forEach(function(a){Ne(o[a])&&(i.push(Be(a)),i.push(rt(t,o[a].toString())))}),pr(t)?n.push(Be(r)+"="+i.join(",")):i.length!==0&&n.push(i.join(","))}else t===";"?Ne(o)&&n.push(Be(r)):o===""&&(t==="&"||t==="?")?n.push(Be(r)+"="):o===""&&n.push("");return n}function bc(e){return{expand:vc.bind(null,e)}}function vc(e,t){var r=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,n){if(o){let a="",c=[];if(r.indexOf(o.charAt(0))!==-1&&(a=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(l){var u=/([^:\*]*)(?::(\d+)|(\*))?/.exec(l);c.push(wc(t,a,u[1],u[2]||u[3]))}),a&&a!=="+"){var i=",";return a==="?"?i="&":a!=="#"&&(i=a),(c.length!==0?a:"")+c.join(i)}else return c.join(",")}else return $s(n)}),e==="/"?e:e.replace(/\/$/,"")}function Ns(e){var u;let t=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,n=js(e,["method","baseUrl","url","headers","request","mediaType"]),i=Ec(r);r=bc(r).expand(n),/^http/.test(r)||(r=e.baseUrl+r);let a=Object.keys(e).filter(p=>i.includes(p)).concat("baseUrl"),c=js(n,a);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(p=>p.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),r.endsWith("/graphql")&&(u=e.mediaType.previews)!=null&&u.length)){let p=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=p.concat(e.mediaType.previews).map(d=>{let g=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${d}-preview${g}`}).join(",")}return["GET","HEAD"].includes(t)?r=hc(r,c):"data"in c?o=c.data:Object.keys(c).length&&(o=c),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&typeof o>"u"&&(o=""),Object.assign({method:t,url:r,headers:s},typeof o<"u"?{body:o}:null,e.request?{request:e.request}:null)}function _c(e,t,r){return Ns(dr(e,t,r))}function Bs(e,t){let r=dr(e,t),s=_c.bind(null,r);return Object.assign(s,{DEFAULTS:r,defaults:Bs.bind(null,r),merge:dr.bind(null,r),parse:Ns})}var qs=Bs(null,dc);var Oe=class extends Error{name;status;request;response;constructor(t,r,s){super(t),this.name="HttpError",this.status=Number.parseInt(r),Number.isNaN(this.status)&&(this.status=0),"response"in s&&(this.response=s.response);let o=Object.assign({},s.request);s.request.headers.authorization&&(o.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o}};var yc="0.0.0-development",kc={headers:{"user-agent":`octokit-request.js/${yc} ${we()}`}};function Gc(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;let t=Object.getPrototypeOf(e);if(t===null)return!0;let r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}async function Ws(e){var p,d,g,k,T;let t=((p=e.request)==null?void 0:p.fetch)||globalThis.fetch;if(!t)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");let r=((d=e.request)==null?void 0:d.log)||console,s=((g=e.request)==null?void 0:g.parseSuccessResponseBody)!==!1,o=Gc(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,n=Object.fromEntries(Object.entries(e.headers).map(([w,_])=>[w,String(_)])),i;try{i=await t(e.url,{method:e.method,body:o,redirect:(k=e.request)==null?void 0:k.redirect,headers:n,signal:(T=e.request)==null?void 0:T.signal,...e.body&&{duplex:"half"}})}catch(w){let _="Unknown Error";if(w instanceof Error){if(w.name==="AbortError")throw w.status=500,w;_=w.message,w.name==="TypeError"&&"cause"in w&&(w.cause instanceof Error?_=w.cause.message:typeof w.cause=="string"&&(_=w.cause))}let D=new Oe(_,500,{request:e});throw D.cause=w,D}let a=i.status,c=i.url,l={};for(let[w,_]of i.headers)l[w]=_;let u={url:c,status:a,headers:l,data:""};if("deprecation"in l){let w=l.link&&l.link.match(/<([^>]+)>; rel="deprecation"/),_=w&&w.pop();r.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${l.sunset}${_?`. See ${_}`:""}`)}if(a===204||a===205)return u;if(e.method==="HEAD"){if(a<400)return u;throw new Oe(i.statusText,a,{response:u,request:e})}if(a===304)throw u.data=await gr(i),new Oe("Not modified",a,{response:u,request:e});if(a>=400)throw u.data=await gr(i),new Oe(Sc(u.data),a,{response:u,request:e});return u.data=s?await gr(i):i.body,u}async function gr(e){let t=e.headers.get("content-type");return/application\/json/.test(t)?e.json().catch(()=>e.text()).catch(()=>""):!t||/^text\/|charset=utf-8$/.test(t)?e.text():e.arrayBuffer()}function Sc(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){let t="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(r=>JSON.stringify(r)).join(", ")}${t}`:`${e.message}${t}`}return`Unknown error: ${JSON.stringify(e)}`}function mr(e,t){let r=e.defaults(t);return Object.assign(function(o,n){let i=r.merge(o,n);if(!i.request||!i.request.hook)return Ws(r.parse(i));let a=(c,l)=>Ws(r.parse(r.merge(c,l)));return Object.assign(a,{endpoint:r,defaults:mr.bind(null,r)}),i.request.hook(a,i)},{endpoint:r,defaults:mr.bind(null,r)})}var st=mr(qs,kc);var Cc="0.0.0-development";function Pc(e){return`Request failed due to following response errors:
`+e.errors.map(t=>` - ${t.message}`).join(`
`)}var Oc=class extends Error{constructor(e,t,r){super(Pc(r)),this.request=e,this.headers=t,this.response=r,this.errors=r.errors,this.data=r.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}name="GraphqlResponseError";errors;data},Ac=["method","baseUrl","url","headers","request","query","mediaType"],Rc=["query","method","url"],Hs=/\/api\/v3\/?$/;function Fc(e,t,r){if(r){if(typeof t=="string"&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(let i in r)if(Rc.includes(i))return Promise.reject(new Error(`[@octokit/graphql] "${i}" cannot be used as variable name`))}let s=typeof t=="string"?Object.assign({query:t},r):t,o=Object.keys(s).reduce((i,a)=>Ac.includes(a)?(i[a]=s[a],i):(i.variables||(i.variables={}),i.variables[a]=s[a],i),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Hs.test(n)&&(o.url=n.replace(Hs,"/api/graphql")),e(o).then(i=>{if(i.data.errors){let a={};for(let c of Object.keys(i.headers))a[c]=i.headers[c];throw new Oc(o,a,i.data)}return i.data.data})}function hr(e,t){let r=e.defaults(t);return Object.assign((o,n)=>Fc(r,o,n),{defaults:hr.bind(null,r),endpoint:r.endpoint})}var rm=hr(st,{headers:{"user-agent":`octokit-graphql.js/${Cc} ${we()}`},method:"POST",url:"/graphql"});function zs(e){return hr(e,{method:"POST",url:"/graphql"})}var Dc=/^v1\./,xc=/^ghs_/,Lc=/^ghu_/;async function Uc(e){let t=e.split(/\./).length===3,r=Dc.test(e)||xc.test(e),s=Lc.test(e);return{type:"token",token:e,tokenType:t?"app":r?"installation":s?"user-to-server":"oauth"}}function Ic(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function jc(e,t,r,s){let o=t.endpoint.merge(r,s);return o.headers.authorization=Ic(e),t(o)}var Vs=function(t){if(!t)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof t!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return t=t.replace(/^(token|bearer) +/i,""),Object.assign(Uc.bind(null,t),{hook:jc.bind(null,t)})};var fr="6.1.2";var Ks=()=>{},Mc=console.warn.bind(console),$c=console.error.bind(console),Ys=`octokit-core.js/${fr} ${we()}`,kt=class{static VERSION=fr;static defaults(t){return class extends this{constructor(...s){let o=s[0]||{};if(typeof t=="function"){super(t(o));return}super(Object.assign({},t,o,o.userAgent&&t.userAgent?{userAgent:`${o.userAgent} ${t.userAgent}`}:null))}}}static plugins=[];static plugin(...t){let r=this.plugins;return class extends this{static plugins=r.concat(t.filter(o=>!r.includes(o)))}}constructor(t={}){let r=new Us.Collection,s={baseUrl:st.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},t.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=t.userAgent?`${t.userAgent} ${Ys}`:Ys,t.baseUrl&&(s.baseUrl=t.baseUrl),t.previews&&(s.mediaType.previews=t.previews),t.timeZone&&(s.headers["time-zone"]=t.timeZone),this.request=st.defaults(s),this.graphql=zs(this.request).defaults(s),this.log=Object.assign({debug:Ks,info:Ks,warn:Mc,error:$c},t.log),this.hook=r,t.authStrategy){let{authStrategy:n,...i}=t,a=n(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:i},t.auth));r.wrap("request",a.hook),this.auth=a}else if(!t.auth)this.auth=async()=>({type:"unauthenticated"});else{let n=Vs(t.auth);r.wrap("request",n.hook),this.auth=n}let o=this.constructor;for(let n=0;n<o.plugins.length;++n)Object.assign(this,o.plugins[n](this,t))}request;graphql;log;hook;auth};var Js="5.3.1";function Tr(e){e.hook.wrap("request",(t,r)=>{e.log.debug("request",r);let s=Date.now(),o=e.request.endpoint.parse(r),n=o.url.replace(r.baseUrl,"");return t(r).then(i=>{let a=i.headers["x-github-request-id"];return e.log.info(`${o.method} ${n} - ${i.status} with id ${a} in ${Date.now()-s}ms`),i}).catch(i=>{var c;let a=((c=i.response)==null?void 0:c.headers["x-github-request-id"])||"UNKNOWN";throw e.log.error(`${o.method} ${n} - ${i.status} with id ${a} in ${Date.now()-s}ms`),i})})}Tr.VERSION=Js;var Nc="0.0.0-development";function Bc(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;let r=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;let n=Object.keys(e.data)[0],i=e.data[n];return e.data=i,typeof r<"u"&&(e.data.incomplete_results=r),typeof s<"u"&&(e.data.repository_selection=s),e.data.total_count=o,e}function Er(e,t,r){let s=typeof t=="function"?t.endpoint(r):e.request.endpoint(t,r),o=typeof t=="function"?t:e.request,n=s.method,i=s.headers,a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};try{let c=await o({method:n,url:a,headers:i}),l=Bc(c);return a=((l.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:l}}catch(c){if(c.status!==409)throw c;return a="",{value:{status:200,headers:{},data:[]}}}}})}}function Xs(e,t,r,s){return typeof r=="function"&&(s=r,r=void 0),Qs(e,[],Er(e,t,r)[Symbol.asyncIterator](),s)}function Qs(e,t,r,s){return r.next().then(o=>{if(o.done)return t;let n=!1;function i(){n=!0}return t=t.concat(s?s(o.value,i):o.value.data),n?t:Qs(e,t,r,s)})}var wm=Object.assign(Xs,{iterator:Er});function wr(e){return{paginate:Object.assign(Xs.bind(null,e),{iterator:Er.bind(null,e)})}}wr.VERSION=Nc;var br="13.2.6";var qc={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},Zs=qc;var Ae=new Map;for(let[e,t]of Object.entries(Zs))for(let[r,s]of Object.entries(t)){let[o,n,i]=s,[a,c]=o.split(/ /),l=Object.assign({method:a,url:c},n);Ae.has(e)||Ae.set(e,new Map),Ae.get(e).set(r,{scope:e,methodName:r,endpointDefaults:l,decorations:i})}var Wc={has({scope:e},t){return Ae.get(e).has(t)},getOwnPropertyDescriptor(e,t){return{value:this.get(e,t),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,t,r){return Object.defineProperty(e.cache,t,r),!0},deleteProperty(e,t){return delete e.cache[t],!0},ownKeys({scope:e}){return[...Ae.get(e).keys()]},set(e,t,r){return e.cache[t]=r},get({octokit:e,scope:t,cache:r},s){if(r[s])return r[s];let o=Ae.get(t).get(s);if(!o)return;let{endpointDefaults:n,decorations:i}=o;return i?r[s]=Hc(e,t,s,n,i):r[s]=e.request.defaults(n),r[s]}};function vr(e){let t={};for(let r of Ae.keys())t[r]=new Proxy({octokit:e,scope:r,cache:{}},Wc);return t}function Hc(e,t,r,s,o){let n=e.request.defaults(s);function i(...a){let c=n.endpoint.merge(...a);if(o.mapToData)return c=Object.assign({},c,{data:c[o.mapToData],[o.mapToData]:void 0}),n(c);if(o.renamed){let[l,u]=o.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${l}.${u}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){let l=n.endpoint.merge(...a);for(let[u,p]of Object.entries(o.renamedParameters))u in l&&(e.log.warn(`"${u}" parameter is deprecated for "octokit.${t}.${r}()". Use "${p}" instead`),p in l||(l[p]=l[u]),delete l[u]);return n(l)}return n(...a)}return Object.assign(i,n)}function zc(e){return{rest:vr(e)}}zc.VERSION=br;function _r(e){let t=vr(e);return{...t,rest:t}}_r.VERSION=br;var eo="21.0.2";var to=kt.plugin(Tr,_r,wr).defaults({userAgent:`octokit-rest.js/${eo}`});var ot=$(require("vscode")),Gt=class{constructor(t){this.token="";this.outputChannel=t}setToken(t){this.token=t,this.octokit=new to({auth:this.token})}async createRepo(t,r="DevTrack Repository"){try{return(await this.octokit.repos.createForAuthenticatedUser({name:t,description:r,private:!1})).data.clone_url}catch(s){return this.outputChannel.appendLine(`Error creating repository: ${s.message}`),ot.window.showErrorMessage(`DevTrack: Failed to create repository "${t}".`),null}}async repoExists(t){try{let r=await this.getUsername();return r?(await this.octokit.repos.get({owner:r,repo:t}),!0):(ot.window.showErrorMessage("DevTrack: Unable to retrieve GitHub username."),!1)}catch(r){return r.status===404||ot.window.showErrorMessage(`DevTrack: Error checking repository "${t}".`),!1}}async getUsername(){try{let{data:t}=await this.octokit.users.getAuthenticated();return t.login}catch(t){return this.outputChannel.appendLine(`Error fetching username: ${t.message}`),ot.window.showErrorMessage("DevTrack: Unable to fetch GitHub username."),null}}};var Ue=$(require("vscode"));var Ht=$(go(),1),Nt=$(Cr(),1),$n=require("child_process"),yi=$(Or(),1),Ve=$(Or(),1),Yi=require("events"),qt=Object.defineProperty,ku=Object.defineProperties,Gu=Object.getOwnPropertyDescriptor,Su=Object.getOwnPropertyDescriptors,Yr=Object.getOwnPropertyNames,mo=Object.getOwnPropertySymbols,Vo=Object.prototype.hasOwnProperty,Cu=Object.prototype.propertyIsEnumerable,ho=(e,t,r)=>t in e?qt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,oe=(e,t)=>{for(var r in t||(t={}))Vo.call(t,r)&&ho(e,r,t[r]);if(mo)for(var r of mo(t))Cu.call(t,r)&&ho(e,r,t[r]);return e},at=(e,t)=>ku(e,Su(t)),f=(e,t)=>function(){return e&&(t=(0,e[Yr(e)[0]])(e=0)),t},Pu=(e,t)=>function(){return t||(0,e[Yr(e)[0]])((t={exports:{}}).exports,t),t.exports},U=(e,t)=>{for(var r in t)qt(e,r,{get:t[r],enumerable:!0})},Ou=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Yr(t))!Vo.call(e,o)&&o!==r&&qt(e,o,{get:()=>t[o],enumerable:!(s=Gu(t,o))||s.enumerable});return e},R=e=>Ou(qt({},"__esModule",{value:!0}),e),it=(e,t,r)=>new Promise((s,o)=>{var n=c=>{try{a(r.next(c))}catch(l){o(l)}},i=c=>{try{a(r.throw(c))}catch(l){o(l)}},a=c=>c.done?s(c.value):Promise.resolve(c.value).then(n,i);a((r=r.apply(e,t)).next())});function Au(...e){let t=new String(e);return Wt.set(t,e),t}function Mt(e){return e instanceof String&&Wt.has(e)}function fo(e){return Wt.get(e)||[]}var Wt,pt=f({"src/lib/args/pathspec.ts"(){"use strict";Wt=new WeakMap}}),fe,ve=f({"src/lib/errors/git-error.ts"(){"use strict";fe=class extends Error{constructor(e,t){super(t),this.task=e,Object.setPrototypeOf(this,new.target.prototype)}}}}),dt,Ye=f({"src/lib/errors/git-response-error.ts"(){"use strict";ve(),dt=class extends fe{constructor(e,t){super(void 0,t||String(e)),this.git=e}}}}),Ko,Yo=f({"src/lib/errors/task-configuration-error.ts"(){"use strict";ve(),Ko=class extends fe{constructor(e){super(void 0,e)}}}});function Jo(e){return typeof e=="function"?e:Le}function Xo(e){return typeof e=="function"&&e!==Le}function Qo(e,t){let r=e.indexOf(t);return r<=0?[e,""]:[e.substr(0,r),e.substr(r+1)]}function Zo(e,t=0){return en(e)&&e.length>t?e[t]:void 0}function xe(e,t=0){if(en(e)&&e.length>t)return e[e.length-1-t]}function en(e){return!!(e&&typeof e.length=="number")}function gt(e="",t=!0,r=`
`){return e.split(r).reduce((s,o)=>{let n=t?o.trim():o;return n&&s.push(n),s},[])}function Jr(e,t){return gt(e,!0).map(r=>t(r))}function Xr(e){return(0,Ht.exists)(e,Ht.FOLDER)}function S(e,t){return Array.isArray(e)?e.includes(t)||e.push(t):e.add(t),t}function tn(e,t){return Array.isArray(e)&&!e.includes(t)&&e.push(t),e}function zt(e,t){if(Array.isArray(e)){let r=e.indexOf(t);r>=0&&e.splice(r,1)}else e.delete(t);return t}function de(e){return Array.isArray(e)?e:[e]}function rn(e){return e.replace(/[\s-]+(.)/g,(t,r)=>r.toUpperCase())}function sn(e){return de(e).map(String)}function P(e,t=0){if(e==null)return t;let r=parseInt(e,10);return isNaN(r)?t:r}function ct(e,t){let r=[];for(let s=0,o=e.length;s<o;s++)r.push(t,e[s]);return r}function ut(e){return(Array.isArray(e)?Buffer.concat(e):e).toString("utf-8")}function on(e,t){return Object.assign({},...t.map(r=>r in e?{[r]:e[r]}:{}))}function Ur(e=0){return new Promise(t=>setTimeout(t,e))}function Ir(e){if(e!==!1)return e}var Ke,Le,mt,Vt=f({"src/lib/utils/util.ts"(){"use strict";Ke="\0",Le=()=>{},mt=Object.prototype.toString.call.bind(Object.prototype.toString)}});function ge(e,t,r){return t(e)?e:arguments.length>2?r:void 0}function Qr(e,t){let r=Mt(e)?"string":typeof e;return/number|string|boolean/.test(r)&&(!t||!t.includes(r))}function Zr(e){return!!e&&mt(e)==="[object Object]"}function nn(e){return typeof e=="function"}var ht,H,an,$t,es,cn=f({"src/lib/utils/argument-filters.ts"(){"use strict";Vt(),pt(),ht=e=>Array.isArray(e),H=e=>typeof e=="string",an=e=>Array.isArray(e)&&e.every(H),$t=e=>H(e)||Array.isArray(e)&&e.every(H),es=e=>e==null||"number|boolean|function".includes(typeof e)?!1:Array.isArray(e)||typeof e=="string"||typeof e.length=="number"}}),jr,Ru=f({"src/lib/utils/exit-codes.ts"(){"use strict";jr=(e=>(e[e.SUCCESS=0]="SUCCESS",e[e.ERROR=1]="ERROR",e[e.NOT_FOUND=-2]="NOT_FOUND",e[e.UNCLEAN=128]="UNCLEAN",e))(jr||{})}}),lt,Fu=f({"src/lib/utils/git-output-streams.ts"(){"use strict";lt=class{constructor(e,t){this.stdOut=e,this.stdErr=t}asStrings(){return new lt(this.stdOut.toString("utf8"),this.stdErr.toString("utf8"))}}}}),G,be,Du=f({"src/lib/utils/line-parser.ts"(){"use strict";G=class{constructor(e,t){this.matches=[],this.parse=(r,s)=>(this.resetMatches(),this._regExp.every((o,n)=>this.addMatch(o,n,r(n)))?this.useMatches(s,this.prepareMatches())!==!1:!1),this._regExp=Array.isArray(e)?e:[e],t&&(this.useMatches=t)}useMatches(e,t){throw new Error("LineParser:useMatches not implemented")}resetMatches(){this.matches.length=0}prepareMatches(){return this.matches}addMatch(e,t,r){let s=r&&e.exec(r);return s&&this.pushMatch(t,s),!!s}pushMatch(e,t){this.matches.push(...t.slice(1))}},be=class extends G{addMatch(e,t,r){return/^remote:\s/.test(String(r))&&super.addMatch(e,t,r)}pushMatch(e,t){(e>0||t.length>1)&&super.pushMatch(e,t)}}}});function un(...e){let t=process.cwd(),r=Object.assign(oe({baseDir:t},ln),...e.filter(s=>typeof s=="object"&&s));return r.baseDir=r.baseDir||t,r.trimmed=r.trimmed===!0,r}var ln,xu=f({"src/lib/utils/simple-git-options.ts"(){"use strict";ln={binary:"git",maxConcurrentProcesses:5,config:[],trimmed:!1}}});function ts(e,t=[]){return Zr(e)?Object.keys(e).reduce((r,s)=>{let o=e[s];return Mt(o)?r.push(o):Qr(o,["boolean"])?r.push(s+"="+o):r.push(s),r},t):t}function X(e,t=0,r=!1){let s=[];for(let o=0,n=t<0?e.length:t;o<n;o++)"string|number".includes(typeof e[o])&&s.push(String(e[o]));return ts(rs(e),s),r||s.push(...Lu(e)),s}function Lu(e){let t=typeof xe(e)=="function";return ge(xe(e,t?1:0),ht,[])}function rs(e){let t=nn(xe(e));return ge(xe(e,t?1:0),Zr)}function F(e,t=!0){let r=Jo(xe(e));return t||Xo(r)?r:void 0}var Uu=f({"src/lib/utils/task-options.ts"(){"use strict";cn(),Vt(),pt()}});function Mr(e,t){return e(t.stdOut,t.stdErr)}function Z(e,t,r,s=!0){return de(r).forEach(o=>{for(let n=gt(o,s),i=0,a=n.length;i<a;i++){let c=(l=0)=>{if(!(i+l>=a))return n[i+l]};t.some(({parse:l})=>l(c,e))}}),e}var Iu=f({"src/lib/utils/task-parser.ts"(){"use strict";Vt()}}),pn={};U(pn,{ExitCodes:()=>jr,GitOutputStreams:()=>lt,LineParser:()=>G,NOOP:()=>Le,NULL:()=>Ke,RemoteLineParser:()=>be,append:()=>S,appendTaskOptions:()=>ts,asArray:()=>de,asCamelCase:()=>rn,asFunction:()=>Jo,asNumber:()=>P,asStringArray:()=>sn,bufferToString:()=>ut,callTaskParser:()=>Mr,createInstanceConfig:()=>un,delay:()=>Ur,filterArray:()=>ht,filterFunction:()=>nn,filterHasLength:()=>es,filterPlainObject:()=>Zr,filterPrimitives:()=>Qr,filterString:()=>H,filterStringArray:()=>an,filterStringOrStringArray:()=>$t,filterType:()=>ge,first:()=>Zo,folderExists:()=>Xr,forEachLineWithContent:()=>Jr,getTrailingOptions:()=>X,including:()=>tn,isUserFunction:()=>Xo,last:()=>xe,objectToString:()=>mt,orVoid:()=>Ir,parseStringResponse:()=>Z,pick:()=>on,prefixedArray:()=>ct,remove:()=>zt,splitOn:()=>Qo,toLinesWithContent:()=>gt,trailingFunctionArgument:()=>F,trailingOptionsArgument:()=>rs});var y=f({"src/lib/utils/index.ts"(){"use strict";cn(),Ru(),Fu(),Du(),xu(),Uu(),Iu(),Vt()}}),dn={};U(dn,{CheckRepoActions:()=>$r,checkIsBareRepoTask:()=>mn,checkIsRepoRootTask:()=>gn,checkIsRepoTask:()=>ju});function ju(e){switch(e){case"bare":return mn();case"root":return gn()}return{commands:["rev-parse","--is-inside-work-tree"],format:"utf-8",onError:Kt,parser:ss}}function gn(){return{commands:["rev-parse","--git-dir"],format:"utf-8",onError:Kt,parser(t){return/^\.(git)?$/.test(t.trim())}}}function mn(){return{commands:["rev-parse","--is-bare-repository"],format:"utf-8",onError:Kt,parser:ss}}function Mu(e){return/(Not a git repository|Kein Git-Repository)/i.test(String(e))}var $r,Kt,ss,hn=f({"src/lib/tasks/check-is-repo.ts"(){"use strict";y(),$r=(e=>(e.BARE="bare",e.IN_TREE="tree",e.IS_REPO_ROOT="root",e))($r||{}),Kt=({exitCode:e},t,r,s)=>{if(e===128&&Mu(t))return r(Buffer.from("false"));s(t)},ss=e=>e.trim()==="true"}});function $u(e,t){let r=new fn(e),s=e?En:Tn;return gt(t).forEach(o=>{let n=o.replace(s,"");r.paths.push(n),(wn.test(n)?r.folders:r.files).push(n)}),r}var fn,Tn,En,wn,Nu=f({"src/lib/responses/CleanSummary.ts"(){"use strict";y(),fn=class{constructor(e){this.dryRun=e,this.paths=[],this.files=[],this.folders=[]}},Tn=/^[a-z]+\s*/i,En=/^[a-z]+\s+[a-z]+\s*/i,wn=/\/$/}}),Nr={};U(Nr,{EMPTY_COMMANDS:()=>Yt,adhocExecTask:()=>bn,configurationErrorTask:()=>Q,isBufferTask:()=>_n,isEmptyTask:()=>yn,straightThroughBufferTask:()=>vn,straightThroughStringTask:()=>K});function bn(e){return{commands:Yt,format:"empty",parser:e}}function Q(e){return{commands:Yt,format:"empty",parser(){throw typeof e=="string"?new Ko(e):e}}}function K(e,t=!1){return{commands:e,format:"utf-8",parser(r){return t?String(r).trim():r}}}function vn(e){return{commands:e,format:"buffer",parser(t){return t}}}function _n(e){return e.format==="buffer"}function yn(e){return e.format==="empty"||!e.commands.length}var Yt,L=f({"src/lib/tasks/task.ts"(){"use strict";Yo(),Yt=[]}}),kn={};U(kn,{CONFIG_ERROR_INTERACTIVE_MODE:()=>os,CONFIG_ERROR_MODE_REQUIRED:()=>ns,CONFIG_ERROR_UNKNOWN_OPTION:()=>is,CleanOptions:()=>Lt,cleanTask:()=>Gn,cleanWithOptionsTask:()=>Bu,isCleanOptionsArray:()=>qu});function Bu(e,t){let{cleanMode:r,options:s,valid:o}=Wu(e);return r?o.options?(s.push(...t),s.some(Vu)?Q(os):Gn(r,s)):Q(is+JSON.stringify(e)):Q(ns)}function Gn(e,t){return{commands:["clean",`-${e}`,...t],format:"utf-8",parser(s){return $u(e==="n",s)}}}function qu(e){return Array.isArray(e)&&e.every(t=>as.has(t))}function Wu(e){let t,r=[],s={cleanMode:!1,options:!0};return e.replace(/[^a-z]i/g,"").split("").forEach(o=>{Hu(o)?(t=o,s.cleanMode=!0):s.options=s.options&&zu(r[r.length]=`-${o}`)}),{cleanMode:t,options:r,valid:s}}function Hu(e){return e==="f"||e==="n"}function zu(e){return/^-[a-z]$/i.test(e)&&as.has(e.charAt(1))}function Vu(e){return/^-[^\-]/.test(e)?e.indexOf("i")>0:e==="--interactive"}var os,ns,is,Lt,as,Sn=f({"src/lib/tasks/clean.ts"(){"use strict";Nu(),y(),L(),os="Git clean interactive mode is not supported",ns='Git clean mode parameter ("n" or "f") is required',is="Git clean unknown option found in: ",Lt=(e=>(e.DRY_RUN="n",e.FORCE="f",e.IGNORED_INCLUDED="x",e.IGNORED_ONLY="X",e.EXCLUDING="e",e.QUIET="q",e.RECURSIVE="d",e))(Lt||{}),as=new Set(["i",...sn(Object.values(Lt))])}});function Ku(e){let t=new Pn;for(let r of Cn(e))t.addValue(r.file,String(r.key),r.value);return t}function Yu(e,t){let r=null,s=[],o=new Map;for(let n of Cn(e,t))n.key===t&&(s.push(r=n.value),o.has(n.file)||o.set(n.file,[]),o.get(n.file).push(r));return{key:t,paths:Array.from(o.keys()),scopes:o,value:r,values:s}}function Ju(e){return e.replace(/^(file):/,"")}function*Cn(e,t=null){let r=e.split("\0");for(let s=0,o=r.length-1;s<o;){let n=Ju(r[s++]),i=r[s++],a=t;if(i.includes(`
`)){let c=Qo(i,`
`);a=c[0],i=c[1]}yield{file:n,key:a,value:i}}}var Pn,Xu=f({"src/lib/responses/ConfigList.ts"(){"use strict";y(),Pn=class{constructor(){this.files=[],this.values=Object.create(null)}get all(){return this._all||(this._all=this.files.reduce((e,t)=>Object.assign(e,this.values[t]),{})),this._all}addFile(e){if(!(e in this.values)){let t=xe(this.files);this.values[e]=t?Object.create(this.values[t]):{},this.files.push(e)}return this.values[e]}addValue(e,t,r){let s=this.addFile(e);s.hasOwnProperty(t)?Array.isArray(s[t])?s[t].push(r):s[t]=[s[t],r]:s[t]=r,this._all=void 0}}}});function Ar(e,t){return typeof e=="string"&&Br.hasOwnProperty(e)?e:t}function Qu(e,t,r,s){let o=["config",`--${s}`];return r&&o.push("--add"),o.push(e,t),{commands:o,format:"utf-8",parser(n){return n}}}function Zu(e,t){let r=["config","--null","--show-origin","--get-all",e];return t&&r.splice(1,0,`--${t}`),{commands:r,format:"utf-8",parser(s){return Yu(s,e)}}}function el(e){let t=["config","--list","--show-origin","--null"];return e&&t.push(`--${e}`),{commands:t,format:"utf-8",parser(r){return Ku(r)}}}function tl(){return{addConfig(e,t,...r){return this._runTask(Qu(e,t,r[0]===!0,Ar(r[1],"local")),F(arguments))},getConfig(e,t){return this._runTask(Zu(e,Ar(t,void 0)),F(arguments))},listConfig(...e){return this._runTask(el(Ar(e[0],void 0)),F(arguments))}}}var Br,On=f({"src/lib/tasks/config.ts"(){"use strict";Xu(),y(),Br=(e=>(e.system="system",e.global="global",e.local="local",e.worktree="worktree",e))(Br||{})}});function rl(e){return An.has(e)}var Rr,An,Rn=f({"src/lib/tasks/diff-name-status.ts"(){"use strict";Rr=(e=>(e.ADDED="A",e.COPIED="C",e.DELETED="D",e.MODIFIED="M",e.RENAMED="R",e.CHANGED="T",e.UNMERGED="U",e.UNKNOWN="X",e.BROKEN="B",e))(Rr||{}),An=new Set(Object.values(Rr))}});function sl(...e){return new Dn().param(...e)}function ol(e){let t=new Set,r={};return Jr(e,s=>{let[o,n,i]=s.split(Ke);t.add(o),(r[o]=r[o]||[]).push({line:P(n),path:o,preview:i})}),{paths:t,results:r}}function nl(){return{grep(e){let t=F(arguments),r=X(arguments);for(let o of Fn)if(r.includes(o))return this._runTask(Q(`git.grep: use of "${o}" is not supported.`),t);typeof e=="string"&&(e=sl().param(e));let s=["grep","--null","-n","--full-name",...r,...e];return this._runTask({commands:s,format:"utf-8",parser(o){return ol(o)}},t)}}}var Fn,nt,To,Dn,xn=f({"src/lib/tasks/grep.ts"(){"use strict";y(),L(),Fn=["-h"],nt=Symbol("grepQuery"),Dn=class{constructor(){this[To]=[]}*[(To=nt,Symbol.iterator)](){for(let e of this[nt])yield e}and(...e){return e.length&&this[nt].push("--and","(",...ct(e,"-e"),")"),this}param(...e){return this[nt].push(...ct(e,"-e")),this}}}}),Ln={};U(Ln,{ResetMode:()=>Ut,getResetMode:()=>al,resetTask:()=>il});function il(e,t){let r=["reset"];return Un(e)&&r.push(`--${e}`),r.push(...t),K(r)}function al(e){if(Un(e))return e;switch(typeof e){case"string":case"undefined":return"soft"}}function Un(e){return In.includes(e)}var Ut,In,jn=f({"src/lib/tasks/reset.ts"(){"use strict";L(),Ut=(e=>(e.MIXED="mixed",e.SOFT="soft",e.HARD="hard",e.MERGE="merge",e.KEEP="keep",e))(Ut||{}),In=Array.from(Object.values(Ut))}});function cl(){return(0,Nt.default)("simple-git")}function Eo(e,t,r){return!t||!String(t).replace(/\s*/,"")?r?(s,...o)=>{e(s,...o),r(s,...o)}:e:(s,...o)=>{e(`%s ${s}`,t,...o),r&&r(s,...o)}}function ul(e,t,{namespace:r}){if(typeof e=="string")return e;let s=t&&t.namespace||"";return s.startsWith(r)?s.substr(r.length+1):s||r}function cs(e,t,r,s=cl()){let o=e&&`[${e}]`||"",n=[],i=typeof t=="string"?s.extend(t):t,a=ul(ge(t,H),i,s);return l(r);function c(u,p){return S(n,cs(e,a.replace(/^[^:]+/,u),p,s))}function l(u){let p=u&&`[${u}]`||"",d=i&&Eo(i,p)||Le,g=Eo(s,`${o} ${p}`,d);return Object.assign(i?d:g,{label:e,sibling:c,info:g,step:l})}}var Mn=f({"src/lib/git-logger.ts"(){"use strict";y(),Nt.default.formatters.L=e=>String(es(e)?e.length:"-"),Nt.default.formatters.B=e=>Buffer.isBuffer(e)?e.toString("utf8"):mt(e)}}),Dt,qr,ll=f({"src/lib/runners/tasks-pending-queue.ts"(){"use strict";ve(),Mn(),Dt=class{constructor(e="GitExecutor"){this.logLabel=e,this._queue=new Map}withProgress(e){return this._queue.get(e)}createProgress(e){let t=Dt.getName(e.commands[0]),r=cs(this.logLabel,t);return{task:e,logger:r,name:t}}push(e){let t=this.createProgress(e);return t.logger("Adding task to the queue, commands = %o",e.commands),this._queue.set(e,t),t}fatal(e){for(let[t,{logger:r}]of Array.from(this._queue.entries()))t===e.task?(r.info("Failed %o",e),r("Fatal exception, any as-yet un-started tasks run through this executor will not be attempted")):r.info("A fatal exception occurred in a previous task, the queue has been purged: %o",e.message),this.complete(t);if(this._queue.size!==0)throw new Error(`Queue size should be zero after fatal: ${this._queue.size}`)}complete(e){this.withProgress(e)&&this._queue.delete(e)}attempt(e){let t=this.withProgress(e);if(!t)throw new fe(void 0,"TasksPendingQueue: attempt called for an unknown task");return t.logger("Starting task"),t}static getName(e="empty"){return`task:${e}:${++Dt.counter}`}},qr=Dt,qr.counter=0}});function De(e,t){return{method:Zo(e.commands)||"",commands:t}}function pl(e,t){return r=>{t("[ERROR] child process exception %o",r),e.push(Buffer.from(String(r.stack),"ascii"))}}function wo(e,t,r,s){return o=>{r("%s received %L bytes",t,o),s("%B",o),e.push(o)}}var Wr,dl=f({"src/lib/runners/git-executor-chain.ts"(){"use strict";ve(),L(),y(),ll(),Wr=class{constructor(e,t,r){this._executor=e,this._scheduler=t,this._plugins=r,this._chain=Promise.resolve(),this._queue=new qr}get cwd(){return this._cwd||this._executor.cwd}set cwd(e){this._cwd=e}get env(){return this._executor.env}get outputHandler(){return this._executor.outputHandler}chain(){return this}push(e){return this._queue.push(e),this._chain=this._chain.then(()=>this.attemptTask(e))}attemptTask(e){return it(this,null,function*(){let t=yield this._scheduler.next(),r=()=>this._queue.complete(e);try{let{logger:s}=this._queue.attempt(e);return yield yn(e)?this.attemptEmptyTask(e,s):this.attemptRemoteTask(e,s)}catch(s){throw this.onFatalException(e,s)}finally{r(),t()}})}onFatalException(e,t){let r=t instanceof fe?Object.assign(t,{task:e}):new fe(e,t&&String(t));return this._chain=Promise.resolve(),this._queue.fatal(r),r}attemptRemoteTask(e,t){return it(this,null,function*(){let r=this._plugins.exec("spawn.binary","",De(e,e.commands)),s=this._plugins.exec("spawn.args",[...e.commands],De(e,e.commands)),o=yield this.gitResponse(e,r,s,this.outputHandler,t.step("SPAWN")),n=yield this.handleTaskData(e,s,o,t.step("HANDLE"));return t("passing response to task's parser as a %s",e.format),_n(e)?Mr(e.parser,n):Mr(e.parser,n.asStrings())})}attemptEmptyTask(e,t){return it(this,null,function*(){return t("empty task bypassing child process to call to task's parser"),e.parser(this)})}handleTaskData(e,t,r,s){let{exitCode:o,rejection:n,stdOut:i,stdErr:a}=r;return new Promise((c,l)=>{s("Preparing to handle process response exitCode=%d stdOut=",o);let{error:u}=this._plugins.exec("task.error",{error:n},oe(oe({},De(e,t)),r));if(u&&e.onError)return s.info("exitCode=%s handling with custom error handler"),e.onError(r,u,p=>{s.info("custom error handler treated as success"),s("custom error returned a %s",mt(p)),c(new lt(Array.isArray(p)?Buffer.concat(p):p,Buffer.concat(a)))},l);if(u)return s.info("handling as error: exitCode=%s stdErr=%s rejection=%o",o,a.length,n),l(u);s.info("retrieving task output complete"),c(new lt(Buffer.concat(i),Buffer.concat(a)))})}gitResponse(e,t,r,s,o){return it(this,null,function*(){let n=o.sibling("output"),i=this._plugins.exec("spawn.options",{cwd:this.cwd,env:this.env,windowsHide:!0},De(e,e.commands));return new Promise(a=>{let c=[],l=[];o.info("%s %o",t,r),o("%O",i);let u=this._beforeSpawn(e,r);if(u)return a({stdOut:c,stdErr:l,exitCode:9901,rejection:u});this._plugins.exec("spawn.before",void 0,at(oe({},De(e,r)),{kill(d){u=d||u}}));let p=(0,$n.spawn)(t,r,i);p.stdout.on("data",wo(c,"stdOut",o,n.step("stdOut"))),p.stderr.on("data",wo(l,"stdErr",o,n.step("stdErr"))),p.on("error",pl(l,o)),s&&(o("Passing child process stdOut/stdErr to custom outputHandler"),s(t,p.stdout,p.stderr,[...r])),this._plugins.exec("spawn.after",void 0,at(oe({},De(e,r)),{spawned:p,close(d,g){a({stdOut:c,stdErr:l,exitCode:d,rejection:u||g})},kill(d){p.killed||(u=d,p.kill("SIGINT"))}}))})})}_beforeSpawn(e,t){let r;return this._plugins.exec("spawn.before",void 0,at(oe({},De(e,t)),{kill(s){r=s||r}})),r}}}}),Nn={};U(Nn,{GitExecutor:()=>Bn});var Bn,gl=f({"src/lib/runners/git-executor.ts"(){"use strict";dl(),Bn=class{constructor(e,t,r){this.cwd=e,this._scheduler=t,this._plugins=r,this._chain=new Wr(this,this._scheduler,this._plugins)}chain(){return new Wr(this,this._scheduler,this._plugins)}push(e){return this._chain.push(e)}}}});function ml(e,t,r=Le){let s=n=>{r(null,n)},o=n=>{(n==null?void 0:n.task)===e&&r(n instanceof dt?hl(n):n,void 0)};t.then(s,o)}function hl(e){let t=s=>{console.warn(`simple-git deprecation notice: accessing GitResponseError.${s} should be GitResponseError.git.${s}, this will no longer be available in version 3`),t=Le};return Object.create(e,Object.getOwnPropertyNames(e.git).reduce(r,{}));function r(s,o){return o in e||(s[o]={enumerable:!1,configurable:!1,get(){return t(o),e.git[o]}}),s}}var fl=f({"src/lib/task-callback.ts"(){"use strict";Ye(),y()}});function bo(e,t){return bn(r=>{if(!Xr(e))throw new Error(`Git.cwd: cannot change to non-directory "${e}"`);return(t||r).cwd=e})}var Tl=f({"src/lib/tasks/change-working-directory.ts"(){"use strict";y(),L()}});function Fr(e){let t=["checkout",...e];return t[1]==="-b"&&t.includes("-B")&&(t[1]=zt(t,"-B")),K(t)}function El(){return{checkout(){return this._runTask(Fr(X(arguments,1)),F(arguments))},checkoutBranch(e,t){return this._runTask(Fr(["-b",e,t,...X(arguments)]),F(arguments))},checkoutLocalBranch(e){return this._runTask(Fr(["-b",e,...X(arguments)]),F(arguments))}}}var wl=f({"src/lib/tasks/checkout.ts"(){"use strict";y(),L()}});function bl(){return{count:0,garbage:0,inPack:0,packs:0,prunePackable:0,size:0,sizeGarbage:0,sizePack:0}}function vl(){return{countObjects(){return this._runTask({commands:["count-objects","--verbose"],format:"utf-8",parser(e){return Z(bl(),[qn],e)}})}}}var qn,_l=f({"src/lib/tasks/count-objects.ts"(){"use strict";y(),qn=new G(/([a-z-]+): (\d+)$/,(e,[t,r])=>{let s=rn(t);e.hasOwnProperty(s)&&(e[s]=P(r))})}});function yl(e){return Z({author:null,branch:"",commit:"",root:!1,summary:{changes:0,insertions:0,deletions:0}},Wn,e)}var Wn,kl=f({"src/lib/parsers/parse-commit.ts"(){"use strict";y(),Wn=[new G(/^\[([^\s]+)( \([^)]+\))? ([^\]]+)/,(e,[t,r,s])=>{e.branch=t,e.commit=s,e.root=!!r}),new G(/\s*Author:\s(.+)/i,(e,[t])=>{let r=t.split("<"),s=r.pop();!s||!s.includes("@")||(e.author={email:s.substr(0,s.length-1),name:r.join("<").trim()})}),new G(/(\d+)[^,]*(?:,\s*(\d+)[^,]*)(?:,\s*(\d+))/g,(e,[t,r,s])=>{e.summary.changes=parseInt(t,10)||0,e.summary.insertions=parseInt(r,10)||0,e.summary.deletions=parseInt(s,10)||0}),new G(/^(\d+)[^,]*(?:,\s*(\d+)[^(]+\(([+-]))?/,(e,[t,r,s])=>{e.summary.changes=parseInt(t,10)||0;let o=parseInt(r,10)||0;s==="-"?e.summary.deletions=o:s==="+"&&(e.summary.insertions=o)})]}});function Gl(e,t,r){return{commands:["-c","core.abbrev=40","commit",...ct(e,"-m"),...t,...r],format:"utf-8",parser:yl}}function Sl(){return{commit(t,...r){let s=F(arguments),o=e(t)||Gl(de(t),de(ge(r[0],$t,[])),[...ge(r[1],ht,[]),...X(arguments,0,!0)]);return this._runTask(o,s)}};function e(t){return!$t(t)&&Q("git.commit: requires the commit message to be supplied as a string/string[]")}}var Cl=f({"src/lib/tasks/commit.ts"(){"use strict";kl(),y(),L()}});function Pl(){return{firstCommit(){return this._runTask(K(["rev-list","--max-parents=0","HEAD"],!0),F(arguments))}}}var Ol=f({"src/lib/tasks/first-commit.ts"(){"use strict";y(),L()}});function Al(e,t){let r=["hash-object",e];return t&&r.push("-w"),K(r,!0)}var Rl=f({"src/lib/tasks/hash-object.ts"(){"use strict";L()}});function Fl(e,t,r){let s=String(r).trim(),o;if(o=Hn.exec(s))return new It(e,t,!1,o[1]);if(o=zn.exec(s))return new It(e,t,!0,o[1]);let n="",i=s.split(" ");for(;i.length;)if(i.shift()==="in"){n=i.join(" ");break}return new It(e,t,/^re/i.test(s),n)}var It,Hn,zn,Dl=f({"src/lib/responses/InitSummary.ts"(){"use strict";It=class{constructor(e,t,r,s){this.bare=e,this.path=t,this.existing=r,this.gitDir=s}},Hn=/^Init.+ repository in (.+)$/,zn=/^Rein.+ in (.+)$/}});function xl(e){return e.includes(us)}function Ll(e=!1,t,r){let s=["init",...r];return e&&!xl(s)&&s.splice(1,0,us),{commands:s,format:"utf-8",parser(o){return Fl(s.includes("--bare"),t,o)}}}var us,Ul=f({"src/lib/tasks/init.ts"(){"use strict";Dl(),us="--bare"}});function ls(e){for(let t=0;t<e.length;t++){let r=ps.exec(e[t]);if(r)return`--${r[1]}`}return""}function Il(e){return ps.test(e)}var ps,ft=f({"src/lib/args/log-format.ts"(){"use strict";ps=/^--(stat|numstat|name-only|name-status)(=|$)/}}),Vn,jl=f({"src/lib/responses/DiffSummary.ts"(){"use strict";Vn=class{constructor(){this.changed=0,this.deletions=0,this.insertions=0,this.files=[]}}}});function Kn(e=""){let t=Yn[e];return r=>Z(new Vn,t,r,!1)}var Dr,vo,_o,yo,Yn,Jn=f({"src/lib/parsers/parse-diff-summary.ts"(){"use strict";ft(),jl(),Rn(),y(),Dr=[new G(/^(.+)\s+\|\s+(\d+)(\s+[+\-]+)?$/,(e,[t,r,s=""])=>{e.files.push({file:t.trim(),changes:P(r),insertions:s.replace(/[^+]/g,"").length,deletions:s.replace(/[^-]/g,"").length,binary:!1})}),new G(/^(.+) \|\s+Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)/,(e,[t,r,s])=>{e.files.push({file:t.trim(),before:P(r),after:P(s),binary:!0})}),new G(/(\d+) files? changed\s*((?:, \d+ [^,]+){0,2})/,(e,[t,r])=>{let s=/(\d+) i/.exec(r),o=/(\d+) d/.exec(r);e.changed=P(t),e.insertions=P(s==null?void 0:s[1]),e.deletions=P(o==null?void 0:o[1])})],vo=[new G(/(\d+)\t(\d+)\t(.+)$/,(e,[t,r,s])=>{let o=P(t),n=P(r);e.changed++,e.insertions+=o,e.deletions+=n,e.files.push({file:s,changes:o+n,insertions:o,deletions:n,binary:!1})}),new G(/-\t-\t(.+)$/,(e,[t])=>{e.changed++,e.files.push({file:t,after:0,before:0,binary:!0})})],_o=[new G(/(.+)$/,(e,[t])=>{e.changed++,e.files.push({file:t,changes:0,insertions:0,deletions:0,binary:!1})})],yo=[new G(/([ACDMRTUXB])([0-9]{0,3})\t(.[^\t]*)(\t(.[^\t]*))?$/,(e,[t,r,s,o,n])=>{e.changed++,e.files.push({file:n??s,changes:0,insertions:0,deletions:0,binary:!1,status:Ir(rl(t)&&t),from:Ir(!!n&&s!==n&&s),similarity:P(r)})})],Yn={"":Dr,"--stat":Dr,"--numstat":vo,"--name-status":yo,"--name-only":_o}}});function Ml(e,t){return t.reduce((r,s,o)=>(r[s]=e[o]||"",r),Object.create({diff:null}))}function Xn(e=ms,t=Qn,r=""){let s=Kn(r);return function(o){let n=gt(o.trim(),!1,ds).map(function(i){let a=i.split(gs),c=Ml(a[0].split(e),t);return a.length>1&&a[1].trim()&&(c.diff=s(a[1])),c});return{all:n,latest:n.length&&n[0]||null,total:n.length}}}var ds,gs,ms,Qn,Zn=f({"src/lib/parsers/parse-list-log-summary.ts"(){"use strict";y(),Jn(),ft(),ds="\xF2\xF2\xF2\xF2\xF2\xF2 ",gs=" \xF2\xF2",ms=" \xF2 ",Qn=["hash","date","message","refs","author_name","author_email"]}}),ei={};U(ei,{diffSummaryTask:()=>$l,validateLogFormatConfig:()=>Jt});function $l(e){let t=ls(e),r=["diff"];return t===""&&(t="--stat",r.push("--stat=4096")),r.push(...e),Jt(r)||{commands:r,format:"utf-8",parser:Kn(t)}}function Jt(e){let t=e.filter(Il);if(t.length>1)return Q(`Summary flags are mutually exclusive - pick one of ${t.join(",")}`);if(t.length&&e.includes("-z"))return Q(`Summary flag ${t} parsing is not compatible with null termination option '-z'`)}var hs=f({"src/lib/tasks/diff.ts"(){"use strict";ft(),Jn(),L()}});function Nl(e,t){let r=[],s=[];return Object.keys(e).forEach(o=>{r.push(o),s.push(String(e[o]))}),[r,s.join(t)]}function Bl(e){return Object.keys(e).reduce((t,r)=>(r in Hr||(t[r]=e[r]),t),{})}function ti(e={},t=[]){let r=ge(e.splitter,H,ms),s=!Qr(e.format)&&e.format?e.format:{hash:"%H",date:e.strictDate===!1?"%ai":"%aI",message:"%s",refs:"%D",body:e.multiLine?"%B":"%b",author_name:e.mailMap!==!1?"%aN":"%an",author_email:e.mailMap!==!1?"%aE":"%ae"},[o,n]=Nl(s,r),i=[],a=[`--pretty=format:${ds}${n}${gs}`,...t],c=e.n||e["max-count"]||e.maxCount;if(c&&a.push(`--max-count=${c}`),e.from||e.to){let l=e.symmetric!==!1?"...":"..";i.push(`${e.from||""}${l}${e.to||""}`)}return H(e.file)&&a.push("--follow",Au(e.file)),ts(Bl(e),a),{fields:o,splitter:r,commands:[...a,...i]}}function ql(e,t,r){let s=Xn(e,t,ls(r));return{commands:["log",...r],format:"utf-8",parser:s}}function Wl(){return{log(...r){let s=F(arguments),o=ti(rs(arguments),ge(arguments[0],ht)),n=t(...r)||Jt(o.commands)||e(o);return this._runTask(n,s)}};function e(r){return ql(r.splitter,r.fields,r.commands)}function t(r,s){return H(r)&&H(s)&&Q("git.log(string, string) should be replaced with git.log({ from: string, to: string })")}}var Hr,ri=f({"src/lib/tasks/log.ts"(){"use strict";ft(),pt(),Zn(),y(),L(),hs(),Hr=(e=>(e[e["--pretty"]=0]="--pretty",e[e["max-count"]=1]="max-count",e[e.maxCount=2]="maxCount",e[e.n=3]="n",e[e.file=4]="file",e[e.format=5]="format",e[e.from=6]="from",e[e.to=7]="to",e[e.splitter=8]="splitter",e[e.symmetric=9]="symmetric",e[e.mailMap=10]="mailMap",e[e.multiLine=11]="multiLine",e[e.strictDate=12]="strictDate",e))(Hr||{})}}),jt,si,Hl=f({"src/lib/responses/MergeSummary.ts"(){"use strict";jt=class{constructor(e,t=null,r){this.reason=e,this.file=t,this.meta=r}toString(){return`${this.file}:${this.reason}`}},si=class{constructor(){this.conflicts=[],this.merges=[],this.result="success"}get failed(){return this.conflicts.length>0}get reason(){return this.result}toString(){return this.conflicts.length?`CONFLICTS: ${this.conflicts.join(", ")}`:"OK"}}}}),zr,oi,zl=f({"src/lib/responses/PullSummary.ts"(){"use strict";zr=class{constructor(){this.remoteMessages={all:[]},this.created=[],this.deleted=[],this.files=[],this.deletions={},this.insertions={},this.summary={changes:0,deletions:0,insertions:0}}},oi=class{constructor(){this.remote="",this.hash={local:"",remote:""},this.branch={local:"",remote:""},this.message=""}toString(){return this.message}}}});function xr(e){return e.objects=e.objects||{compressing:0,counting:0,enumerating:0,packReused:0,reused:{count:0,delta:0},total:{count:0,delta:0}}}function ko(e){let t=/^\s*(\d+)/.exec(e),r=/delta (\d+)/i.exec(e);return{count:P(t&&t[1]||"0"),delta:P(r&&r[1]||"0")}}var ni,Vl=f({"src/lib/parsers/parse-remote-objects.ts"(){"use strict";y(),ni=[new be(/^remote:\s*(enumerating|counting|compressing) objects: (\d+),/i,(e,[t,r])=>{let s=t.toLowerCase(),o=xr(e.remoteMessages);Object.assign(o,{[s]:P(r)})}),new be(/^remote:\s*(enumerating|counting|compressing) objects: \d+% \(\d+\/(\d+)\),/i,(e,[t,r])=>{let s=t.toLowerCase(),o=xr(e.remoteMessages);Object.assign(o,{[s]:P(r)})}),new be(/total ([^,]+), reused ([^,]+), pack-reused (\d+)/i,(e,[t,r,s])=>{let o=xr(e.remoteMessages);o.total=ko(t),o.reused=ko(r),o.packReused=P(s)})]}});function ii(e,t){return Z({remoteMessages:new ci},ai,t)}var ai,ci,ui=f({"src/lib/parsers/parse-remote-messages.ts"(){"use strict";y(),Vl(),ai=[new be(/^remote:\s*(.+)$/,(e,[t])=>(e.remoteMessages.all.push(t.trim()),!1)),...ni,new be([/create a (?:pull|merge) request/i,/\s(https?:\/\/\S+)$/],(e,[t])=>{e.remoteMessages.pullRequestUrl=t}),new be([/found (\d+) vulnerabilities.+\(([^)]+)\)/i,/\s(https?:\/\/\S+)$/],(e,[t,r,s])=>{e.remoteMessages.vulnerabilities={count:P(t),summary:r,url:s}})],ci=class{constructor(){this.all=[]}}}});function Kl(e,t){let r=Z(new oi,li,[e,t]);return r.message&&r}var Go,So,Co,Po,li,Oo,fs,pi=f({"src/lib/parsers/parse-pull.ts"(){"use strict";zl(),y(),ui(),Go=/^\s*(.+?)\s+\|\s+\d+\s*(\+*)(-*)/,So=/(\d+)\D+((\d+)\D+\(\+\))?(\D+(\d+)\D+\(-\))?/,Co=/^(create|delete) mode \d+ (.+)/,Po=[new G(Go,(e,[t,r,s])=>{e.files.push(t),r&&(e.insertions[t]=r.length),s&&(e.deletions[t]=s.length)}),new G(So,(e,[t,,r,,s])=>r!==void 0||s!==void 0?(e.summary.changes=+t||0,e.summary.insertions=+r||0,e.summary.deletions=+s||0,!0):!1),new G(Co,(e,[t,r])=>{S(e.files,r),S(t==="create"?e.created:e.deleted,r)})],li=[new G(/^from\s(.+)$/i,(e,[t])=>void(e.remote=t)),new G(/^fatal:\s(.+)$/,(e,[t])=>void(e.message=t)),new G(/([a-z0-9]+)\.\.([a-z0-9]+)\s+(\S+)\s+->\s+(\S+)$/,(e,[t,r,s,o])=>{e.branch.local=s,e.hash.local=t,e.branch.remote=o,e.hash.remote=r})],Oo=(e,t)=>Z(new zr,Po,[e,t]),fs=(e,t)=>Object.assign(new zr,Oo(e,t),ii(e,t))}}),Ao,di,Ro,Yl=f({"src/lib/parsers/parse-merge.ts"(){"use strict";Hl(),y(),pi(),Ao=[new G(/^Auto-merging\s+(.+)$/,(e,[t])=>{e.merges.push(t)}),new G(/^CONFLICT\s+\((.+)\): Merge conflict in (.+)$/,(e,[t,r])=>{e.conflicts.push(new jt(t,r))}),new G(/^CONFLICT\s+\((.+\/delete)\): (.+) deleted in (.+) and/,(e,[t,r,s])=>{e.conflicts.push(new jt(t,r,{deleteRef:s}))}),new G(/^CONFLICT\s+\((.+)\):/,(e,[t])=>{e.conflicts.push(new jt(t,null))}),new G(/^Automatic merge failed;\s+(.+)$/,(e,[t])=>{e.result=t})],di=(e,t)=>Object.assign(Ro(e,t),fs(e,t)),Ro=e=>Z(new si,Ao,e)}});function Fo(e){return e.length?{commands:["merge",...e],format:"utf-8",parser(t,r){let s=di(t,r);if(s.failed)throw new dt(s);return s}}:Q("Git.merge requires at least one option")}var Jl=f({"src/lib/tasks/merge.ts"(){"use strict";Ye(),Yl(),L()}});function Xl(e,t,r){let s=r.includes("deleted"),o=r.includes("tag")||/^refs\/tags/.test(e),n=!r.includes("new");return{deleted:s,tag:o,branch:!o,new:!n,alreadyUpdated:n,local:e,remote:t}}var Do,gi,xo,Ql=f({"src/lib/parsers/parse-push.ts"(){"use strict";y(),ui(),Do=[new G(/^Pushing to (.+)$/,(e,[t])=>{e.repo=t}),new G(/^updating local tracking ref '(.+)'/,(e,[t])=>{e.ref=at(oe({},e.ref||{}),{local:t})}),new G(/^[=*-]\s+([^:]+):(\S+)\s+\[(.+)]$/,(e,[t,r,s])=>{e.pushed.push(Xl(t,r,s))}),new G(/^Branch '([^']+)' set up to track remote branch '([^']+)' from '([^']+)'/,(e,[t,r,s])=>{e.branch=at(oe({},e.branch||{}),{local:t,remote:r,remoteName:s})}),new G(/^([^:]+):(\S+)\s+([a-z0-9]+)\.\.([a-z0-9]+)$/,(e,[t,r,s,o])=>{e.update={head:{local:t,remote:r},hash:{from:s,to:o}}})],gi=(e,t)=>{let r=xo(e,t),s=ii(e,t);return oe(oe({},r),s)},xo=(e,t)=>Z({pushed:[]},Do,[e,t])}}),mi={};U(mi,{pushTagsTask:()=>Zl,pushTask:()=>Ts});function Zl(e={},t){return S(t,"--tags"),Ts(e,t)}function Ts(e={},t){let r=["push",...t];return e.branch&&r.splice(1,0,e.branch),e.remote&&r.splice(1,0,e.remote),zt(r,"-v"),S(r,"--verbose"),S(r,"--porcelain"),{commands:r,format:"utf-8",parser:gi}}var hi=f({"src/lib/tasks/push.ts"(){"use strict";Ql(),y()}});function ep(){return{showBuffer(){let e=["show",...X(arguments,1)];return e.includes("--binary")||e.splice(1,0,"--binary"),this._runTask(vn(e),F(arguments))},show(){let e=["show",...X(arguments,1)];return this._runTask(K(e),F(arguments))}}}var tp=f({"src/lib/tasks/show.ts"(){"use strict";y(),L()}}),Lo,fi,rp=f({"src/lib/responses/FileStatusSummary.ts"(){"use strict";Lo=/^(.+)\0(.+)$/,fi=class{constructor(e,t,r){if(this.path=e,this.index=t,this.working_dir=r,t==="R"||r==="R"){let s=Lo.exec(e)||[null,e,e];this.from=s[2]||"",this.path=s[1]||""}}}}});function Uo(e){let[t,r]=e.split(Ke);return{from:r||t,to:t}}function re(e,t,r){return[`${e}${t}`,r]}function Lr(e,...t){return t.map(r=>re(e,r,(s,o)=>S(s.conflicted,o)))}function sp(e,t){let r=t.trim();switch(" "){case r.charAt(2):return s(r.charAt(0),r.charAt(1),r.substr(3));case r.charAt(1):return s(" ",r.charAt(0),r.substr(2));default:return}function s(o,n,i){let a=`${o}${n}`,c=Ti.get(a);c&&c(e,i),a!=="##"&&a!=="!!"&&e.files.push(new fi(i,o,n))}}var Io,Ti,Ei,op=f({"src/lib/responses/StatusSummary.ts"(){"use strict";y(),rp(),Io=class{constructor(){this.not_added=[],this.conflicted=[],this.created=[],this.deleted=[],this.ignored=void 0,this.modified=[],this.renamed=[],this.files=[],this.staged=[],this.ahead=0,this.behind=0,this.current=null,this.tracking=null,this.detached=!1,this.isClean=()=>!this.files.length}},Ti=new Map([re(" ","A",(e,t)=>S(e.created,t)),re(" ","D",(e,t)=>S(e.deleted,t)),re(" ","M",(e,t)=>S(e.modified,t)),re("A"," ",(e,t)=>S(e.created,t)&&S(e.staged,t)),re("A","M",(e,t)=>S(e.created,t)&&S(e.staged,t)&&S(e.modified,t)),re("D"," ",(e,t)=>S(e.deleted,t)&&S(e.staged,t)),re("M"," ",(e,t)=>S(e.modified,t)&&S(e.staged,t)),re("M","M",(e,t)=>S(e.modified,t)&&S(e.staged,t)),re("R"," ",(e,t)=>{S(e.renamed,Uo(t))}),re("R","M",(e,t)=>{let r=Uo(t);S(e.renamed,r),S(e.modified,r.to)}),re("!","!",(e,t)=>{S(e.ignored=e.ignored||[],t)}),re("?","?",(e,t)=>S(e.not_added,t)),...Lr("A","A","U"),...Lr("D","D","U"),...Lr("U","A","D","U"),["##",(e,t)=>{let r=/ahead (\d+)/,s=/behind (\d+)/,o=/^(.+?(?=(?:\.{3}|\s|$)))/,n=/\.{3}(\S*)/,i=/\son\s([\S]+)$/,a;a=r.exec(t),e.ahead=a&&+a[1]||0,a=s.exec(t),e.behind=a&&+a[1]||0,a=o.exec(t),e.current=a&&a[1],a=n.exec(t),e.tracking=a&&a[1],a=i.exec(t),e.current=a&&a[1]||e.current,e.detached=/\(no branch\)/.test(t)}]]),Ei=function(e){let t=e.split(Ke),r=new Io;for(let s=0,o=t.length;s<o;){let n=t[s++].trim();n&&(n.charAt(0)==="R"&&(n+=Ke+(t[s++]||"")),sp(r,n))}return r}}});function np(e){return{format:"utf-8",commands:["status","--porcelain","-b","-u","--null",...e.filter(r=>!wi.includes(r))],parser(r){return Ei(r)}}}var wi,ip=f({"src/lib/tasks/status.ts"(){"use strict";op(),wi=["--null","-z"]}});function Bt(e=0,t=0,r=0,s="",o=!0){return Object.defineProperty({major:e,minor:t,patch:r,agent:s,installed:o},"toString",{value(){return`${this.major}.${this.minor}.${this.patch}`},configurable:!1,enumerable:!1})}function ap(){return Bt(0,0,0,"",!1)}function cp(){return{version(){return this._runTask({commands:["--version"],format:"utf-8",parser:up,onError(e,t,r,s){if(e.exitCode===-2)return r(Buffer.from(Es));s(t)}})}}}function up(e){return e===Es?ap():Z(Bt(0,0,0,e),bi,e)}var Es,bi,lp=f({"src/lib/tasks/version.ts"(){"use strict";y(),Es="installed=false",bi=[new G(/version (\d+)\.(\d+)\.(\d+)(?:\s*\((.+)\))?/,(e,[t,r,s,o=""])=>{Object.assign(e,Bt(P(t),P(r),P(s),o))}),new G(/version (\d+)\.(\d+)\.(\D+)(.+)?$/,(e,[t,r,s,o=""])=>{Object.assign(e,Bt(P(t),P(r),s,o))})]}}),vi={};U(vi,{SimpleGitApi:()=>Vr});var Vr,pp=f({"src/lib/simple-git-api.ts"(){"use strict";fl(),Tl(),wl(),_l(),Cl(),On(),Ol(),xn(),Rl(),Ul(),ri(),Jl(),hi(),tp(),ip(),L(),lp(),y(),Vr=class{constructor(e){this._executor=e}_runTask(e,t){let r=this._executor.chain(),s=r.push(e);return t&&ml(e,s,t),Object.create(this,{then:{value:s.then.bind(s)},catch:{value:s.catch.bind(s)},_executor:{value:r}})}add(e){return this._runTask(K(["add",...de(e)]),F(arguments))}cwd(e){let t=F(arguments);return typeof e=="string"?this._runTask(bo(e,this._executor),t):typeof(e==null?void 0:e.path)=="string"?this._runTask(bo(e.path,e.root&&this._executor||void 0),t):this._runTask(Q("Git.cwd: workingDirectory must be supplied as a string"),t)}hashObject(e,t){return this._runTask(Al(e,t===!0),F(arguments))}init(e){return this._runTask(Ll(e===!0,this._executor.cwd,X(arguments)),F(arguments))}merge(){return this._runTask(Fo(X(arguments)),F(arguments))}mergeFromTo(e,t){return H(e)&&H(t)?this._runTask(Fo([e,t,...X(arguments)]),F(arguments,!1)):this._runTask(Q("Git.mergeFromTo requires that the 'remote' and 'branch' arguments are supplied as strings"))}outputHandler(e){return this._executor.outputHandler=e,this}push(){let e=Ts({remote:ge(arguments[0],H),branch:ge(arguments[1],H)},X(arguments));return this._runTask(e,F(arguments))}stash(){return this._runTask(K(["stash",...X(arguments)]),F(arguments))}status(){return this._runTask(np(X(arguments)),F(arguments))}},Object.assign(Vr.prototype,El(),Sl(),tl(),vl(),Pl(),nl(),Wl(),ep(),cp())}}),_i={};U(_i,{Scheduler:()=>ki});var jo,ki,dp=f({"src/lib/runners/scheduler.ts"(){"use strict";y(),Mn(),jo=(()=>{let e=0;return()=>{e++;let{promise:t,done:r}=(0,yi.createDeferred)();return{promise:t,done:r,id:e}}})(),ki=class{constructor(e=2){this.concurrency=e,this.logger=cs("","scheduler"),this.pending=[],this.running=[],this.logger("Constructed, concurrency=%s",e)}schedule(){if(!this.pending.length||this.running.length>=this.concurrency){this.logger("Schedule attempt ignored, pending=%s running=%s concurrency=%s",this.pending.length,this.running.length,this.concurrency);return}let e=S(this.running,this.pending.shift());this.logger("Attempting id=%s",e.id),e.done(()=>{this.logger("Completing id=",e.id),zt(this.running,e),this.schedule()})}next(){let{promise:e,id:t}=S(this.pending,jo());return this.logger("Scheduling id=%s",t),this.schedule(),e}}}}),Gi={};U(Gi,{applyPatchTask:()=>gp});function gp(e,t){return K(["apply",...t,...e])}var mp=f({"src/lib/tasks/apply-patch.ts"(){"use strict";L()}});function hp(e,t){return{branch:e,hash:t,success:!0}}function fp(e){return{branch:e,hash:null,success:!1}}var Si,Tp=f({"src/lib/responses/BranchDeleteSummary.ts"(){"use strict";Si=class{constructor(){this.all=[],this.branches={},this.errors=[]}get success(){return!this.errors.length}}}});function Ci(e,t){return t===1&&Kr.test(e)}var Mo,Kr,$o,Xt,Ep=f({"src/lib/parsers/parse-branch-delete.ts"(){"use strict";Tp(),y(),Mo=/(\S+)\s+\(\S+\s([^)]+)\)/,Kr=/^error[^']+'([^']+)'/m,$o=[new G(Mo,(e,[t,r])=>{let s=hp(t,r);e.all.push(s),e.branches[t]=s}),new G(Kr,(e,[t])=>{let r=fp(t);e.errors.push(r),e.all.push(r),e.branches[t]=r})],Xt=(e,t)=>Z(new Si,$o,[e,t])}}),Pi,wp=f({"src/lib/responses/BranchSummary.ts"(){"use strict";Pi=class{constructor(){this.all=[],this.branches={},this.current="",this.detached=!1}push(e,t,r,s,o){e==="*"&&(this.detached=t,this.current=r),this.all.push(r),this.branches[r]={current:e==="*",linkedWorkTree:e==="+",name:r,commit:s,label:o}}}}});function No(e){return e?e.charAt(0):""}function Oi(e){return Z(new Pi,Ai,e)}var Ai,bp=f({"src/lib/parsers/parse-branch.ts"(){"use strict";wp(),y(),Ai=[new G(/^([*+]\s)?\((?:HEAD )?detached (?:from|at) (\S+)\)\s+([a-z0-9]+)\s(.*)$/,(e,[t,r,s,o])=>{e.push(No(t),!0,r,s,o)}),new G(new RegExp("^([*+]\\s)?(\\S+)\\s+([a-z0-9]+)\\s?(.*)$","s"),(e,[t,r,s,o])=>{e.push(No(t),!1,r,s,o)})]}}),Ri={};U(Ri,{branchLocalTask:()=>_p,branchTask:()=>vp,containsDeleteBranchCommand:()=>Fi,deleteBranchTask:()=>kp,deleteBranchesTask:()=>yp});function Fi(e){let t=["-d","-D","--delete"];return e.some(r=>t.includes(r))}function vp(e){let t=Fi(e),r=["branch",...e];return r.length===1&&r.push("-a"),r.includes("-v")||r.splice(1,0,"-v"),{format:"utf-8",commands:r,parser(s,o){return t?Xt(s,o).all[0]:Oi(s)}}}function _p(){return{format:"utf-8",commands:["branch","-v"],parser:Oi}}function yp(e,t=!1){return{format:"utf-8",commands:["branch","-v",t?"-D":"-d",...e],parser(r,s){return Xt(r,s)},onError({exitCode:r,stdOut:s},o,n,i){if(!Ci(String(o),r))return i(o);n(s)}}}function kp(e,t=!1){let r={format:"utf-8",commands:["branch","-v",t?"-D":"-d",e],parser(s,o){return Xt(s,o).branches[e]},onError({exitCode:s,stdErr:o,stdOut:n},i,a,c){if(!Ci(String(i),s))return c(i);throw new dt(r.parser(ut(n),ut(o)),String(i))}};return r}var Gp=f({"src/lib/tasks/branch.ts"(){"use strict";Ye(),Ep(),bp(),y()}}),Di,Sp=f({"src/lib/responses/CheckIgnore.ts"(){"use strict";Di=e=>e.split(/\n/g).map(t=>t.trim()).filter(t=>!!t)}}),xi={};U(xi,{checkIgnoreTask:()=>Cp});function Cp(e){return{commands:["check-ignore",...e],format:"utf-8",parser:Di}}var Pp=f({"src/lib/tasks/check-ignore.ts"(){"use strict";Sp()}}),Li={};U(Li,{cloneMirrorTask:()=>Ap,cloneTask:()=>Ui});function Op(e){return/^--upload-pack(=|$)/.test(e)}function Ui(e,t,r){let s=["clone",...r];return H(e)&&s.push(e),H(t)&&s.push(t),s.find(Op)?Q("git.fetch: potential exploit argument blocked."):K(s)}function Ap(e,t,r){return S(r,"--mirror"),Ui(e,t,r)}var Rp=f({"src/lib/tasks/clone.ts"(){"use strict";L(),y()}});function Fp(e,t){return Z({raw:e,remote:null,branches:[],tags:[],updated:[],deleted:[]},Ii,[e,t])}var Ii,Dp=f({"src/lib/parsers/parse-fetch.ts"(){"use strict";y(),Ii=[new G(/From (.+)$/,(e,[t])=>{e.remote=t}),new G(/\* \[new branch]\s+(\S+)\s*-> (.+)$/,(e,[t,r])=>{e.branches.push({name:t,tracking:r})}),new G(/\* \[new tag]\s+(\S+)\s*-> (.+)$/,(e,[t,r])=>{e.tags.push({name:t,tracking:r})}),new G(/- \[deleted]\s+\S+\s*-> (.+)$/,(e,[t])=>{e.deleted.push({tracking:t})}),new G(/\s*([^.]+)\.\.(\S+)\s+(\S+)\s*-> (.+)$/,(e,[t,r,s,o])=>{e.updated.push({name:s,tracking:o,to:r,from:t})})]}}),ji={};U(ji,{fetchTask:()=>Lp});function xp(e){return/^--upload-pack(=|$)/.test(e)}function Lp(e,t,r){let s=["fetch",...r];return e&&t&&s.push(e,t),s.find(xp)?Q("git.fetch: potential exploit argument blocked."):{commands:s,format:"utf-8",parser:Fp}}var Up=f({"src/lib/tasks/fetch.ts"(){"use strict";Dp(),L()}});function Ip(e){return Z({moves:[]},Mi,e)}var Mi,jp=f({"src/lib/parsers/parse-move.ts"(){"use strict";y(),Mi=[new G(/^Renaming (.+) to (.+)$/,(e,[t,r])=>{e.moves.push({from:t,to:r})})]}}),$i={};U($i,{moveTask:()=>Mp});function Mp(e,t){return{commands:["mv","-v",...de(e),t],format:"utf-8",parser:Ip}}var $p=f({"src/lib/tasks/move.ts"(){"use strict";jp(),y()}}),Ni={};U(Ni,{pullTask:()=>Np});function Np(e,t,r){let s=["pull",...r];return e&&t&&s.splice(1,0,e,t),{commands:s,format:"utf-8",parser(o,n){return fs(o,n)},onError(o,n,i,a){let c=Kl(ut(o.stdOut),ut(o.stdErr));if(c)return a(new dt(c));a(n)}}}var Bp=f({"src/lib/tasks/pull.ts"(){"use strict";Ye(),pi(),y()}});function qp(e){let t={};return Bi(e,([r])=>t[r]={name:r}),Object.values(t)}function Wp(e){let t={};return Bi(e,([r,s,o])=>{t.hasOwnProperty(r)||(t[r]={name:r,refs:{fetch:"",push:""}}),o&&s&&(t[r].refs[o.replace(/[^a-z]/g,"")]=s)}),Object.values(t)}function Bi(e,t){Jr(e,r=>t(r.split(/\s+/)))}var Hp=f({"src/lib/responses/GetRemoteSummary.ts"(){"use strict";y()}}),qi={};U(qi,{addRemoteTask:()=>zp,getRemotesTask:()=>Vp,listRemotesTask:()=>Kp,remoteTask:()=>Yp,removeRemoteTask:()=>Jp});function zp(e,t,r){return K(["remote","add",...r,e,t])}function Vp(e){let t=["remote"];return e&&t.push("-v"),{commands:t,format:"utf-8",parser:e?Wp:qp}}function Kp(e){let t=[...e];return t[0]!=="ls-remote"&&t.unshift("ls-remote"),K(t)}function Yp(e){let t=[...e];return t[0]!=="remote"&&t.unshift("remote"),K(t)}function Jp(e){return K(["remote","remove",e])}var Xp=f({"src/lib/tasks/remote.ts"(){"use strict";Hp(),L()}}),Wi={};U(Wi,{stashListTask:()=>Qp});function Qp(e={},t){let r=ti(e),s=["stash","list",...r.commands,...t],o=Xn(r.splitter,r.fields,ls(s));return Jt(s)||{commands:s,format:"utf-8",parser:o}}var Zp=f({"src/lib/tasks/stash-list.ts"(){"use strict";ft(),Zn(),hs(),ri()}}),Hi={};U(Hi,{addSubModuleTask:()=>ed,initSubModuleTask:()=>td,subModuleTask:()=>Qt,updateSubModuleTask:()=>rd});function ed(e,t){return Qt(["add",e,t])}function td(e){return Qt(["init",...e])}function Qt(e){let t=[...e];return t[0]!=="submodule"&&t.unshift("submodule"),K(t)}function rd(e){return Qt(["update",...e])}var sd=f({"src/lib/tasks/sub-module.ts"(){"use strict";L()}});function od(e,t){let r=isNaN(e),s=isNaN(t);return r!==s?r?1:-1:r?zi(e,t):0}function zi(e,t){return e===t?0:e>t?1:-1}function nd(e){return e.trim()}function xt(e){return typeof e=="string"&&parseInt(e.replace(/^\D+/g,""),10)||0}var Bo,Vi,id=f({"src/lib/responses/TagList.ts"(){"use strict";Bo=class{constructor(e,t){this.all=e,this.latest=t}},Vi=function(e,t=!1){let r=e.split(`
`).map(nd).filter(Boolean);t||r.sort(function(o,n){let i=o.split("."),a=n.split(".");if(i.length===1||a.length===1)return od(xt(i[0]),xt(a[0]));for(let c=0,l=Math.max(i.length,a.length);c<l;c++){let u=zi(xt(i[c]),xt(a[c]));if(u)return u}return 0});let s=t?r[0]:[...r].reverse().find(o=>o.indexOf(".")>=0);return new Bo(r,s)}}}),Ki={};U(Ki,{addAnnotatedTagTask:()=>ud,addTagTask:()=>cd,tagListTask:()=>ad});function ad(e=[]){let t=e.some(r=>/^--sort=/.test(r));return{format:"utf-8",commands:["tag","-l",...e],parser(r){return Vi(r,t)}}}function cd(e){return{format:"utf-8",commands:["tag",e],parser(){return{name:e}}}}function ud(e,t){return{format:"utf-8",commands:["tag","-a","-m",t,e],parser(){return{name:e}}}}var ld=f({"src/lib/tasks/tag.ts"(){"use strict";id()}}),pd=Pu({"src/git.js"(e,t){"use strict";var{GitExecutor:r}=(gl(),R(Nn)),{SimpleGitApi:s}=(pp(),R(vi)),{Scheduler:o}=(dp(),R(_i)),{configurationErrorTask:n}=(L(),R(Nr)),{asArray:i,filterArray:a,filterPrimitives:c,filterString:l,filterStringOrStringArray:u,filterType:p,getTrailingOptions:d,trailingFunctionArgument:g,trailingOptionsArgument:k}=(y(),R(pn)),{applyPatchTask:T}=(mp(),R(Gi)),{branchTask:w,branchLocalTask:_,deleteBranchesTask:D,deleteBranchTask:W}=(Gp(),R(Ri)),{checkIgnoreTask:z}=(Pp(),R(xi)),{checkIsRepoTask:ae}=(hn(),R(dn)),{cloneTask:M,cloneMirrorTask:$e}=(Rp(),R(Li)),{cleanWithOptionsTask:Pe,isCleanOptionsArray:ce}=(Sn(),R(kn)),{diffSummaryTask:cr}=(hs(),R(ei)),{fetchTask:La}=(Up(),R(ji)),{moveTask:Ua}=($p(),R($i)),{pullTask:Ia}=(Bp(),R(Ni)),{pushTagsTask:ja}=(hi(),R(mi)),{addRemoteTask:Ma,getRemotesTask:$a,listRemotesTask:Na,remoteTask:Ba,removeRemoteTask:qa}=(Xp(),R(qi)),{getResetMode:Wa,resetTask:Ha}=(jn(),R(Ln)),{stashListTask:za}=(Zp(),R(Wi)),{addSubModuleTask:Va,initSubModuleTask:Ka,subModuleTask:Ya,updateSubModuleTask:Ja}=(sd(),R(Hi)),{addAnnotatedTagTask:Xa,addTagTask:Qa,tagListTask:Za}=(ld(),R(Ki)),{straightThroughBufferTask:ec,straightThroughStringTask:le}=(L(),R(Nr));function b(m,E){this._plugins=E,this._executor=new r(m.baseDir,new o(m.maxConcurrentProcesses),E),this._trimmed=m.trimmed}(b.prototype=Object.create(s.prototype)).constructor=b,b.prototype.customBinary=function(m){return this._plugins.reconfigure("binary",m),this},b.prototype.env=function(m,E){return arguments.length===1&&typeof m=="object"?this._executor.env=m:(this._executor.env=this._executor.env||{})[m]=E,this},b.prototype.stashList=function(m){return this._runTask(za(k(arguments)||{},a(m)&&m||[]),g(arguments))};function Gs(m,E,C,V){return typeof C!="string"?n(`git.${m}() requires a string 'repoPath'`):E(C,p(V,l),d(arguments))}b.prototype.clone=function(){return this._runTask(Gs("clone",M,...arguments),g(arguments))},b.prototype.mirror=function(){return this._runTask(Gs("mirror",$e,...arguments),g(arguments))},b.prototype.mv=function(m,E){return this._runTask(Ua(m,E),g(arguments))},b.prototype.checkoutLatestTag=function(m){var E=this;return this.pull(function(){E.tags(function(C,V){E.checkout(V.latest,m)})})},b.prototype.pull=function(m,E,C,V){return this._runTask(Ia(p(m,l),p(E,l),d(arguments)),g(arguments))},b.prototype.fetch=function(m,E){return this._runTask(La(p(m,l),p(E,l),d(arguments)),g(arguments))},b.prototype.silent=function(m){return console.warn("simple-git deprecation notice: git.silent: logging should be configured using the `debug` library / `DEBUG` environment variable, this will be an error in version 3"),this},b.prototype.tags=function(m,E){return this._runTask(Za(d(arguments)),g(arguments))},b.prototype.rebase=function(){return this._runTask(le(["rebase",...d(arguments)]),g(arguments))},b.prototype.reset=function(m){return this._runTask(Ha(Wa(m),d(arguments)),g(arguments))},b.prototype.revert=function(m){let E=g(arguments);return typeof m!="string"?this._runTask(n("Commit must be a string"),E):this._runTask(le(["revert",...d(arguments,0,!0),m]),E)},b.prototype.addTag=function(m){let E=typeof m=="string"?Qa(m):n("Git.addTag requires a tag name");return this._runTask(E,g(arguments))},b.prototype.addAnnotatedTag=function(m,E){return this._runTask(Xa(m,E),g(arguments))},b.prototype.deleteLocalBranch=function(m,E,C){return this._runTask(W(m,typeof E=="boolean"?E:!1),g(arguments))},b.prototype.deleteLocalBranches=function(m,E,C){return this._runTask(D(m,typeof E=="boolean"?E:!1),g(arguments))},b.prototype.branch=function(m,E){return this._runTask(w(d(arguments)),g(arguments))},b.prototype.branchLocal=function(m){return this._runTask(_(),g(arguments))},b.prototype.raw=function(m){let E=!Array.isArray(m),C=[].slice.call(E?arguments:m,0);for(let ue=0;ue<C.length&&E;ue++)if(!c(C[ue])){C.splice(ue,C.length-ue);break}C.push(...d(arguments,0,!0));var V=g(arguments);return C.length?this._runTask(le(C,this._trimmed),V):this._runTask(n("Raw: must supply one or more command to execute"),V)},b.prototype.submoduleAdd=function(m,E,C){return this._runTask(Va(m,E),g(arguments))},b.prototype.submoduleUpdate=function(m,E){return this._runTask(Ja(d(arguments,!0)),g(arguments))},b.prototype.submoduleInit=function(m,E){return this._runTask(Ka(d(arguments,!0)),g(arguments))},b.prototype.subModule=function(m,E){return this._runTask(Ya(d(arguments)),g(arguments))},b.prototype.listRemote=function(){return this._runTask(Na(d(arguments)),g(arguments))},b.prototype.addRemote=function(m,E,C){return this._runTask(Ma(m,E,d(arguments)),g(arguments))},b.prototype.removeRemote=function(m,E){return this._runTask(qa(m),g(arguments))},b.prototype.getRemotes=function(m,E){return this._runTask($a(m===!0),g(arguments))},b.prototype.remote=function(m,E){return this._runTask(Ba(d(arguments)),g(arguments))},b.prototype.tag=function(m,E){let C=d(arguments);return C[0]!=="tag"&&C.unshift("tag"),this._runTask(le(C),g(arguments))},b.prototype.updateServerInfo=function(m){return this._runTask(le(["update-server-info"]),g(arguments))},b.prototype.pushTags=function(m,E){let C=ja({remote:p(m,l)},d(arguments));return this._runTask(C,g(arguments))},b.prototype.rm=function(m){return this._runTask(le(["rm","-f",...i(m)]),g(arguments))},b.prototype.rmKeepLocal=function(m){return this._runTask(le(["rm","--cached",...i(m)]),g(arguments))},b.prototype.catFile=function(m,E){return this._catFile("utf-8",arguments)},b.prototype.binaryCatFile=function(){return this._catFile("buffer",arguments)},b.prototype._catFile=function(m,E){var C=g(E),V=["cat-file"],ue=E[0];if(typeof ue=="string")return this._runTask(n("Git.catFile: options must be supplied as an array of strings"),C);Array.isArray(ue)&&V.push.apply(V,ue);let ur=m==="buffer"?ec(V):le(V);return this._runTask(ur,C)},b.prototype.diff=function(m,E){let C=l(m)?n("git.diff: supplying options as a single string is no longer supported, switch to an array of strings"):le(["diff",...d(arguments)]);return this._runTask(C,g(arguments))},b.prototype.diffSummary=function(){return this._runTask(cr(d(arguments,1)),g(arguments))},b.prototype.applyPatch=function(m){let E=u(m)?T(i(m),d([].slice.call(arguments,1))):n("git.applyPatch requires one or more string patches as the first argument");return this._runTask(E,g(arguments))},b.prototype.revparse=function(){let m=["rev-parse",...d(arguments,!0)];return this._runTask(le(m,!0),g(arguments))},b.prototype.clean=function(m,E,C){let V=ce(m),ue=V&&m.join("")||p(m,l)||"",ur=d([].slice.call(arguments,V?1:0));return this._runTask(Pe(ue,ur),g(arguments))},b.prototype.exec=function(m){let E={commands:[],format:"utf-8",parser(){typeof m=="function"&&m()}};return this._runTask(E)},b.prototype.clearQueue=function(){return this},b.prototype.checkIgnore=function(m,E){return this._runTask(z(i(p(m,u,[]))),g(arguments))},b.prototype.checkIsRepo=function(m,E){return this._runTask(ae(p(m,l)),g(arguments))},t.exports=b}});pt();ve();var dd=class extends fe{constructor(e,t){super(void 0,t),this.config=e}};ve();ve();var he=class extends fe{constructor(e,t,r){super(e,r),this.task=e,this.plugin=t,Object.setPrototypeOf(this,new.target.prototype)}};Ye();Yo();hn();Sn();On();Rn();xn();jn();function gd(e){return e?[{type:"spawn.before",action(s,o){e.aborted&&o.kill(new he(void 0,"abort","Abort already signaled"))}},{type:"spawn.after",action(s,o){function n(){o.kill(new he(void 0,"abort","Abort signal received"))}e.addEventListener("abort",n),o.spawned.on("close",()=>e.removeEventListener("abort",n))}}]:void 0}function md(e){return typeof e=="string"&&e.trim().toLowerCase()==="-c"}function hd(e,t){if(md(e)&&/^\s*protocol(.[a-z]+)?.allow/.test(t))throw new he(void 0,"unsafe","Configuring protocol.allow is not permitted without enabling allowUnsafeExtProtocol")}function fd(e,t){if(/^\s*--(upload|receive)-pack/.test(e))throw new he(void 0,"unsafe","Use of --upload-pack or --receive-pack is not permitted without enabling allowUnsafePack");if(t==="clone"&&/^\s*-u\b/.test(e))throw new he(void 0,"unsafe","Use of clone with option -u is not permitted without enabling allowUnsafePack");if(t==="push"&&/^\s*--exec\b/.test(e))throw new he(void 0,"unsafe","Use of push with option --exec is not permitted without enabling allowUnsafePack")}function Td({allowUnsafeProtocolOverride:e=!1,allowUnsafePack:t=!1}={}){return{type:"spawn.args",action(r,s){return r.forEach((o,n)=>{let i=n<r.length?r[n+1]:"";e||hd(o,i),t||fd(o,s.method)}),r}}}y();function Ed(e){let t=ct(e,"-c");return{type:"spawn.args",action(r){return[...t,...r]}}}y();var qo=(0,Ve.deferred)().promise;function wd({onClose:e=!0,onExit:t=50}={}){function r(){let o=-1,n={close:(0,Ve.deferred)(),closeTimeout:(0,Ve.deferred)(),exit:(0,Ve.deferred)(),exitTimeout:(0,Ve.deferred)()},i=Promise.race([e===!1?qo:n.closeTimeout.promise,t===!1?qo:n.exitTimeout.promise]);return s(e,n.close,n.closeTimeout),s(t,n.exit,n.exitTimeout),{close(a){o=a,n.close.done()},exit(a){o=a,n.exit.done()},get exitCode(){return o},result:i}}function s(o,n,i){o!==!1&&(o===!0?n.promise:n.promise.then(()=>Ur(o))).then(i.done)}return{type:"spawn.after",action(o,n){return it(this,arguments,function*(i,{spawned:a,close:c}){var l,u;let p=r(),d=!0,g=()=>void(d=!1);(l=a.stdout)==null||l.on("data",g),(u=a.stderr)==null||u.on("data",g),a.on("error",g),a.on("close",k=>p.close(k)),a.on("exit",k=>p.exit(k));try{yield p.result,d&&(yield Ur(50)),c(p.exitCode)}catch(k){c(p.exitCode,k)}})}}}y();var bd="Invalid value supplied for custom binary, requires a single string or an array containing either one or two strings",Wo="Invalid value supplied for custom binary, restricted characters must be removed or supply the unsafe.allowUnsafeCustomBinary option";function vd(e){return!e||!/^([a-z]:)?([a-z0-9/.\\_-]+)$/i.test(e)}function Ho(e,t){if(e.length<1||e.length>2)throw new he(void 0,"binary",bd);if(e.some(vd))if(t)console.warn(Wo);else throw new he(void 0,"binary",Wo);let[s,o]=e;return{binary:s,prefix:o}}function _d(e,t=["git"],r=!1){let s=Ho(de(t),r);e.on("binary",o=>{s=Ho(de(o),r)}),e.append("spawn.binary",()=>s.binary),e.append("spawn.args",o=>s.prefix?[s.prefix,...o]:o)}ve();function yd(e){return!!(e.exitCode&&e.stdErr.length)}function kd(e){return Buffer.concat([...e.stdOut,...e.stdErr])}function Gd(e=!1,t=yd,r=kd){return(s,o)=>!e&&s||!t(o)?s:r(o)}function zo(e){return{type:"task.error",action(t,r){let s=e(t.error,{stdErr:r.stdErr,stdOut:r.stdOut,exitCode:r.exitCode});return Buffer.isBuffer(s)?{error:new fe(void 0,s.toString("utf-8"))}:{error:s}}}}y();var Sd=class{constructor(){this.plugins=new Set,this.events=new Yi.EventEmitter}on(e,t){this.events.on(e,t)}reconfigure(e,t){this.events.emit(e,t)}append(e,t){let r=S(this.plugins,{type:e,action:t});return()=>this.plugins.delete(r)}add(e){let t=[];return de(e).forEach(r=>r&&this.plugins.add(S(t,r))),()=>{t.forEach(r=>this.plugins.delete(r))}}exec(e,t,r){let s=t,o=Object.freeze(Object.create(r));for(let n of this.plugins)n.type===e&&(s=n.action(s,o));return s}};y();function Cd(e){let t="--progress",r=["checkout","clone","fetch","pull","push"];return[{type:"spawn.args",action(n,i){return r.includes(i.method)?tn(n,t):n}},{type:"spawn.after",action(n,i){var a;i.commands.includes(t)&&((a=i.spawned.stderr)==null||a.on("data",c=>{let l=/^([\s\S]+?):\s*(\d+)% \((\d+)\/(\d+)\)/.exec(c.toString("utf8"));l&&e({method:i.method,stage:Pd(l[1]),progress:P(l[2]),processed:P(l[3]),total:P(l[4])})}))}}]}function Pd(e){return String(e.toLowerCase().split(" ",1))||"unknown"}y();function Od(e){let t=on(e,["uid","gid"]);return{type:"spawn.options",action(r){return oe(oe({},t),r)}}}function Ad({block:e,stdErr:t=!0,stdOut:r=!0}){if(e>0)return{type:"spawn.after",action(s,o){var n,i;let a;function c(){a&&clearTimeout(a),a=setTimeout(u,e)}function l(){var p,d;(p=o.spawned.stdout)==null||p.off("data",c),(d=o.spawned.stderr)==null||d.off("data",c),o.spawned.off("exit",l),o.spawned.off("close",l),a&&clearTimeout(a)}function u(){l(),o.kill(new he(void 0,"timeout","block timeout reached"))}r&&((n=o.spawned.stdout)==null||n.on("data",c)),t&&((i=o.spawned.stderr)==null||i.on("data",c)),o.spawned.on("exit",l),o.spawned.on("close",l),c()}}}pt();function Rd(){return{type:"spawn.args",action(e){let t=[],r;function s(o){(r=r||[]).push(...o)}for(let o=0;o<e.length;o++){let n=e[o];if(Mt(n)){s(fo(n));continue}if(n==="--"){s(e.slice(o+1).flatMap(i=>Mt(i)&&fo(i)||i));break}t.push(n)}return r?[...t,"--",...r.map(String)]:t}}}y();var Fd=pd();function Dd(e,t){var r;let s=new Sd,o=un(e&&(typeof e=="string"?{baseDir:e}:e)||{},t);if(!Xr(o.baseDir))throw new dd(o,"Cannot use simple-git on a directory that does not exist");return Array.isArray(o.config)&&s.add(Ed(o.config)),s.add(Td(o.unsafe)),s.add(Rd()),s.add(wd(o.completion)),o.abort&&s.add(gd(o.abort)),o.progress&&s.add(Cd(o.progress)),o.timeout&&s.add(Ad(o.timeout)),o.spawnOptions&&s.add(Od(o.spawnOptions)),s.add(zo(Gd(!0))),o.errors&&s.add(zo(o.errors)),_d(s,o.binary,(r=o.unsafe)==null?void 0:r.allowUnsafeCustomBinary),new Fd(o,s)}Ye();var Ji=Dd;var Tt=$(require("path")),Xi=require("events"),Qi=require("util"),Zi=require("child_process"),Je=require("child_process"),xd=(0,Qi.promisify)(Zi.exec),_e=class _e extends Xi.EventEmitter{constructor(r){super();this.operationQueue=Promise.resolve();this.outputChannel=r;let s=Ue.workspace.workspaceFolders;if(!s||s.length===0)throw Ue.window.showErrorMessage("DevTrack: No workspace folder is open. Please open a folder to start tracking."),new Error("No workspace folder open.");let o=s[0].uri.fsPath;if(this.repoPath=o,!Tt.isAbsolute(this.repoPath))throw Ue.window.showErrorMessage("DevTrack: The repository path is not absolute."),new Error("Invalid repository path.");this.git=Ji(this.repoPath,{binary:this.findGitExecutable(),maxConcurrentProcesses:1,timeout:{block:1e4}}),this.initGitConfig()}findGitExecutable(){let r=process.platform,s=null;try{if(r==="win32"){let o=["C:\\Program Files\\Git\\cmd\\git.exe","C:\\Program Files (x86)\\Git\\cmd\\git.exe",process.env.PROGRAMFILES+"\\Git\\cmd\\git.exe",process.env.LOCALAPPDATA+"\\Programs\\Git\\cmd\\git.exe"];for(let n of o)try{(0,Je.execSync)(`"${n}" --version`),s=n;break}catch{}}else s=(0,Je.execSync)("which git").toString().trim();if(!s)throw new Error("Git executable not found");return(0,Je.execSync)(`"${s}" --version`),this.outputChannel.appendLine(`DevTrack: Found Git at ${s}`),s}catch(o){throw this.outputChannel.appendLine(`DevTrack: Error finding Git executable - ${o}`),new Error("Git is not properly installed or not in PATH")}}async verifyGitAccess(){return new Promise((r,s)=>{let o=(0,Je.spawn)(this.findGitExecutable(),["--version"]);o.on("error",n=>{this.outputChannel.appendLine(`DevTrack: Git access verification failed - ${n.message}`),s(new Error("Git is not accessible. Please ensure Git is installed and in your PATH."))}),o.on("close",n=>{n===0?r():s(new Error("Git verification failed. Please check your Git installation."))})})}async initGitConfig(){try{await this.git.addConfig("core.compression","0"),await this.git.addConfig("http.postBuffer","524288000"),await this.git.addConfig("http.maxRequestBuffer","100M"),await this.git.addConfig("core.longpaths","true"),await this.git.addConfig("gc.auto","0")}catch(r){this.outputChannel.appendLine(`DevTrack: Error initializing Git config: ${r}`)}}async withRetry(r){let s=null;for(let o=1;o<=_e.MAX_RETRIES;o++)try{return await r()}catch(n){s=n,this.outputChannel.appendLine(`DevTrack: Operation failed (attempt ${o}/${_e.MAX_RETRIES}): ${n.message}`),o<_e.MAX_RETRIES&&(await new Promise(i=>setTimeout(i,_e.RETRY_DELAY*o)),await this.cleanupGitLocks())}throw s}async cleanupGitLocks(){try{let r=Tt.join(this.repoPath,".git"),s=["index.lock","HEAD.lock"];for(let o of s){let n=Tt.join(r,o);await xd(`rm -f "${n}"`)}}catch(r){this.outputChannel.appendLine(`DevTrack: Error cleaning up Git locks: ${r}`)}}enqueueOperation(r){return this.operationQueue=this.operationQueue.then(()=>this.withRetry(r)).catch(s=>{throw this.outputChannel.appendLine(`DevTrack: Operation failed: ${s}`),s}),this.operationQueue}async initializeRepo(r){return this.enqueueOperation(async()=>{try{await this.verifyGitAccess(),await this.git.checkIsRepo()?this.outputChannel.appendLine("DevTrack: Git repository already initialized."):(await this.git.init(),this.outputChannel.appendLine("DevTrack: Initialized new Git repository."));let n=(await this.git.getRemotes(!0)).find(l=>l.name==="origin");n?n.refs.fetch!==r?(await this.git.removeRemote("origin"),this.outputChannel.appendLine("DevTrack: Removed existing remote origin."),await this.git.addRemote("origin",r),this.outputChannel.appendLine(`DevTrack: Added remote origin ${r}.`)):this.outputChannel.appendLine("DevTrack: Remote origin is already set correctly."):(await this.git.addRemote("origin",r),this.outputChannel.appendLine(`DevTrack: Added remote origin ${r}.`));let i=await this.git.branchLocal();(!i.current||i.current!=="main")&&(await this.git.checkoutLocalBranch("main"),this.outputChannel.appendLine('DevTrack: Created and switched to branch "main".')),await this.git.add("."),this.outputChannel.appendLine("DevTrack: Staged all changes.");let a="DevTrack: Initial commit";(await this.git.commit(a,["--allow-empty"])).commit&&this.outputChannel.appendLine(`DevTrack: Made initial commit with message "${a}".`),await this.git.push(["-u","origin","main"]),this.outputChannel.appendLine("DevTrack: Pushed initial commit to remote.")}catch(s){throw this.handleGitError(s),s}})}handleGitError(r){var o,n,i;let s="Git operation failed";(o=r.message)!=null&&o.includes("ENOENT")?s="Git is not accessible. Please ensure Git is installed and in your PATH.":(n=r.message)!=null&&n.includes("spawn git ENOENT")?s="Failed to spawn Git process. Please verify your Git installation.":(i=r.message)!=null&&i.includes("not a git repository")&&(s="Not a Git repository. Please initialize the repository first."),this.outputChannel.appendLine(`DevTrack: ${s} - ${r.message}`),Ue.window.showErrorMessage(`DevTrack: ${s}`)}async commitAndPush(r){return this.enqueueOperation(async()=>{try{await this.git.add("."),await this.git.commit(r),await this.git.push(),this.emit("commit",r),this.outputChannel.appendLine(`DevTrack: Committed changes with message: "${r}"`)}catch(s){throw this.outputChannel.appendLine(`DevTrack: Git commit failed. ${s.message}`),Ue.window.showErrorMessage(`DevTrack: Git commit failed. ${s.message}`),s}})}};_e.MAX_RETRIES=3,_e.RETRY_DELAY=1e3;var Zt=_e;var rr=$(require("vscode")),Ca=require("events");var _a=$(da(),1);var wt=e=>{if(typeof e!="string")throw new TypeError("invalid pattern");if(e.length>65536)throw new TypeError("pattern is too long")};var Bd={"[:alnum:]":["\\p{L}\\p{Nl}\\p{Nd}",!0],"[:alpha:]":["\\p{L}\\p{Nl}",!0],"[:ascii:]":["\\x00-\\x7f",!1],"[:blank:]":["\\p{Zs}\\t",!0],"[:cntrl:]":["\\p{Cc}",!0],"[:digit:]":["\\p{Nd}",!0],"[:graph:]":["\\p{Z}\\p{C}",!0,!0],"[:lower:]":["\\p{Ll}",!0],"[:print:]":["\\p{C}",!0],"[:punct:]":["\\p{P}",!0],"[:space:]":["\\p{Z}\\t\\r\\n\\v\\f",!0],"[:upper:]":["\\p{Lu}",!0],"[:word:]":["\\p{L}\\p{Nl}\\p{Nd}\\p{Pc}",!0],"[:xdigit:]":["A-Fa-f0-9",!1]},bt=e=>e.replace(/[[\]\\-]/g,"\\$&"),qd=e=>e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),ga=e=>e.join(""),ma=(e,t)=>{let r=t;if(e.charAt(r)!=="[")throw new Error("not in a brace expression");let s=[],o=[],n=r+1,i=!1,a=!1,c=!1,l=!1,u=r,p="";e:for(;n<e.length;){let T=e.charAt(n);if((T==="!"||T==="^")&&n===r+1){l=!0,n++;continue}if(T==="]"&&i&&!c){u=n+1;break}if(i=!0,T==="\\"&&!c){c=!0,n++;continue}if(T==="["&&!c){for(let[w,[_,D,W]]of Object.entries(Bd))if(e.startsWith(w,n)){if(p)return["$.",!1,e.length-r,!0];n+=w.length,W?o.push(_):s.push(_),a=a||D;continue e}}if(c=!1,p){T>p?s.push(bt(p)+"-"+bt(T)):T===p&&s.push(bt(T)),p="",n++;continue}if(e.startsWith("-]",n+1)){s.push(bt(T+"-")),n+=2;continue}if(e.startsWith("-",n+1)){p=T,n+=2;continue}s.push(bt(T)),n++}if(u<n)return["",!1,0,!1];if(!s.length&&!o.length)return["$.",!1,e.length-r,!0];if(o.length===0&&s.length===1&&/^\\?.$/.test(s[0])&&!l){let T=s[0].length===2?s[0].slice(-1):s[0];return[qd(T),!1,u-r,!1]}let d="["+(l?"^":"")+ga(s)+"]",g="["+(l?"":"^")+ga(o)+"]";return[s.length&&o.length?"("+d+"|"+g+")":s.length?d:g,a,u-r,!0]};var ye=(e,{windowsPathsNoEscape:t=!1}={})=>t?e.replace(/\[([^\/\\])\]/g,"$1"):e.replace(/((?!\\).|^)\[([^\/\\])\]/g,"$1$2").replace(/\\([^\/])/g,"$1");var Wd=new Set(["!","?","+","*","@"]),ha=e=>Wd.has(e),Hd="(?!(?:^|/)\\.\\.?(?:$|/))",er="(?!\\.)",zd=new Set(["[","."]),Vd=new Set(["..","."]),Kd=new Set("().*{}+?[]^$\\!"),Yd=e=>e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),_s="[^/]",fa=_s+"*?",Ta=_s+"+?",j,B,Te,O,I,ke,Ie,Ge,me,je,vt,Me,Ea,Se,tr,vs,wa,Y=class Y{constructor(t,r,s={}){J(this,Me);As(this,"type");J(this,j);J(this,B);J(this,Te,!1);J(this,O,[]);J(this,I);J(this,ke);J(this,Ie);J(this,Ge,!1);J(this,me);J(this,je);J(this,vt,!1);this.type=t,t&&x(this,B,!0),x(this,I,r),x(this,j,h(this,I)?h(h(this,I),j):this),x(this,me,h(this,j)===this?s:h(h(this,j),me)),x(this,Ie,h(this,j)===this?[]:h(h(this,j),Ie)),t==="!"&&!h(h(this,j),Ge)&&h(this,Ie).push(this),x(this,ke,h(this,I)?h(h(this,I),O).length:0)}get hasMagic(){if(h(this,B)!==void 0)return h(this,B);for(let t of h(this,O))if(typeof t!="string"&&(t.type||t.hasMagic))return x(this,B,!0);return h(this,B)}toString(){return h(this,je)!==void 0?h(this,je):this.type?x(this,je,this.type+"("+h(this,O).map(t=>String(t)).join("|")+")"):x(this,je,h(this,O).map(t=>String(t)).join(""))}push(...t){for(let r of t)if(r!==""){if(typeof r!="string"&&!(r instanceof Y&&h(r,I)===this))throw new Error("invalid part: "+r);h(this,O).push(r)}}toJSON(){var r;let t=this.type===null?h(this,O).slice().map(s=>typeof s=="string"?s:s.toJSON()):[this.type,...h(this,O).map(s=>s.toJSON())];return this.isStart()&&!this.type&&t.unshift([]),this.isEnd()&&(this===h(this,j)||h(h(this,j),Ge)&&((r=h(this,I))==null?void 0:r.type)==="!")&&t.push({}),t}isStart(){var r;if(h(this,j)===this)return!0;if(!((r=h(this,I))!=null&&r.isStart()))return!1;if(h(this,ke)===0)return!0;let t=h(this,I);for(let s=0;s<h(this,ke);s++){let o=h(t,O)[s];if(!(o instanceof Y&&o.type==="!"))return!1}return!0}isEnd(){var r,s,o;if(h(this,j)===this||((r=h(this,I))==null?void 0:r.type)==="!")return!0;if(!((s=h(this,I))!=null&&s.isEnd()))return!1;if(!this.type)return(o=h(this,I))==null?void 0:o.isEnd();let t=h(this,I)?h(h(this,I),O).length:0;return h(this,ke)===t-1}copyIn(t){typeof t=="string"?this.push(t):this.push(t.clone(this))}clone(t){let r=new Y(this.type,t);for(let s of h(this,O))r.copyIn(s);return r}static fromGlob(t,r={}){var o;let s=new Y(null,void 0,r);return Ee(o=Y,Se,tr).call(o,t,s,0,r),s}toMMPattern(){if(this!==h(this,j))return h(this,j).toMMPattern();let t=this.toString(),[r,s,o,n]=this.toRegExpSource();if(!(o||h(this,B)||h(this,me).nocase&&!h(this,me).nocaseMagicOnly&&t.toUpperCase()!==t.toLowerCase()))return s;let a=(h(this,me).nocase?"i":"")+(n?"u":"");return Object.assign(new RegExp(`^${r}$`,a),{_src:r,_glob:t})}get options(){return h(this,me)}toRegExpSource(t){var c;let r=t??!!h(this,me).dot;if(h(this,j)===this&&Ee(this,Me,Ea).call(this),!this.type){let l=this.isStart()&&this.isEnd(),u=h(this,O).map(k=>{var W;let[T,w,_,D]=typeof k=="string"?Ee(W=Y,Se,wa).call(W,k,h(this,B),l):k.toRegExpSource(t);return x(this,B,h(this,B)||_),x(this,Te,h(this,Te)||D),T}).join(""),p="";if(this.isStart()&&typeof h(this,O)[0]=="string"&&!(h(this,O).length===1&&Vd.has(h(this,O)[0]))){let T=zd,w=r&&T.has(u.charAt(0))||u.startsWith("\\.")&&T.has(u.charAt(2))||u.startsWith("\\.\\.")&&T.has(u.charAt(4)),_=!r&&!t&&T.has(u.charAt(0));p=w?Hd:_?er:""}let d="";return this.isEnd()&&h(h(this,j),Ge)&&((c=h(this,I))==null?void 0:c.type)==="!"&&(d="(?:$|\\/)"),[p+u+d,ye(u),x(this,B,!!h(this,B)),h(this,Te)]}let s=this.type==="*"||this.type==="+",o=this.type==="!"?"(?:(?!(?:":"(?:",n=Ee(this,Me,vs).call(this,r);if(this.isStart()&&this.isEnd()&&!n&&this.type!=="!"){let l=this.toString();return x(this,O,[l]),this.type=null,x(this,B,void 0),[l,ye(this.toString()),!1,!1]}let i=!s||t||r||!er?"":Ee(this,Me,vs).call(this,!0);i===n&&(i=""),i&&(n=`(?:${n})(?:${i})*?`);let a="";if(this.type==="!"&&h(this,vt))a=(this.isStart()&&!r?er:"")+Ta;else{let l=this.type==="!"?"))"+(this.isStart()&&!r&&!t?er:"")+fa+")":this.type==="@"?")":this.type==="?"?")?":this.type==="+"&&i?")":this.type==="*"&&i?")?":`)${this.type}`;a=o+n+l}return[a,ye(n),x(this,B,!!h(this,B)),h(this,Te)]}};j=new WeakMap,B=new WeakMap,Te=new WeakMap,O=new WeakMap,I=new WeakMap,ke=new WeakMap,Ie=new WeakMap,Ge=new WeakMap,me=new WeakMap,je=new WeakMap,vt=new WeakMap,Me=new WeakSet,Ea=function(){if(this!==h(this,j))throw new Error("should only call on root");if(h(this,Ge))return this;this.toString(),x(this,Ge,!0);let t;for(;t=h(this,Ie).pop();){if(t.type!=="!")continue;let r=t,s=h(r,I);for(;s;){for(let o=h(r,ke)+1;!s.type&&o<h(s,O).length;o++)for(let n of h(t,O)){if(typeof n=="string")throw new Error("string part in extglob AST??");n.copyIn(h(s,O)[o])}r=s,s=h(r,I)}}return this},Se=new WeakSet,tr=function(t,r,s,o){var g,k;let n=!1,i=!1,a=-1,c=!1;if(r.type===null){let T=s,w="";for(;T<t.length;){let _=t.charAt(T++);if(n||_==="\\"){n=!n,w+=_;continue}if(i){T===a+1?(_==="^"||_==="!")&&(c=!0):_==="]"&&!(T===a+2&&c)&&(i=!1),w+=_;continue}else if(_==="["){i=!0,a=T,c=!1,w+=_;continue}if(!o.noext&&ha(_)&&t.charAt(T)==="("){r.push(w),w="";let D=new Y(_,r);T=Ee(g=Y,Se,tr).call(g,t,D,T,o),r.push(D);continue}w+=_}return r.push(w),T}let l=s+1,u=new Y(null,r),p=[],d="";for(;l<t.length;){let T=t.charAt(l++);if(n||T==="\\"){n=!n,d+=T;continue}if(i){l===a+1?(T==="^"||T==="!")&&(c=!0):T==="]"&&!(l===a+2&&c)&&(i=!1),d+=T;continue}else if(T==="["){i=!0,a=l,c=!1,d+=T;continue}if(ha(T)&&t.charAt(l)==="("){u.push(d),d="";let w=new Y(T,u);u.push(w),l=Ee(k=Y,Se,tr).call(k,t,w,l,o);continue}if(T==="|"){u.push(d),d="",p.push(u),u=new Y(null,r);continue}if(T===")")return d===""&&h(r,O).length===0&&x(r,vt,!0),u.push(d),d="",r.push(...p,u),l;d+=T}return r.type=null,x(r,B,void 0),x(r,O,[t.substring(s-1)]),l},vs=function(t){return h(this,O).map(r=>{if(typeof r=="string")throw new Error("string type in extglob ast??");let[s,o,n,i]=r.toRegExpSource(t);return x(this,Te,h(this,Te)||i),s}).filter(r=>!(this.isStart()&&this.isEnd())||!!r).join("|")},wa=function(t,r,s=!1){let o=!1,n="",i=!1;for(let a=0;a<t.length;a++){let c=t.charAt(a);if(o){o=!1,n+=(Kd.has(c)?"\\":"")+c;continue}if(c==="\\"){a===t.length-1?n+="\\\\":o=!0;continue}if(c==="["){let[l,u,p,d]=ma(t,a);if(p){n+=l,i=i||u,a+=p-1,r=r||d;continue}}if(c==="*"){s&&t==="*"?n+=Ta:n+=fa,r=!0;continue}if(c==="?"){n+=_s,r=!0;continue}n+=Yd(c)}return[n,ye(t),!!r,i]},J(Y,Se);var Xe=Y;var ys=(e,{windowsPathsNoEscape:t=!1}={})=>t?e.replace(/[?*()[\]]/g,"[$&]"):e.replace(/[?*()[\]\\]/g,"\\$&");var q=(e,t,r={})=>(wt(t),!r.nocomment&&t.charAt(0)==="#"?!1:new Qe(t,r).match(e)),Jd=/^\*+([^+@!?\*\[\(]*)$/,Xd=e=>t=>!t.startsWith(".")&&t.endsWith(e),Qd=e=>t=>t.endsWith(e),Zd=e=>(e=e.toLowerCase(),t=>!t.startsWith(".")&&t.toLowerCase().endsWith(e)),eg=e=>(e=e.toLowerCase(),t=>t.toLowerCase().endsWith(e)),tg=/^\*+\.\*+$/,rg=e=>!e.startsWith(".")&&e.includes("."),sg=e=>e!=="."&&e!==".."&&e.includes("."),og=/^\.\*+$/,ng=e=>e!=="."&&e!==".."&&e.startsWith("."),ig=/^\*+$/,ag=e=>e.length!==0&&!e.startsWith("."),cg=e=>e.length!==0&&e!=="."&&e!=="..",ug=/^\?+([^+@!?\*\[\(]*)?$/,lg=([e,t=""])=>{let r=ya([e]);return t?(t=t.toLowerCase(),s=>r(s)&&s.toLowerCase().endsWith(t)):r},pg=([e,t=""])=>{let r=ka([e]);return t?(t=t.toLowerCase(),s=>r(s)&&s.toLowerCase().endsWith(t)):r},dg=([e,t=""])=>{let r=ka([e]);return t?s=>r(s)&&s.endsWith(t):r},gg=([e,t=""])=>{let r=ya([e]);return t?s=>r(s)&&s.endsWith(t):r},ya=([e])=>{let t=e.length;return r=>r.length===t&&!r.startsWith(".")},ka=([e])=>{let t=e.length;return r=>r.length===t&&r!=="."&&r!==".."},Ga=typeof process=="object"&&process?typeof process.env=="object"&&process.env&&process.env.__MINIMATCH_TESTING_PLATFORM__||process.platform:"posix",ba={win32:{sep:"\\"},posix:{sep:"/"}},mg=Ga==="win32"?ba.win32.sep:ba.posix.sep;q.sep=mg;var ie=Symbol("globstar **");q.GLOBSTAR=ie;var hg="[^/]",fg=hg+"*?",Tg="(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?",Eg="(?:(?!(?:\\/|^)\\.).)*?",wg=(e,t={})=>r=>q(r,e,t);q.filter=wg;var ne=(e,t={})=>Object.assign({},e,t),bg=e=>{if(!e||typeof e!="object"||!Object.keys(e).length)return q;let t=q;return Object.assign((s,o,n={})=>t(s,o,ne(e,n)),{Minimatch:class extends t.Minimatch{constructor(o,n={}){super(o,ne(e,n))}static defaults(o){return t.defaults(ne(e,o)).Minimatch}},AST:class extends t.AST{constructor(o,n,i={}){super(o,n,ne(e,i))}static fromGlob(o,n={}){return t.AST.fromGlob(o,ne(e,n))}},unescape:(s,o={})=>t.unescape(s,ne(e,o)),escape:(s,o={})=>t.escape(s,ne(e,o)),filter:(s,o={})=>t.filter(s,ne(e,o)),defaults:s=>t.defaults(ne(e,s)),makeRe:(s,o={})=>t.makeRe(s,ne(e,o)),braceExpand:(s,o={})=>t.braceExpand(s,ne(e,o)),match:(s,o,n={})=>t.match(s,o,ne(e,n)),sep:t.sep,GLOBSTAR:ie})};q.defaults=bg;var Sa=(e,t={})=>(wt(e),t.nobrace||!/\{(?:(?!\{).)*\}/.test(e)?[e]:(0,_a.default)(e));q.braceExpand=Sa;var vg=(e,t={})=>new Qe(e,t).makeRe();q.makeRe=vg;var _g=(e,t,r={})=>{let s=new Qe(t,r);return e=e.filter(o=>s.match(o)),s.options.nonull&&!e.length&&e.push(t),e};q.match=_g;var va=/[?*]|[+@!]\(.*?\)|\[|\]/,yg=e=>e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),Qe=class{options;set;pattern;windowsPathsNoEscape;nonegate;negate;comment;empty;preserveMultipleSlashes;partial;globSet;globParts;nocase;isWindows;platform;windowsNoMagicRoot;regexp;constructor(t,r={}){wt(t),r=r||{},this.options=r,this.pattern=t,this.platform=r.platform||Ga,this.isWindows=this.platform==="win32",this.windowsPathsNoEscape=!!r.windowsPathsNoEscape||r.allowWindowsEscape===!1,this.windowsPathsNoEscape&&(this.pattern=this.pattern.replace(/\\/g,"/")),this.preserveMultipleSlashes=!!r.preserveMultipleSlashes,this.regexp=null,this.negate=!1,this.nonegate=!!r.nonegate,this.comment=!1,this.empty=!1,this.partial=!!r.partial,this.nocase=!!this.options.nocase,this.windowsNoMagicRoot=r.windowsNoMagicRoot!==void 0?r.windowsNoMagicRoot:!!(this.isWindows&&this.nocase),this.globSet=[],this.globParts=[],this.set=[],this.make()}hasMagic(){if(this.options.magicalBraces&&this.set.length>1)return!0;for(let t of this.set)for(let r of t)if(typeof r!="string")return!0;return!1}debug(...t){}make(){let t=this.pattern,r=this.options;if(!r.nocomment&&t.charAt(0)==="#"){this.comment=!0;return}if(!t){this.empty=!0;return}this.parseNegate(),this.globSet=[...new Set(this.braceExpand())],r.debug&&(this.debug=(...n)=>console.error(...n)),this.debug(this.pattern,this.globSet);let s=this.globSet.map(n=>this.slashSplit(n));this.globParts=this.preprocess(s),this.debug(this.pattern,this.globParts);let o=this.globParts.map((n,i,a)=>{if(this.isWindows&&this.windowsNoMagicRoot){let c=n[0]===""&&n[1]===""&&(n[2]==="?"||!va.test(n[2]))&&!va.test(n[3]),l=/^[a-z]:/i.test(n[0]);if(c)return[...n.slice(0,4),...n.slice(4).map(u=>this.parse(u))];if(l)return[n[0],...n.slice(1).map(u=>this.parse(u))]}return n.map(c=>this.parse(c))});if(this.debug(this.pattern,o),this.set=o.filter(n=>n.indexOf(!1)===-1),this.isWindows)for(let n=0;n<this.set.length;n++){let i=this.set[n];i[0]===""&&i[1]===""&&this.globParts[n][2]==="?"&&typeof i[3]=="string"&&/^[a-z]:$/i.test(i[3])&&(i[2]="?")}this.debug(this.pattern,this.set)}preprocess(t){if(this.options.noglobstar)for(let s=0;s<t.length;s++)for(let o=0;o<t[s].length;o++)t[s][o]==="**"&&(t[s][o]="*");let{optimizationLevel:r=1}=this.options;return r>=2?(t=this.firstPhasePreProcess(t),t=this.secondPhasePreProcess(t)):r>=1?t=this.levelOneOptimize(t):t=this.adjascentGlobstarOptimize(t),t}adjascentGlobstarOptimize(t){return t.map(r=>{let s=-1;for(;(s=r.indexOf("**",s+1))!==-1;){let o=s;for(;r[o+1]==="**";)o++;o!==s&&r.splice(s,o-s)}return r})}levelOneOptimize(t){return t.map(r=>(r=r.reduce((s,o)=>{let n=s[s.length-1];return o==="**"&&n==="**"?s:o===".."&&n&&n!==".."&&n!=="."&&n!=="**"?(s.pop(),s):(s.push(o),s)},[]),r.length===0?[""]:r))}levelTwoFileOptimize(t){Array.isArray(t)||(t=this.slashSplit(t));let r=!1;do{if(r=!1,!this.preserveMultipleSlashes){for(let o=1;o<t.length-1;o++){let n=t[o];o===1&&n===""&&t[0]===""||(n==="."||n==="")&&(r=!0,t.splice(o,1),o--)}t[0]==="."&&t.length===2&&(t[1]==="."||t[1]==="")&&(r=!0,t.pop())}let s=0;for(;(s=t.indexOf("..",s+1))!==-1;){let o=t[s-1];o&&o!=="."&&o!==".."&&o!=="**"&&(r=!0,t.splice(s-1,2),s-=2)}}while(r);return t.length===0?[""]:t}firstPhasePreProcess(t){let r=!1;do{r=!1;for(let s of t){let o=-1;for(;(o=s.indexOf("**",o+1))!==-1;){let i=o;for(;s[i+1]==="**";)i++;i>o&&s.splice(o+1,i-o);let a=s[o+1],c=s[o+2],l=s[o+3];if(a!==".."||!c||c==="."||c===".."||!l||l==="."||l==="..")continue;r=!0,s.splice(o,1);let u=s.slice(0);u[o]="**",t.push(u),o--}if(!this.preserveMultipleSlashes){for(let i=1;i<s.length-1;i++){let a=s[i];i===1&&a===""&&s[0]===""||(a==="."||a==="")&&(r=!0,s.splice(i,1),i--)}s[0]==="."&&s.length===2&&(s[1]==="."||s[1]==="")&&(r=!0,s.pop())}let n=0;for(;(n=s.indexOf("..",n+1))!==-1;){let i=s[n-1];if(i&&i!=="."&&i!==".."&&i!=="**"){r=!0;let c=n===1&&s[n+1]==="**"?["."]:[];s.splice(n-1,2,...c),s.length===0&&s.push(""),n-=2}}}}while(r);return t}secondPhasePreProcess(t){for(let r=0;r<t.length-1;r++)for(let s=r+1;s<t.length;s++){let o=this.partsMatch(t[r],t[s],!this.preserveMultipleSlashes);if(o){t[r]=[],t[s]=o;break}}return t.filter(r=>r.length)}partsMatch(t,r,s=!1){let o=0,n=0,i=[],a="";for(;o<t.length&&n<r.length;)if(t[o]===r[n])i.push(a==="b"?r[n]:t[o]),o++,n++;else if(s&&t[o]==="**"&&r[n]===t[o+1])i.push(t[o]),o++;else if(s&&r[n]==="**"&&t[o]===r[n+1])i.push(r[n]),n++;else if(t[o]==="*"&&r[n]&&(this.options.dot||!r[n].startsWith("."))&&r[n]!=="**"){if(a==="b")return!1;a="a",i.push(t[o]),o++,n++}else if(r[n]==="*"&&t[o]&&(this.options.dot||!t[o].startsWith("."))&&t[o]!=="**"){if(a==="a")return!1;a="b",i.push(r[n]),o++,n++}else return!1;return t.length===r.length&&i}parseNegate(){if(this.nonegate)return;let t=this.pattern,r=!1,s=0;for(let o=0;o<t.length&&t.charAt(o)==="!";o++)r=!r,s++;s&&(this.pattern=t.slice(s)),this.negate=r}matchOne(t,r,s=!1){let o=this.options;if(this.isWindows){let T=typeof t[0]=="string"&&/^[a-z]:$/i.test(t[0]),w=!T&&t[0]===""&&t[1]===""&&t[2]==="?"&&/^[a-z]:$/i.test(t[3]),_=typeof r[0]=="string"&&/^[a-z]:$/i.test(r[0]),D=!_&&r[0]===""&&r[1]===""&&r[2]==="?"&&typeof r[3]=="string"&&/^[a-z]:$/i.test(r[3]),W=w?3:T?0:void 0,z=D?3:_?0:void 0;if(typeof W=="number"&&typeof z=="number"){let[ae,M]=[t[W],r[z]];ae.toLowerCase()===M.toLowerCase()&&(r[z]=ae,z>W?r=r.slice(z):W>z&&(t=t.slice(W)))}}let{optimizationLevel:n=1}=this.options;n>=2&&(t=this.levelTwoFileOptimize(t)),this.debug("matchOne",this,{file:t,pattern:r}),this.debug("matchOne",t.length,r.length);for(var i=0,a=0,c=t.length,l=r.length;i<c&&a<l;i++,a++){this.debug("matchOne loop");var u=r[a],p=t[i];if(this.debug(r,u,p),u===!1)return!1;if(u===ie){this.debug("GLOBSTAR",[r,u,p]);var d=i,g=a+1;if(g===l){for(this.debug("** at the end");i<c;i++)if(t[i]==="."||t[i]===".."||!o.dot&&t[i].charAt(0)===".")return!1;return!0}for(;d<c;){var k=t[d];if(this.debug(`
globstar while`,t,d,r,g,k),this.matchOne(t.slice(d),r.slice(g),s))return this.debug("globstar found match!",d,c,k),!0;if(k==="."||k===".."||!o.dot&&k.charAt(0)==="."){this.debug("dot detected!",t,d,r,g);break}this.debug("globstar swallow a segment, and continue"),d++}return!!(s&&(this.debug(`
>>> no match, partial?`,t,d,r,g),d===c))}let T;if(typeof u=="string"?(T=p===u,this.debug("string match",u,p,T)):(T=u.test(p),this.debug("pattern match",u,p,T)),!T)return!1}if(i===c&&a===l)return!0;if(i===c)return s;if(a===l)return i===c-1&&t[i]==="";throw new Error("wtf?")}braceExpand(){return Sa(this.pattern,this.options)}parse(t){wt(t);let r=this.options;if(t==="**")return ie;if(t==="")return"";let s,o=null;(s=t.match(ig))?o=r.dot?cg:ag:(s=t.match(Jd))?o=(r.nocase?r.dot?eg:Zd:r.dot?Qd:Xd)(s[1]):(s=t.match(ug))?o=(r.nocase?r.dot?pg:lg:r.dot?dg:gg)(s):(s=t.match(tg))?o=r.dot?sg:rg:(s=t.match(og))&&(o=ng);let n=Xe.fromGlob(t,this.options).toMMPattern();return o&&typeof n=="object"&&Reflect.defineProperty(n,"test",{value:o}),n}makeRe(){if(this.regexp||this.regexp===!1)return this.regexp;let t=this.set;if(!t.length)return this.regexp=!1,this.regexp;let r=this.options,s=r.noglobstar?fg:r.dot?Tg:Eg,o=new Set(r.nocase?["i"]:[]),n=t.map(c=>{let l=c.map(u=>{if(u instanceof RegExp)for(let p of u.flags.split(""))o.add(p);return typeof u=="string"?yg(u):u===ie?ie:u._src});return l.forEach((u,p)=>{let d=l[p+1],g=l[p-1];u!==ie||g===ie||(g===void 0?d!==void 0&&d!==ie?l[p+1]="(?:\\/|"+s+"\\/)?"+d:l[p]=s:d===void 0?l[p-1]=g+"(?:\\/|"+s+")?":d!==ie&&(l[p-1]=g+"(?:\\/|\\/"+s+"\\/)"+d,l[p+1]=ie))}),l.filter(u=>u!==ie).join("/")}).join("|"),[i,a]=t.length>1?["(?:",")"]:["",""];n="^"+i+n+a+"$",this.negate&&(n="^(?!"+n+").+$");try{this.regexp=new RegExp(n,[...o].join(""))}catch{this.regexp=!1}return this.regexp}slashSplit(t){return this.preserveMultipleSlashes?t.split("/"):this.isWindows&&/^\/\/[^\/]+/.test(t)?["",...t.split(/\/+/)]:t.split(/\/+/)}match(t,r=this.partial){if(this.debug("match",t,this.pattern),this.comment)return!1;if(this.empty)return t==="";if(t==="/"&&r)return!0;let s=this.options;this.isWindows&&(t=t.split("\\").join("/"));let o=this.slashSplit(t);this.debug(this.pattern,"split",o);let n=this.set;this.debug(this.pattern,"set",n);let i=o[o.length-1];if(!i)for(let a=o.length-2;!i&&a>=0;a--)i=o[a];for(let a=0;a<n.length;a++){let c=n[a],l=o;if(s.matchBase&&c.length===1&&(l=[i]),this.matchOne(l,c,r))return s.flipNegate?!0:!this.negate}return s.flipNegate?!1:this.negate}static defaults(t){return q.defaults(t).Minimatch}};q.AST=Xe;q.Minimatch=Qe;q.escape=ys;q.unescape=ye;var sr=class extends Ca.EventEmitter{constructor(r){super();this.changes=new Map;this.excludePatterns=[];this.outputChannel=r,this.initializeWatcher()}initializeWatcher(){let r=rr.workspace.getConfiguration("devtrack");this.excludePatterns=r.get("exclude")||[],this.watcher=rr.workspace.createFileSystemWatcher("**/*",!1,!1,!1),this.watcher.onDidChange(s=>this.handleChange(s,"changed")),this.watcher.onDidCreate(s=>this.handleChange(s,"added")),this.watcher.onDidDelete(s=>this.handleChange(s,"deleted")),this.outputChannel.appendLine("DevTrack: File system watcher initialized.")}handleChange(r,s){var o;try{let n=rr.workspace.asRelativePath(r);if(!this.excludePatterns.some(a=>q(n,a))){let a=(o=r.fsPath.split(".").pop())==null?void 0:o.toLowerCase();if(a&&["ts","js","py","java","c","cpp","h","hpp","css","scss","html","jsx","tsx","vue","php","rb","go","rs","swift","md","json","yml","yaml"].includes(a)){let l=r.fsPath,u=this.changes.get(l);u&&(u.type==="deleted"&&s==="added"||u.type==="added"&&s==="changed")&&(s="added");let p={uri:r,timestamp:new Date,type:s};this.changes.set(l,p),this.emit("change",p),this.outputChannel.appendLine(`DevTrack: Detected ${s} in ${n}`)}}}catch(n){this.outputChannel.appendLine(`DevTrack: Error handling file change: ${n}`)}}getChangedFiles(){return Array.from(this.changes.values())}clearChanges(){this.changes.clear(),this.outputChannel.appendLine("DevTrack: Cleared tracked changes.")}updateExcludePatterns(r){this.excludePatterns=r,this.outputChannel.appendLine("DevTrack: Updated exclude patterns.")}dispose(){this.watcher.dispose(),this.outputChannel.appendLine("DevTrack: Disposed file system watcher.")}};var Pa=$(require("vscode")),Oa=$(require("path"));var Ze=$(require("vscode")),nr=$(require("path")),or=class{constructor(t,r){this.commitHistory=[];this.projectStats={mostChangedFiles:new Map,recentMilestones:[],activeBranch:"",lastCommitTime:new Date};this.outputChannel=t,this.extensionContext=r,this.loadContext()}async loadContext(){try{await this.loadGitHistory(),await this.updateProjectStats(),this.outputChannel.appendLine("DevTrack: Loaded project context")}catch(t){this.outputChannel.appendLine(`DevTrack: Error loading context: ${t}`)}}async loadGitHistory(){try{let t=Ze.extensions.getExtension("vscode.git");if(t){let r=t.exports.getAPI(1);if(r.repositories.length>0){let o=await r.repositories[0].log({maxEntries:50});this.commitHistory=o.map(n=>{var i;return{timestamp:n.commitDate.getTime(),summary:n.message,files:((i=n.files)==null?void 0:i.map(a=>Ze.workspace.asRelativePath(a.uri)))||[],hash:n.hash}})}}}catch(t){this.outputChannel.appendLine(`DevTrack: Error loading git history: ${t}`)}}shouldTrackFile(t){let r=["node_modules",".git",".DS_Store","dist","out","build",".vscode"],s=nr.extname(t).toLowerCase().slice(1),o=["ts","js","py","java","c","cpp","h","hpp","css","scss","html","jsx","tsx","vue","php","rb","go","rs","swift","md","json","yml","yaml"];return!r.some(n=>t.includes(n))&&!!s&&o.includes(s)}async addCommit(t,r){try{let s=r.map(n=>Ze.workspace.asRelativePath(n.uri)).filter(n=>this.shouldTrackFile(n)),o={timestamp:Date.now(),summary:t,files:s};await this.loadGitHistory(),await this.updateProjectStats()}catch(s){this.outputChannel.appendLine(`DevTrack: Error adding commit: ${s}`)}}async updateProjectStats(){var t,r;try{let s=new Map;this.commitHistory.forEach(i=>{i.files.forEach(a=>{if(this.shouldTrackFile(a)){let c=s.get(a)||0;s.set(a,c+1)}})});let o=new Map([...s.entries()].sort((i,a)=>a[1]-i[1]).slice(0,10)),n="";try{let i=Ze.extensions.getExtension("vscode.git");if(i){let a=i.exports.getAPI(1);a.repositories.length>0&&(n=((t=a.repositories[0].state.HEAD)==null?void 0:t.name)||"")}}catch(i){this.outputChannel.appendLine(`DevTrack: Error getting git branch: ${i}`)}this.projectStats={mostChangedFiles:o,recentMilestones:[],activeBranch:n,lastCommitTime:new Date(((r=this.commitHistory[0])==null?void 0:r.timestamp)||Date.now())}}catch(s){this.outputChannel.appendLine(`DevTrack: Error updating project stats: ${s}`)}}getContextForSummary(t){let r="";try{let s=t.map(o=>nr.basename(o.uri.fsPath)).filter((o,n,i)=>i.indexOf(o)===n);s.length>0&&(r+=`Files: ${s.join(", ")}. `),this.projectStats.activeBranch&&(r+=`[${this.projectStats.activeBranch}] `)}catch(s){this.outputChannel.appendLine(`DevTrack: Error generating context summary: ${s}`)}return r}};var ir=class{constructor(t,r){this.outputChannel=t,this.projectContext=new or(t,r)}async getFileChanges(t){try{let r=t.type==="added"?void 0:t.uri,s=t.type==="deleted"?void 0:t.uri;if(!r&&!s)return"";let o=Pa.extensions.getExtension("vscode.git");if(!o)return"";let n=o.exports.getAPI(1);if(!n.repositories.length)return"";let a=await n.repositories[0].diff(r,s);return this.parseDiff(a,Oa.basename(t.uri.fsPath))}catch(r){return this.outputChannel.appendLine(`Error getting file changes: ${r}`),""}}parseDiff(t,r){if(!t)return r;let s=t.split(`
`),o={modified:new Set,added:new Set,removed:new Set},n="";for(let a of s){if(!a.trim()||a.match(/^[\+\-]\s*\/\//))continue;let c=a.match(/^([\+\-])\s*(async\s+)?((function|class|const|let|var)\s+)?([a-zA-Z_$][a-zA-Z0-9_$]*)/);if(c){let[l,u,p,d,g,k]=c;u==="+"?o.added.add(k):u==="-"&&o.removed.add(k),o.added.has(k)&&o.removed.has(k)&&(o.modified.add(k),o.added.delete(k),o.removed.delete(k));continue}}let i=[];return o.modified.size>0&&i.push(`modified ${Array.from(o.modified).join(", ")}`),o.added.size>0&&i.push(`added ${Array.from(o.added).join(", ")}`),o.removed.size>0&&i.push(`removed ${Array.from(o.removed).join(", ")}`),i.length>0?`${r} (${i.join("; ")})`:r}async generateSummary(t){try{let s=(await Promise.all(t.map(i=>this.getFileChanges(i)))).filter(Boolean),o=this.projectContext.getContextForSummary(t),n="DevTrack:";if(o&&(n+=` ${o}`),s.length>0)n+=` | Changes in: ${s.join("; ")}`;else{let i=this.calculateChangeStats(t),a=[];i.added>0&&a.push(`${i.added} files added`),i.modified>0&&a.push(`${i.modified} files modified`),i.deleted>0&&a.push(`${i.deleted} files deleted`),n+=` | ${a.join(", ")}`}return await this.projectContext.addCommit(n,t),this.outputChannel.appendLine(`DevTrack: Generated commit summary: "${n}"`),n}catch(r){return this.outputChannel.appendLine(`DevTrack: Error generating summary: ${r}`),"DevTrack: Updated files"}}calculateChangeStats(t){return{added:t.filter(r=>r.type==="added").length,modified:t.filter(r=>r.type==="changed").length,deleted:t.filter(r=>r.type==="deleted").length}}};var _t=$(require("vscode")),ar=class{constructor(t,r,s,o,n){this.commitFrequency=t;this.tracker=r;this.summaryGenerator=s;this.gitService=o;this.outputChannel=n;this.timer=null;this.isCommitting=!1;this.pendingChanges=!1}start(){this.timer&&clearInterval(this.timer),this.timer=setInterval(()=>this.commitChanges(),this.commitFrequency*60*1e3),this.outputChannel.appendLine(`Scheduler: Started with a frequency of ${this.commitFrequency} minutes.`)}stop(){this.timer&&(clearInterval(this.timer),this.timer=null,this.outputChannel.appendLine("Scheduler: Stopped."))}async commitChanges(){if(this.isCommitting){this.pendingChanges=!0,this.outputChannel.appendLine("Scheduler: Commit already in progress, queuing changes.");return}let t=this.tracker.getChangedFiles();if(t.length===0){this.outputChannel.appendLine("Scheduler: No changes detected.");return}try{this.isCommitting=!0;let r=await this.summaryGenerator.generateSummary(t);if(_t.workspace.getConfiguration("devtrack").get("confirmBeforeCommit",!0)&&await _t.window.showInformationMessage(`DevTrack: A commit will be made with the following message:
"${r}"`,{modal:!0},"Proceed","Cancel")!=="Proceed"){this.outputChannel.appendLine("Scheduler: Commit canceled by the user.");return}await this.gitService.commitAndPush(r),this.tracker.clearChanges(),this.outputChannel.appendLine(`Scheduler: Committed changes with message "${r}".`)}catch(r){this.outputChannel.appendLine(`Scheduler: Failed to commit changes. ${r.message}`),_t.window.showErrorMessage(`DevTrack: Commit failed. ${r.message}`)}finally{this.isCommitting=!1,this.pendingChanges&&(this.pendingChanges=!1,this.outputChannel.appendLine("Scheduler: Processing pending changes..."),setTimeout(()=>this.commitChanges(),5e3))}}updateFrequency(t){this.commitFrequency=t,this.start(),this.outputChannel.appendLine(`Scheduler: Updated commit frequency to ${t} minutes.`)}};var Fa=require("child_process"),et=class{static async checkGitInstallation(t){try{let r=(0,Fa.execSync)("git --version",{encoding:"utf8"});return t.appendLine(`DevTrack: Git found - ${r.trim()}`),!0}catch{let s=process.platform,o=await v.window.showErrorMessage("Git is required but not found on your system. This might be because Git is not installed or not in your system PATH.",{modal:!0,detail:"Would you like to view the installation guide or fix PATH issues?"},...s==="win32"?["Show Installation Guide","Fix PATH Issue","Cancel"]:["Show Installation Guide","Cancel"]);return o==="Show Installation Guide"?this.showInstallationGuide():o==="Fix PATH Issue"&&this.showPathFixGuide(),!1}}static showPathFixGuide(){let t=v.window.createWebviewPanel("gitPathGuide","Fix Git PATH Issue",v.ViewColumn.One,{enableScripts:!0}),r=`<!DOCTYPE html>
    <html>
    <head>
        <style>
            body { 
                padding: 20px; 
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
                line-height: 1.6;
            }
            .step {
                margin-bottom: 20px;
                padding: 15px;
                background-color: #f3f3f3;
                border-radius: 5px;
            }
            .warning {
                color: #856404;
                background-color: #fff3cd;
                border: 1px solid #ffeeba;
                padding: 10px;
                border-radius: 5px;
                margin: 10px 0;
            }
            .tip {
                color: #004085;
                background-color: #cce5ff;
                border: 1px solid #b8daff;
                padding: 10px;
                border-radius: 5px;
                margin: 10px 0;
            }
            img {
                max-width: 100%;
                margin: 10px 0;
                border: 1px solid #ddd;
                border-radius: 4px;
                padding: 5px;
            }
        </style>
    </head>
    <body>
        <h1>Adding Git to System PATH</h1>
        
        <div class="warning">
            \u26A0\uFE0F Before proceeding, make sure Git is installed on your system. If not, please install it first.
        </div>

        <div class="step">
            <h3>Step 1: Open System Properties</h3>
            <ul>
                <li>Press <strong>Windows + R</strong> to open Run dialog</li>
                <li>Type <strong>sysdm.cpl</strong> and press Enter</li>
                <li>Go to the <strong>Advanced</strong> tab</li>
                <li>Click <strong>Environment Variables</strong> at the bottom</li>
            </ul>
        </div>

        <div class="step">
            <h3>Step 2: Edit PATH Variable</h3>
            <ul>
                <li>Under <strong>System Variables</strong>, find and select <strong>Path</strong></li>
                <li>Click <strong>Edit</strong></li>
                <li>Click <strong>New</strong></li>
                <li>Add the following paths (if they don't already exist):
                    <ul>
                        <li>C:\\Program Files\\Git\\cmd</li>
                        <li>C:\\Program Files\\Git\\bin</li>
                        <li>C:\\Program Files (x86)\\Git\\cmd</li>
                    </ul>
                </li>
                <li>Click <strong>OK</strong> on all windows</li>
            </ul>
        </div>

        <div class="step">
            <h3>Step 3: Verify Installation</h3>
            <ul>
                <li>Open a <strong>new</strong> Command Prompt or PowerShell window</li>
                <li>Type <strong>git --version</strong> and press Enter</li>
                <li>If you see a version number, Git is successfully added to PATH</li>
            </ul>
        </div>

        <div class="tip">
            \u{1F4A1} Tip: If Git is installed in a different location, you'll need to add that path instead. 
            Common alternative locations:
            <ul>
                <li>C:\\Program Files\\Git\\cmd</li>
                <li>C:\\Users\\[YourUsername]\\AppData\\Local\\Programs\\Git\\cmd</li>
            </ul>
        </div>

        <div class="warning">
            Important: After updating the PATH, you need to:
            <ol>
                <li>Close and reopen VS Code</li>
                <li>Close and reopen any open terminal windows</li>
            </ol>
        </div>
    </body>
    </html>`;t.webview.html=r}static showInstallationGuide(){let t=process.platform,r=this.DOWNLOAD_URLS[t],s=this.getInstructions(t),o=v.window.createWebviewPanel("gitInstallGuide","Git Installation Guide",v.ViewColumn.One,{enableScripts:!0});o.webview.html=this.getWebviewContent(s,r)}static getInstructions(t){let r={win32:`Windows Git Installation Guide:
1. Download Git from ${this.DOWNLOAD_URLS.win32}
2. Run the installer
3. During installation:
   - Choose "Git from the command line and also from 3rd-party software"
   - Choose "Use Windows' default console window"
   - Choose "Enable Git Credential Manager"
4. Important: On the "Adjusting your PATH environment" step:
   - Select "Git from the command line and also from 3rd-party software"
5. Complete the installation
6. Verify installation:
   - Open a new Command Prompt or PowerShell
   - Type 'git --version'`,darwin:`Mac Git Installation Guide:
Option 1 - Using Homebrew (Recommended):
1. Open Terminal
2. Install Homebrew if not installed:
   /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
3. Install Git:
   brew install git

Option 2 - Direct Download:
1. Download Git from ${this.DOWNLOAD_URLS.darwin}
2. Open the downloaded .dmg file
3. Run the installer package`,linux:`Linux Git Installation Guide:
Debian/Ubuntu:
1. Open Terminal
2. Run: sudo apt-get update
3. Run: sudo apt-get install git

Fedora:
1. Open Terminal
2. Run: sudo dnf install git`};return r[t]||r.linux}static getWebviewContent(t,r){return`<!DOCTYPE html>
    <html>
    <head>
        <style>
            body { 
                padding: 20px; 
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; 
                line-height: 1.6;
            }
            pre { 
                white-space: pre-wrap; 
                background-color: #f3f3f3; 
                padding: 15px; 
                border-radius: 5px; 
            }
            .download-btn { 
                padding: 10px 20px; 
                background-color: #007acc; 
                color: white; 
                border: none; 
                border-radius: 5px;
                cursor: pointer;
                margin-top: 20px;
                text-decoration: none;
                display: inline-block;
            }
            .download-btn:hover { 
                background-color: #005999; 
            }
            .tip {
                background-color: #e8f5e9;
                padding: 10px;
                border-radius: 5px;
                margin: 10px 0;
            }
        </style>
    </head>
    <body>
        <h1>Git Installation Guide</h1>
        <pre>${t}</pre>
        <div class="tip">
            <strong>Tip:</strong> After installation, if Git is not recognized:
            <ul>
                <li>Make sure to restart VS Code</li>
                <li>Open a new terminal window</li>
                <li>If still not working, you might need to add Git to your PATH</li>
            </ul>
        </div>
        <a href="${r}" class="download-btn" target="_blank">Download Git</a>
    </body>
    </html>`}};et.DOWNLOAD_URLS={win32:"https://git-scm.com/download/win",darwin:"https://git-scm.com/download/mac",linux:"https://git-scm.com/download/linux"};function kg(e){let t="Welcome to DevTrack! Would you like to set up automatic code tracking?",r=`
To get started with DevTrack, you'll need:
1. A GitHub account
2. An open workspace/folder
3. Git installed on your system (Download from https://git-scm.com/downloads)

DevTrack will:
- Create a private GitHub repository to store your coding activity
- Automatically track and commit your changes
- Generate detailed summaries of your work
  `;et.checkGitInstallation(e).then(s=>{s&&v.window.showInformationMessage(t,"Get Started","Learn More","Later").then(o=>{o==="Get Started"?v.commands.executeCommand("devtrack.login"):o==="Learn More"&&v.window.showInformationMessage(r,"Set Up Now","Later").then(n=>{n==="Set Up Now"&&v.commands.executeCommand("devtrack.login")})})})}async function Gg(e){let t=await Cg(e);t&&(Og(e,t),Dg(t),Lg(e,t))}async function Sg(e,t){var r,s;try{let o=await v.authentication.getSession("github",["repo","read:user"],{createIfNone:!1,silent:!0});if(o){t.githubService.setToken(o.accessToken);let n=await t.githubService.getUsername();if(n){let i=e.globalState.get("devtrackAuthState"),a=(s=(r=v.workspace.workspaceFolders)==null?void 0:r[0])==null?void 0:s.uri.fsPath,l=v.workspace.getConfiguration("devtrack").get("repoName")||(i==null?void 0:i.repoName)||"code-tracking",u=`https://github.com/${n}/${l}.git`;return await Da(t,l,u),await xa(t),Ce(t,"auth",!0),Ce(t,"tracking",!0),await e.globalState.update("devtrackAuthState",{username:n,repoName:l,lastWorkspace:a}),t.outputChannel.appendLine("DevTrack: Successfully restored authentication state"),!0}}}catch(o){t.outputChannel.appendLine(`DevTrack: Error restoring auth state - ${o}`)}return!1}async function Cg(e){let t=v.window.createOutputChannel("DevTrack");e.subscriptions.push(t),t.appendLine("DevTrack: Extension activated.");let r={outputChannel:t,githubService:new Gt(t),gitService:new Zt(t),tracker:new sr(t),summaryGenerator:new ir(t,e),scheduler:null,trackingStatusBar:Aa("tracking"),authStatusBar:Aa("auth"),extensionContext:e};if(e.subscriptions.push(r.trackingStatusBar,r.authStatusBar),!await Sg(e,r)&&e.globalState.get("devtrackShouldPromptAuth",!0)){let n=await v.window.showInformationMessage("DevTrack needs to connect to GitHub. Would you like to connect now?","Yes","No","Don't Ask Again");n==="Yes"?v.commands.executeCommand("devtrack.login"):n==="Don't Ask Again"&&await e.globalState.update("devtrackShouldPromptAuth",!1)}return await Pg(r)?r:null}function Aa(e){let t=v.window.createStatusBarItem(v.StatusBarAlignment.Right,e==="tracking"?100:101);return e==="tracking"?(t.text="$(circle-slash) DevTrack: Stopped",t.tooltip="DevTrack: Tracking is stopped"):(t.text="$(mark-github) DevTrack: Not Connected",t.tooltip="DevTrack Status"),t.show(),t}async function Pg(e){let r=v.workspace.getConfiguration("devtrack").get("repoName")||"code-tracking";return!r||r.trim()===""?(v.window.showErrorMessage("DevTrack: Repository name is not set correctly in the configuration."),e.outputChannel.appendLine("DevTrack: Repository name is missing or invalid."),!1):!0}async function Og(e,t){let r=v.commands.registerCommand("devtrack.startTracking",async()=>{var i;try{if(!((i=v.workspace.workspaceFolders)!=null&&i.length))throw new Error("Please open a folder or workspace before starting tracking.");if(!await et.checkGitInstallation(t.outputChannel)||!await Fg(t))return;t.scheduler?(t.scheduler.start(),Ce(t,"tracking",!0),v.window.showInformationMessage("DevTrack: Tracking started."),t.outputChannel.appendLine("DevTrack: Tracking started manually.")):await v.window.showInformationMessage("DevTrack needs to be set up before starting. Would you like to set it up now?","Set Up DevTrack","Cancel")==="Set Up DevTrack"&&await Ra(t)}catch(a){ks(t,"Error starting tracking",a)}}),s=v.commands.registerCommand("devtrack.stopTracking",()=>{t.scheduler?(t.scheduler.stop(),Ce(t,"tracking",!1),v.window.showInformationMessage("DevTrack: Tracking stopped."),t.outputChannel.appendLine("DevTrack: Tracking stopped manually.")):(v.window.showErrorMessage("DevTrack: Please connect to GitHub first."),t.outputChannel.appendLine("DevTrack: Scheduler is not initialized."))}),o=v.commands.registerCommand("devtrack.login",async()=>{try{t.githubService.setToken(""),await v.authentication.getSession("github",["repo","read:user","user:email"],{forceNewSession:!0})?await Ra(t):(t.outputChannel.appendLine("DevTrack: GitHub connection canceled."),v.window.showInformationMessage("DevTrack: GitHub connection was canceled."))}catch(i){ks(t,"GitHub connection failed",i)}}),n=v.commands.registerCommand("devtrack.logout",()=>Ag(t));e.subscriptions.push(r,s,o,n)}async function Ra(e){var t,r;try{if(e.outputChannel.appendLine("DevTrack: Starting initialization..."),!await et.checkGitInstallation(e.outputChannel))throw new Error("Git must be installed before DevTrack can be initialized.");let s=await v.authentication.getSession("github",["repo","read:user","user:email"],{createIfNone:!0});if(!s)throw new Error("GitHub authentication is required to use DevTrack.");e.githubService.setToken(s.accessToken);let o=await e.githubService.getUsername();if(!o)throw new Error("Unable to retrieve GitHub username. Please try logging in again.");let i=v.workspace.getConfiguration("devtrack").get("repoName")||"code-tracking",a=`https://github.com/${o}/${i}.git`;await Da(e,i,a),await xa(e),await e.extensionContext.globalState.update("devtrackAuthState",{username:o,repoName:i,lastWorkspace:(r=(t=v.workspace.workspaceFolders)==null?void 0:t[0])==null?void 0:r.uri.fsPath}),Ce(e,"auth",!0),Ce(e,"tracking",!0),e.outputChannel.appendLine("DevTrack: Initialization completed successfully."),v.window.showInformationMessage("DevTrack has been set up successfully and tracking has started.")}catch(s){throw ks(e,"Initialization failed",s),s}}async function Da(e,t,r){if(!await e.githubService.repoExists(t)){if(!await e.githubService.createRepo(t))throw new Error("Failed to create GitHub repository. Please check your permissions.");e.outputChannel.appendLine(`DevTrack: Created new repository at ${r}`)}await e.gitService.initializeRepo(r)}async function xa(e){let r=v.workspace.getConfiguration("devtrack").get("commitFrequency")||30;e.scheduler=new ar(r,e.tracker,e.summaryGenerator,e.gitService,e.outputChannel),e.scheduler.start()}async function Ag(e){if(await v.window.showWarningMessage("Are you sure you want to logout from DevTrack?",{modal:!0},"Yes","No")!=="Yes"){e.outputChannel.appendLine("DevTrack: Logout canceled by user.");return}Rg(e),await v.window.showInformationMessage("DevTrack: Successfully logged out. Would you like to log in with a different account?","Yes","No")==="Yes"&&v.commands.executeCommand("devtrack.login")}function Rg(e){e.githubService.setToken(""),Ce(e,"auth",!1),Ce(e,"tracking",!1),e.scheduler&&(e.scheduler.stop(),e.scheduler=null),e.outputChannel.appendLine("DevTrack: Cleaned up services.")}function Ce(e,t,r){let{trackingStatusBar:s,authStatusBar:o}=e;t==="tracking"?(s.text=r?"$(clock) DevTrack: Tracking":"$(circle-slash) DevTrack: Stopped",s.tooltip=r?"DevTrack: Tracking your coding activity is active":"DevTrack: Tracking is stopped"):(o.text=r?"$(check) DevTrack: Connected":"$(mark-github) DevTrack: Not Connected",o.tooltip=r?"DevTrack is connected to GitHub":"DevTrack Status")}function ks(e,t,r){let s=r.message||"An unknown error occurred";e.outputChannel.appendLine(`DevTrack: ${t} - ${s}`),v.window.showErrorMessage(`DevTrack: ${s}`)}async function Fg(e){try{return!!await v.authentication.getSession("github",["repo","read:user","user:email"])}catch{return await v.window.showErrorMessage("DevTrack requires GitHub authentication. Would you like to sign in now?","Sign in to GitHub","Cancel")==="Sign in to GitHub"&&await v.commands.executeCommand("devtrack.login"),!1}}function Dg(e){v.workspace.onDidChangeConfiguration(t=>{t.affectsConfiguration("devtrack")&&xg(e)})}async function xg(e){let t=v.workspace.getConfiguration("devtrack");if(e.scheduler){let s=t.get("commitFrequency")||30;e.scheduler.updateFrequency(s),e.outputChannel.appendLine(`DevTrack: Commit frequency updated to ${s} minutes.`)}let r=t.get("exclude")||[];e.tracker.updateExcludePatterns(r),e.outputChannel.appendLine("DevTrack: Configuration updated.")}function Lg(e,t){e.globalState.get("devtrackWelcomeShown")||(kg(t.outputChannel),e.globalState.update("devtrackWelcomeShown",!0))}function Ug(){}0&&(module.exports={activate,deactivate});
